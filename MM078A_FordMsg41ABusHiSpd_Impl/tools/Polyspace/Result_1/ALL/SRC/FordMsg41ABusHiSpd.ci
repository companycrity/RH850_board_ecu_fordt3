# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c"
# 1 "__polyspace__internal_definitions.h" 1
/*
 *
 * This file and its contents are the property of The MathWorks, Inc.
 * 
 * This file contains confidential proprietary information.
 * The reproduction, distribution, utilization or the communication
 * of this file or any part thereof is strictly prohibited.
 * Offenders will be held liable for the payment of damages.
 *
 * Copyright 1999-2012 The MathWorks, Inc.
 *
 */

/*
  Polyspace internal definitions.

  __polyspace__internal_definitions.h

  Those declarations will be inserted on front of each preprocessed file, after the preprocessing,
  to prevent any change (with -D) of the types defined here. (C/8361)

  WARNING: as this file will not be preprocessed, it must not contain any preprocessing directive.
*/

/* Predeclare errno. Macros that would define errno will be deactivated */
extern int errno;

/*
 * Simulate Infinity values : HUGE_VAL/ HUGE_VALF/ HUGE_VALL
 */

extern volatile long double HUGE_VAL;
extern volatile long double HUGE_VALF;
extern volatile long double HUGE_VALL;

/*
 * FD_ISSET macro defined as stubbed function (see macros_to_deactivate.txt
 * and __polyspace__stdstubs.c). The 2nd argument is defined with 'void *' 
 * instead of 'fd_set *' which needs including non-ANSI C specified file 
 * <sys/time.h> (in fact, the conversion from 'fd_set *' to 'void *' is
 * implicite for all calls to FD_ISSET).
 */
extern int FD_ISSET(int fd, const void *fdset);

/*
 * Internal polyspace variable declarations.
*/
extern void **__polyspace_vararg;
extern int __polyspace_nb_varargs;
# 1 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__std_decls.h" 1
/* Copyright 1999-2013 The MathWorks, Inc. */

/* 
   Polyspace standard declarations.

   polyspace__std_decls.h

   Include those declarations at the beginning of each preprocessed file.

   WARNING: the declarations below must refer only to standard types 
   as we do not want to include possibly useless standard include files.
   For example, we do not refer to size_t in declaration of malloc.
*/




/* Include the macro for assert */
# 1 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\assert.h" 1
/* Copyright 1999-2013 The MathWorks, Inc. */
 
/*
  Polyspace include for assert.

  assert.h

  This include prevents the expansion of the assert macro. It is replaced by a call to an extern function.
*/




# 30 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\assert.h"

extern void assert(int);




# 20 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__std_decls.h" 2

/* stdarg.h */
/* Always include Polyspace stdarg.h to override specific OS stdarg.h */
# 1 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\stdarg.h" 1
/*
 *
 * This file and its contents are the property of The MathWorks, Inc.
 * 
 * This file contains confidential proprietary information.
 * The reproduction, distribution, utilization or the communication
 * of this file or any part thereof is strictly prohibited.
 * Offenders will be held liable for the payment of damages.
 *
 * Copyright 1999-2013 The MathWorks, Inc.
 *
 */
 
/*
  Polyspace include for varargs.

  stdarg.h

  This include is designed for SUIF compilation pass. SUIF will replace the '...' by an argument called __polyspace_vararg of type void**.
*/


/* Prevent other libs from defining the types and macros about varargs */
# 31 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\stdarg.h"














typedef void *__va_list;



typedef __va_list va_list;
typedef __va_list __gnuc_va_list;

# 59 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\stdarg.h"



# 81 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\stdarg.h"

extern void **__polyspace_vararg; /* just there to avoid compiling errors */
extern int _polyspace_vararg_position; extern volatile int _polyspace_vararg_p0;
extern va_list __polyspace_va_arg_incr(va_list *);

/* __polyspace_vararg will be added by suif in replacement of '...' */









# 107 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\stdarg.h"


# 24 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__std_decls.h" 2






/* stdlib.h */
/* Those are necessary to prevent problems at the link */
extern void *malloc();
extern void *calloc();
extern void *realloc();
extern void *valloc();
extern void *alloca();
extern void *__builtin_alloca();


/*
 * KEIL & IAR DECLARATIONS :
 */

/* If NOEXTEND is used, there is no need to redefine Keil extensions because */
/* the Keil specifications indicate that they are deactivated.               */
# 92 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__std_decls.h"


# 154 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__std_decls.h"

# 329 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__std_decls.h"

# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c" 2
# 1 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__libc_defs.h" 1
/* Copyright 2012 The Mathworks, Inc. */


/* already defined when running through polyspace-configure to avoid conflict with headers */


/*
 * Polyspace definitions for the LIBC.
 *
 * __polyspace__libc_defs.h
 *
 * This file aims at doing the necessary defines to prevent most compilation
 * problems with the LIBC header files.
 *
 * The file is automatically included in top of each source file when, either
 * the option -OS-target linux is set or the option -OS-target no-predefined-OS
 * is set and the option -no-default-system-includes is not set.
 */

/*
 * The list was obtained by running the following commands:
 * $ gcc -x c -m(32|64) [--std=c89] -dM -E - < /dev/null | sort
 * $ g++ -x c++ -m(32|64) [--std=c++98] -dM -E - < /dev/null | grep -vw __cplusplus | sort
 *
 * The output of the 4 commands was merged using conditional preprocessing that relies on the
 * following #defines:
 * -D __cplusplus  : when calling 'g++'
 * -D __MW_C89__   : when calling 'gcc --std=c89'
 * -D __MW_CXX98__ : when calling 'g++ -std=c++98'
 * -D __MW_I386__  : when calling 'gcc' or 'g++' with -m32
 * -D __MW_X86_64__ : when calling 'gcc' or 'g++' with -m64
 *
 * Additional processing was then performed to handle other targets and dialects using the
 * shipped set of system headers and take into account the macros that are automatically
 * predefined by the front-end:
 * -D __MW_GNU__ : when the GNU dialect is enabled
 * -D __OS_LINUX : when the option -OS-target linux is set
 */

/* Compiler identification (used in various GLIBC headers). */
/*
 * Those are automatically predefined by the front-end when the GNU dialect is enabled:
#ifdef __MW_GNU__
# define __GNUC__            4
# define __GNUC_MINOR__      4
# define __GNUC_PATCHLEVEL__ 5
# define __VERSION__         "4.4.5"
# ifdef __cpluscplus
#  define __GNUG__           4
# endif
#endif / * defined(__MW_GNU__) * /
 */

/* Used in various GLIBC headers. */
/*
 * The following is automatically predefined by the front-end based on various settings (language, dialect...):
#define __STDC__               1
#define __STDC_HOSTED__        1
 */




  /* Only defined with 'gcc --std=c89' or 'g++ --std=c++98' */



/*
 * The following is automatically predefined by the front-end based when exceptions handling is enabled. 
#ifdef __cplusplus
# define __EXCEPTIONS 1
#endif
 */

/* Integer types (used in stddef.h). */
/*
 * Those are automatically predefined by the front-end:
#ifdef __MW_X86_64__
# define __SIZE_TYPE__    long unsigned int
# define __PTRDIFF_TYPE__ int
#else
# define __SIZE_TYPE__    unsigned int
# define __PTRDIFF_TYPE__ long int
#endif
 * The front-end defines _WCHAR_T when 'wchar_t' is a keyword:
#ifdef _WCHAR_T
# define __WCHAR_TYPE__   wchar_t
#else
# define __WCHAR_TYPE__   int
#endif
 */
/*
 * The following is automatically predefined by the front-end:
#define __WINT_TYPE__    unsigned int
 */

/* Integer limits (used in limits.h). */
/*
 * Those are automatically predefined by the front-end:
#define __CHAR_BIT__                         8
#define __SCHAR_MAX__                      127
#define __SHRT_MAX__                     32767
#define __INT_MAX__                 2147483647
#ifdef __MW_X86_64__
# define __LONG_MAX__      9223372036854775807L
#else
# define __LONG_MAX__               2147483647L
#endif
/ * The front-end defines __NO_LONG_LONG when 'long long' is disabled. * /
#ifndef __NO_LONG_LONG
# define __LONG_LONG_MAX__ 9223372036854775807LL
#endif
#define __WCHAR_MAX__               2147483647
 */

/* float limits (used in float.h). */
# 127 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__libc_defs.h"
/* float limits (used in libstdc++'s 'limits' file -> shipped as part of STL stubs). */





/* double limits (used in float.h). */
# 143 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__libc_defs.h"
/* double limits (used in libstdc++'s 'limits' file -> shipped as part of STL stubs). */





/* long double limits (used in float.h). */
# 159 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__libc_defs.h"
/* long double limits (used in libstdc++'s 'limits' file -> shipped as part of STL stubs). */
/*#define __LDBL_DENORM_MIN__    3.64519953188247460253e-4951L*/ /* this constant is too big for a 'long double' when running on Windows */




# 207 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__libc_defs.h"

/* Used in sys/cdefs.h */




# 322 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__libc_defs.h"


  /* If the GNU dialect is not enabled but __GNUC__ is set anyway, disable some 'gcc' extensions
     that would have been disabled in sys/cdefs.h if __GNUC__ was not set. */
# 347 "C:\\Program Files\\MATLAB\\R2013b\\polyspace\\verifier\\cxx\\cinclude\\__polyspace__libc_defs.h"

# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c" 2
/**********************************************************************************************************************
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  FordMsg41ABusHiSpd.c
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:21 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  C-Code implementation template for SW-C <FordMsg41ABusHiSpd>
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of version logging area >>                DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/* PRQA S 0777, 0779 EOF */ /* MD_MSR_5.1_777, MD_MSR_5.1_779 */

/**********************************************************************************************************************
* Copyright 2017, 2018 Nexteer 
* Nexteer Confidential
*
* Module File Name  : FordMsg41ABusHiSpd.c
* Module Description: FordMsg41ABusHiSpd - MM078A 
* Project           : CBD
* Author            : Nexteer ISC
***********************************************************************************************************************
* Version Control:
* %version:          1 %
* %derived_by:       nz4qtt %
*----------------------------------------------------------------------------------------------------------------------
* Date      Rev      Author    Change Description                                                              SCR #
* --------  -------  --------  --------------------------------------------------------------------------  ------------
* 11/27/17   1       SR(TATA)  Initial version                                                                                                                          EA4#17253
* 04/17/18   2       TM(ISC)  xxxxxx version                                                                                                                            EA4#20147
*----------------------------------------------------------------------------------------------------------------------
**********************************************************************************************************************/

/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of version logging area >>                  DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *
 * AUTOSAR Modelling Object Descriptions
 *
 **********************************************************************************************************************
 *
 * Data Types:
 * ===========
 * NtcNr1
 *   uint16 represents integers with a minimum value of 0 and a maximum value of 65535.
 *      The order-relation on uint16 is: x < y if y - x is positive.
 *      uint16 has a lexical representation consisting of a finite-length sequence 
 *      of decimal digits (#x30-#x39).
 *      
 *      For example: 1, 0, 1267, +10000.
 *
 * NtcSts1
 *   uint8 represents integers with a minimum value of 0 and a maximum value of 255.
 *      The order-relation on uint8 is: x < y if y - x is positive.
 *      uint8 has a lexical representation consisting of a finite-length sequence 
 *      of decimal digits (#x30-#x39).
 *      
 *      For example: 1, 0, 126, +10.
 *
 * u16p0
 *   uint16 represents integers with a minimum value of 0 and a maximum value of 65535.
 *      The order-relation on uint16 is: x < y if y - x is positive.
 *      uint16 has a lexical representation consisting of a finite-length sequence 
 *      of decimal digits (#x30-#x39).
 *      
 *      For example: 1, 0, 1267, +10000.
 *
 *********************************************************************************************************************/

# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  Rte_FordMsg41ABusHiSpd.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Application header file for SW-C <FordMsg41ABusHiSpd> (Contract Phase)
 *********************************************************************************************************************/

/* double include prevention */



# 34 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h"






/* include files */

# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd_Type.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  Rte_FordMsg41ABusHiSpd_Type.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Application types header file for SW-C <FordMsg41ABusHiSpd> (Contract Phase)
 *********************************************************************************************************************/

/* double include prevention */








# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_Type.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  Rte_Type.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Header file containing user defined AUTOSAR types and RTE structures (Contract Phase)
 *********************************************************************************************************************/

/* double include prevention */



# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  Rte.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Header file containing RTE types (Contract Phase)
 *********************************************************************************************************************/

/* double include prevention */















# 1 "C:\\Component\\AR200A_ArSuprt_Impl\\include\\ASR4.0.3\\Std_Types.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) 2013 by Vector Informatik GmbH.                                              All rights reserved.
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  \endverbatim
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  Std_Types.h
 *    Component:  -
 *       Module:  -
 *    Generator:  -
 *
 *  Description:  Provision of Standard Types
 *  
 *  -------------------------------------------------------------------------------------------------------------------
 *  MISRA VIOLATIONS
 *  -------------------------------------------------------------------------------------------------------------------
 *      
 *  
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  AUTHOR IDENTITY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Name                          Initials      Company
 *  -------------------------------------------------------------------------------------------------------------------
 *  Joachim Kalmbach              Jk            Vector Informatik
 *  Heike Honert                  visht         Vector Informatik
 *  Eugen Stripling               visseu        Vector Informatik
 *  -------------------------------------------------------------------------------------------------------------------
 *  REVISION HISTORY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Version   Date        Author  Change Id     Description
 *  -------------------------------------------------------------------------------------------------------------------
 *  01.00.00  2007-08-01  Jk                    Initial creation
 *  03.00.00  2007-10-10  Jk                    Changes for AUTOSAR 3.0
 *  03.00.01  2007-11-20  Jk                    Version defines for CFG management added
 *  03.01.00  2008-03-05  Jk                    Include order changed
 *  03.02.00  2008-03-18  Jk                    Version defines changed to specification version
 *  03.03.00  2008-06-03  Jk                    changed ModuleId Type in Std_VersionInfoType from uint8 to uint16
 *  03.03.01  2009-11-11  visht  ESCAN00038201  Support the Standard Type E_PENDING
 *  03.04.00  2011-02-15  visht                 support ASR 4.0R1
 *  03.04.01  2011-02-28  visht  ESCAN00049579  incorrect BSW version scan information
 *  03.04.02  2012-08-23  visht                 version define corrected - replace PATCH by REVISION - (STD_TYPES_AR_RELEASE_REVISION_VERSION)
 *            2012-10-23  visseu                Add _VENDOR_ID and _MODULE_ID as specified in "AUTOSAR_TR_BSWModuleList.pdf" (R4.0 Rev 3)
 *  03.04.03  2013-02-13  visseu                No changes, only SW version corrected
 *  03.04.04  2013-05-29  visseu ESCAN00067740  Add general defines with prefix: STD
 *********************************************************************************************************************/




/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/

# 1 "C:\\Component\\AR201A_ArCplrSuprt_Impl\\include\\ASR4.0.3\\Platform_Types.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) 2014 by Vector Informatik GmbH.                                              All rights reserved.
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  \endverbatim
 *
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  Platform_Types.h
 *    Component:  -
 *       Module:  -
 *    Generator:  -
 *
 *  Description:  This file provides the platform types for Rh850
 *
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  AUTHOR IDENTITY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Name                          Initials      Company
 *  -------------------------------------------------------------------------------------------------------------------
 *  Torsten Kercher               vistkr        Vector Informatik GmbH
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *  REVISION HISTORY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Version   Date        Author  Change Id     Description
 *  -------------------------------------------------------------------------------------------------------------------
 *  01.00.00  2012-09-17  vistkr                Initial for Rh850 platform
 *  01.00.01  2013-11-05  vistkr                Update to template 1.03.01
 *  01.00.02  2013-12-05  vistkr                Use unsigned suffix for defines
 *  01.01.00  2014-06-18  vistkr                Omit floating point typedefs if GHS compiler with option -fnone is used
 *  01.02.00  2014-10-20  vistkr                AR4-667: Support sint64 and uint64 (update to template 01.04.00)
 *********************************************************************************************************************/




/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

/* ##V_CFG_MANAGEMENT ##CQProject : CommonAsr_Rh850 CQComponent : Impl_PlatformTypes */






/* AUTOSAR Software Specification Document Version Information */




/* Component Version Information */




























/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/

 typedef unsigned char         boolean;       /*        TRUE .. FALSE           */

 typedef signed char           sint8;         /*        -128 .. +127            */
 typedef unsigned char         uint8;         /*           0 .. 255             */
 typedef signed short          sint16;        /*      -32768 .. +32767          */
 typedef unsigned short        uint16;        /*           0 .. 65535           */
 typedef signed long           sint32;        /* -2147483648 .. +2147483647     */
 typedef unsigned long         uint32;        /*           0 .. 4294967295      */

 typedef signed int            sint8_least;   /* At least 7 bit + 1 bit sign    */
 typedef unsigned int          uint8_least;   /* At least 8 bit                 */
 typedef signed int            sint16_least;  /* At least 15 bit + 1 bit sign   */
 typedef unsigned int          uint16_least;  /* At least 16 bit                */
 typedef signed int            sint32_least;  /* At least 31 bit + 1 bit sign   */
 typedef unsigned int          uint32_least;  /* At least 32 bit                */

# 127 "C:\\Component\\AR201A_ArCplrSuprt_Impl\\include\\ASR4.0.3\\Platform_Types.h"
 typedef signed long long      sint64;        /* -9223372036854775808 .. 9223372036854775807      */
 typedef unsigned long long    uint64;        /*                    0 .. 18446744073709551615     */


# 138 "C:\\Component\\AR201A_ArCplrSuprt_Impl\\include\\ASR4.0.3\\Platform_Types.h"
 typedef float                 float32;
 typedef double                float64;


/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/



/**********************************************************************************************************************
 *  END OF FILE: Platform_Types.h
 *********************************************************************************************************************/

# 64 "C:\\Component\\AR200A_ArSuprt_Impl\\include\\ASR4.0.3\\Std_Types.h" 2
# 1 "C:\\Component\\AR201A_ArCplrSuprt_Impl\\include\\ASR4.0.3\\Compiler.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) 2014 by Vector Informatik GmbH.                                              All rights reserved.
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  \endverbatim
 *
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  Compiler.h
 *    Component:  -
 *       Module:  -
 *    Generator:  -
 *
 *  Description:  This file provides the AUTOSAR compiler abstraction for the GreenHills compiler on the Rh850 platform
 *
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  AUTHOR IDENTITY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Name                          Initials      Company
 *  -------------------------------------------------------------------------------------------------------------------
 *  Torsten Kercher               vistkr        Vector Informatik GmbH
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *  REVISION HISTORY
 *  -------------------------------------------------------------------------------------------------------------------
 *  Version   Date        Author  Change Id     Description
 *  -------------------------------------------------------------------------------------------------------------------
 *  01.00.00  2012-09-17  vistkr                Initial for Rh850 platform and GreenHills compiler
 *  01.00.01  2013-11-05  vistkr                Update to template 1.04.02
 *  01.00.02  2013-12-05  vistkr                Add MISRA justifications
 *  01.01.00  2014-01-15  vistkr                AR4-569: Add CONSTP2FUNC macro (update to template 1.05.00)
 *  01.01.01  2014-10-20  vistkr                Improve comments
 *********************************************************************************************************************/




/* PRQA S 3453 COMPILER_3453_TAG */ /* MD_MSR_19.7 */

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/

# 1 "C:\\Component\\AR201A_ArCplrSuprt_Impl\\tools\\contract\\Compiler_Cfg.h" 1
/**********************************************************************************************************************
* Copyright 2014 Nexteer 
* Nexteer Confidential
*
* Module File Name  : Compiler_Cfg.h
* Module Description: This file contains a stub header for UTP and QAC 
*                     projects
* Project           : CBD
* Author            : Lucas Wendling
***********************************************************************************************************************
* Version Control:
* %version:          1 %
* %derived_by:       nz4qtt %
*----------------------------------------------------------------------------
* Date      Rev      Author         Change Description
* -------   -------  --------  ----------------------------------------------
* 12/15/14  1.0      LWW       Initial EA4 version
**********************************************************************************************************************/






# 53 "C:\\Component\\AR201A_ArCplrSuprt_Impl\\include\\ASR4.0.3\\Compiler.h" 2

/* START NEXTEER PATCH: LWW 12/18/15 Added include for Renesas MCAL specific Compiler.h content */
# 1 "C:\\Component\\AR201A_ArCplrSuprt_Impl\\tools\\contract\\Renesas_Compiler.h" 1
/**********************************************************************************************************************
* Copyright 2014 Nexteer 
* Nexteer Confidential
*
* Module File Name  : Renesas_Compiler.h
* Module Description: This file contains a stub header for UTP and QAC 
*                     projects
* Project           : CBD
* Author            : Lucas Wendling
***********************************************************************************************************************
* Version Control:
* %version:          1 %
* %derived_by:       nz4qtt %
*----------------------------------------------------------------------------
* Date      Rev      Author         Change Description
* -------   -------  --------  ----------------------------------------------
* 12/18/15  1.0      LWW       Initial EA4 version
**********************************************************************************************************************/






# 56 "C:\\Component\\AR201A_ArCplrSuprt_Impl\\include\\ASR4.0.3\\Compiler.h" 2
/* END NEXTEER PATCH: LWW 12/18/15 Added include for Renesas MCAL specific Compiler.h content */

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

/* ##V_CFG_MANAGEMENT ##CQProject : CommonAsr_Rh850 CQComponent : Impl_CompAbstract_GreenHills */






/* AUTOSAR Software Specification Document Version Information */




/* Component Version Information */






/* AUTOMATIC used for the declaration of local pointers */


/* TYPEDEF shall be used within type definitions, where no memory qualifier can be specified */


/* NULL_PTR define with a void pointer to zero (the usage does not lead to compile warnings about implicit casts) */




/* INLINE define for abstraction of the keyword inline */


/* LOCAL_INLINE define for abstraction of the keyword inline for functions with static scope */


/* FUNC macro for the declaration and definition of functions
   rettype     return type of the function
   memclass    classification of the function itself
 */


/* FUNC_P2CONST macro for declaration and definition of functions returning a pointer to a constant
   rettype     return type of the function
   ptrclass    defines the classification of the pointer's distance 
   memclass    classification of the function itself
 */


/* FUNC_P2VAR macro for the declaration and definition of functions returning a pointer to a variable
   rettype     return type of the function
   ptrclass    defines the classification of the pointer's distance 
   memclass    classification of the function itself
 */


/* P2VAR macro for the declaration and definition of pointers in RAM, pointing to variables
   ptrtype     type of the referenced variable memory class
   memclass    classification of the pointer's variable itself
   ptrclass    defines the classification of the pointer's distance
 */


/* P2CONST macro for the declaration and definition of pointers in RAM, pointing to constants
   ptrtype     type of the referenced data
   memclass    classification of the pointer's variable itself
   ptrclass    defines the classification of the pointer's distance
 */


/* CONSTP2VAR macro for the declaration and definition of constant pointers accessing variables
   ptrtype     type of the referenced data
   memclass    classification of the pointer's variable itself
   ptrclass    defines the classification of the pointer's distance
 */


/* CONSTP2CONST macro for the declaration and definition of constant pointers accessing constants
   ptrtype     type of the referenced data
   memclass    classification of the pointer's variable itself
   ptrclass    defines the classification of the pointer's distance
 */


/* P2FUNC macro for the type definition of pointers to functions
   rettype     return type of the function
   ptrclass    defines the classification of the pointer's distance
   fctname     function name respectively name of the defined type
 */


/* CONSTP2FUNC macro for the type definition of constant pointers to functions
   rettype     return type of the function
   ptrclass    defines the classification of the pointer's distance
   fctname     function name respectively name of the defined type
 */


/* CONST macro for the declaration and definition of constants
   type        type of the constant
   memclass    classification of the constant itself
 */


/* VAR macro for the declaration and definition of variables
   vartype     type of the variable
   memclass    classification of the variable itself
 */


/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

/* PRQA L:COMPILER_3453_TAG */

/**********************************************************************************************************************
 *  MISRA deviations
 *********************************************************************************************************************/
/* Justification for module-specific MISRA deviations:

MD_Compiler_19.10:
  Reason: The macro is used in a scope that does not allow brackets, e.g. declaration of functions and variables.
  Risk: Non-atomic parameters lead to compile errors.
  Prevention: Used parameters are always atomic.

*/



/**********************************************************************************************************************
 *  END OF FILE: Compiler.h
 *********************************************************************************************************************/

# 65 "C:\\Component\\AR200A_ArSuprt_Impl\\include\\ASR4.0.3\\Std_Types.h" 2

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/





/* ESCAN00067740 */



/* ##V_CFG_MANAGEMENT ##CQProject : CommonAsr__Common CQComponent : Impl_StdTypes */



/* AUTOSAR Software Specification Version Information */
/* AUTOSAR release 4.0 R3 */




/* ESCAN00067740 */




/* Component Version Information */




/* ESCAN00067740 */













/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/

/* This typedef has been added for OSEK compliance */



typedef unsigned char StatusType; /* OSEK compliance */






typedef uint8 Std_ReturnType;

typedef struct
{
   uint16 vendorID;
   uint16 moduleID;
   uint8  sw_major_version;
   uint8  sw_minor_version;
   uint8  sw_patch_version;
} Std_VersionInfoType;


/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

 


/**********************************************************************************************************************
 *  END OF FILE: Std_Types.h
 *********************************************************************************************************************/
# 40 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte.h" 2













/* Note: application errors are in the range between 1-63
         overlayed error (ORed with application errors) is 64
         structural errors are in the range between 128-256 */

/* common errors */



/* overlayed errors */





/* immediate infrastructure errors */
# 84 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte.h"

/* common SchM errors */
# 92 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte.h"




# 28 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_Type.h" 2


/**********************************************************************************************************************
 * Data type definitions
 *********************************************************************************************************************/


typedef uint8 Ford_Outside_Air_Temp_Stat;


typedef uint16 NtcNr1;


typedef uint8 NtcSts1;


typedef uint16 u16p0;


/**********************************************************************************************************************
 * Per-Instance Memory User Types
 *********************************************************************************************************************/

# 33 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd_Type.h" 2

/**********************************************************************************************************************
 * Range, Invalidation, Enumeration and Bit Field Definitions
 *********************************************************************************************************************/


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































# 43 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h" 2
# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_DataHandleType.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  Rte_DataHandleType.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Header file containing Data Handle type declarations for component data structures (ContractPhase)
 *********************************************************************************************************************/

/* double include prevention */



# 44 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h" 2


/**********************************************************************************************************************
 * Component Data Structures and Port Data Structures
 *********************************************************************************************************************/

struct Rte_CDS_FordMsg41ABusHiSpd
{
  /* PIM Handles section */
  uint8* Pim_ClrDiagcFlgProxyPrev; /* PRQA S 0850 */ /* MD_MSR_19.8 */
  boolean* Pim_FordVehMsg41AMiss; /* PRQA S 0850 */ /* MD_MSR_19.8 */
  float32* Pim_FordVehOutdAirTPrev; /* PRQA S 0850 */ /* MD_MSR_19.8 */
  uint16* Pim_FordVehOutdAirTRawPrev; /* PRQA S 0850 */ /* MD_MSR_19.8 */
  uint32* Pim_MissMsgFaildRefTi; /* PRQA S 0850 */ /* MD_MSR_19.8 */
  uint32* Pim_MissMsgPassdRefTi; /* PRQA S 0850 */ /* MD_MSR_19.8 */
  /* Vendor specific section */
};

# 1 "C:\\Component\\AR200A_ArSuprt_Impl\\tools\\contract\\MemMap.h" 1
/**********************************************************************************************************************
* Copyright 2014 Nexteer 
* Nexteer Confidential
*
* Module File Name  : MemMap.h
* Module Description: This file contains a stub header for UTP and QAC 
*                     projects
* Project           : CBD
* Author            : Lucas Wendling
***********************************************************************************************************************
* Version Control:
* %version:          1 %
* %derived_by:       nz4qtt %
*----------------------------------------------------------------------------
* Date      Rev      Author         Change Description
* -------   -------  --------  ----------------------------------------------
* 12/15/14  1.0      LWW       Initial EA4 version
**********************************************************************************************************************/







# 64 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h" 2

extern const struct Rte_CDS_FordMsg41ABusHiSpd *const Rte_Inst_FordMsg41ABusHiSpd; /* PRQA S 0850 */ /* MD_MSR_19.8 */




typedef const struct Rte_CDS_FordMsg41ABusHiSpd* Rte_Instance;


/**********************************************************************************************************************
 * Init Values for unqueued S/R communication (primitive types only)
 *********************************************************************************************************************/

# 83 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h"





/**********************************************************************************************************************
 * API prototypes
 *********************************************************************************************************************/
Std_ReturnType Rte_Read_FordMsg41ABusHiSpd_ClrDiagcFlgProxy_Val(uint8* data); /* PRQA S 0850 */ /* MD_MSR_19.8 */
Std_ReturnType Rte_Read_FordMsg41ABusHiSpd_FordCanDtcInhb_Logl(boolean* data); /* PRQA S 0850 */ /* MD_MSR_19.8 */
Std_ReturnType Rte_Read_FordMsg41ABusHiSpd_FordEpsLifeCycMod_Val(uint8* data); /* PRQA S 0850 */ /* MD_MSR_19.8 */
Std_ReturnType Rte_Read_FordMsg41ABusHiSpd_FordOutdAirTSts_Ford_Outside_Air_Temp_Stat(Ford_Outside_Air_Temp_Stat* data); /* PRQA S 0850 */ /* MD_MSR_19.8 */
Std_ReturnType Rte_Write_FordMsg41ABusHiSpd_FordVehOutdAirT_Val(float32 data); /* PRQA S 0850 */ /* MD_MSR_19.8 */
Std_ReturnType Rte_Write_FordMsg41ABusHiSpd_FordVehOutdAirTRaw_Val(uint16 data); /* PRQA S 0850 */ /* MD_MSR_19.8 */
Std_ReturnType Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper(uint32* RefTmr_Arg); /* PRQA S 0850 */ /* MD_MSR_19.8 */
Std_ReturnType Rte_Call_FordMsg41ABusHiSpd_GetTiSpan100MicroSec32bit_Oper(uint32 RefTmr_Arg, uint32* TiSpan_Arg); /* PRQA S 0850 */ /* MD_MSR_19.8 */
Std_ReturnType Rte_Call_FordMsg41ABusHiSpd_SetNtcSts_Oper(NtcNr1 NtcNr_Arg, uint8 NtcStInfo_Arg, NtcSts1 NtcSts_Arg, uint16 DebStep_Arg); /* PRQA S 0850 */ /* MD_MSR_19.8 */
u16p0 Rte_Prm_FordMsg41ABusHiSpd_FordMsg41ABusHiSpdMissMsgFaildThd_Val(void); /* PRQA S 0850 */ /* MD_MSR_19.8 */
u16p0 Rte_Prm_FordMsg41ABusHiSpd_FordMsg41ABusHiSpdMissMsgPassdThd_Val(void); /* PRQA S 0850 */ /* MD_MSR_19.8 */






/**********************************************************************************************************************
 * Rte_Read_<p>_<d> (explicit S/R communication with isQueued = false)
 *********************************************************************************************************************/






/**********************************************************************************************************************
 * Rte_Write_<p>_<d> (explicit S/R communication with isQueued = false)
 *********************************************************************************************************************/




/**********************************************************************************************************************
 * Rte_Call_<p>_<o> (C/S invocation)
 *********************************************************************************************************************/





/**********************************************************************************************************************
 * Rte_Prm (Calibration component calibration parameters)
 *********************************************************************************************************************/





/**********************************************************************************************************************
 * Per-Instance Memory User Types
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * Rte_Pim (Per-Instance Memory)
 *********************************************************************************************************************/
















/**********************************************************************************************************************
 *
 * APIs which are accessible from all runnable entities of the SW-C
 *
 **********************************************************************************************************************
 * Per-Instance Memory:
 * ====================
 *   float32 *Rte_Pim_FordVehOutdAirTPrev(void)
 *   uint32 *Rte_Pim_MissMsgFaildRefTi(void)
 *   uint32 *Rte_Pim_MissMsgPassdRefTi(void)
 *   uint16 *Rte_Pim_FordVehOutdAirTRawPrev(void)
 *   uint8 *Rte_Pim_ClrDiagcFlgProxyPrev(void)
 *   boolean *Rte_Pim_FordVehMsg41AMiss(void)
 *
 * Calibration Parameters:
 * =======================
 *   Calibration Component Calibration Parameters:
 *   ---------------------------------------------
 *   u16p0 Rte_Prm_FordMsg41ABusHiSpdMissMsgFaildThd_Val(void)
 *   u16p0 Rte_Prm_FordMsg41ABusHiSpdMissMsgPassdThd_Val(void)
 *
 *********************************************************************************************************************/


# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\FordMsg41ABusHiSpd_MemMap.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  FordMsg41ABusHiSpd_MemMap.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Memory Mapping header file for SW-C <FordMsg41ABusHiSpd> (Contract Phase)
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of version logging area >>                DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of version logging area >>                  DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of include and declaration area >>        DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of include and declaration area >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * FordMsg41ABusHiSpd specific defines
 *********************************************************************************************************************/

/* open sections */
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_CODE
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_CONST_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_NOINIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_ZERO_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/* close sections */
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_CODE
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_CONST_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_NOINIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_ZERO_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of removed code area >>                   DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of removed code area >>                     DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
# 189 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h" 2


/**********************************************************************************************************************
 *
 * Runnable Entity Name: FordMsg41ABusHiSpdInit1
 *
 *---------------------------------------------------------------------------------------------------------------------
 *
 * Executed once after the RTE is started
 *
 **********************************************************************************************************************
 *
 * Client/Server Interfaces:
 * =========================
 *   Server Invocation:
 *   ------------------
 *   Std_ReturnType Rte_Call_GetRefTmr100MicroSec32bit_Oper(uint32 *RefTmr_Arg)
 *     Synchronous Server Invocation. Timeout: None
 *
 *********************************************************************************************************************/


void FordMsg41ABusHiSpdInit1(void); /* PRQA S 0850 */ /* MD_MSR_19.8 */

/**********************************************************************************************************************
 *
 * Runnable Entity Name: FordMsg41ABusHiSpdPer1
 *
 *---------------------------------------------------------------------------------------------------------------------
 *
 * Executed if at least one of the following trigger conditions occurred:
 *   - triggered on TimingEvent every 10ms
 *
 **********************************************************************************************************************
 *
 * Input Interfaces:
 * =================
 *   Explicit S/R API:
 *   -----------------
 *   Std_ReturnType Rte_Read_ClrDiagcFlgProxy_Val(uint8 *data)
 *   Std_ReturnType Rte_Read_FordCanDtcInhb_Logl(boolean *data)
 *   Std_ReturnType Rte_Read_FordEpsLifeCycMod_Val(uint8 *data)
 *   Std_ReturnType Rte_Read_FordOutdAirTSts_Ford_Outside_Air_Temp_Stat(Ford_Outside_Air_Temp_Stat *data)
 *
 * Output Interfaces:
 * ==================
 *   Explicit S/R API:
 *   -----------------
 *   Std_ReturnType Rte_Write_FordVehOutdAirT_Val(float32 data)
 *   Std_ReturnType Rte_Write_FordVehOutdAirTRaw_Val(uint16 data)
 *
 * Client/Server Interfaces:
 * =========================
 *   Server Invocation:
 *   ------------------
 *   Std_ReturnType Rte_Call_GetRefTmr100MicroSec32bit_Oper(uint32 *RefTmr_Arg)
 *     Synchronous Server Invocation. Timeout: None
 *   Std_ReturnType Rte_Call_GetTiSpan100MicroSec32bit_Oper(uint32 RefTmr_Arg, uint32 *TiSpan_Arg)
 *     Synchronous Server Invocation. Timeout: None
 *   Std_ReturnType Rte_Call_SetNtcSts_Oper(NtcNr1 NtcNr_Arg, uint8 NtcStInfo_Arg, NtcSts1 NtcSts_Arg, uint16 DebStep_Arg)
 *     Synchronous Server Invocation. Timeout: None
 *     Returned Application Errors: RTE_E_SetNtcSts_PortIf1_E_NOT_OK
 *
 *********************************************************************************************************************/


void FordMsg41ABusHiSpdPer1(void); /* PRQA S 0850 */ /* MD_MSR_19.8 */

# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\FordMsg41ABusHiSpd_MemMap.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  FordMsg41ABusHiSpd_MemMap.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Memory Mapping header file for SW-C <FordMsg41ABusHiSpd> (Contract Phase)
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of version logging area >>                DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of version logging area >>                  DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of include and declaration area >>        DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of include and declaration area >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * FordMsg41ABusHiSpd specific defines
 *********************************************************************************************************************/

/* open sections */
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_CODE
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_CONST_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_NOINIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_ZERO_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/* close sections */
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_CODE
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_CONST_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_NOINIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_ZERO_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of removed code area >>                   DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of removed code area >>                     DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
# 259 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h" 2


/**********************************************************************************************************************
 * Application errors
 *********************************************************************************************************************/









# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_Stubs.h" 1
/******************************************************************************************************************
* Copyright 2016 Nexteer
* Nexteer Confidential
*
* Module File Name:   Rte_Stubs.h
* Module Description: Stubs header for Polyspace analysis.  Generated from TL109A_SwcSuprt.
* Project:            CBD
* Author:             Owen Tosh
******************************************************************************************************************/





# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\math_stubs.h" 1
/******************************************************************************************************************
* Copyright 2018 Nexteer
* Nexteer Confidential
*
* Module File Name:   math_stubs.c
* Module Description: Stubs for Polyspace analysis.
* Project:            CBD
* Author:             Matthew Leser
******************************************************************************************************************/



__inline float32 fabsf(float32 Inp);

/*****************************************************************************
*  Name:           Abslt_f32_f32()
*  Description:    Single Precision Float Absolute Value
*  Inputs:         Inp
*  Outputs:        Absolute Value of Input
*  Usage Notes:    None
*****************************************************************************/
__inline float32 fabsf(float32 Inp)
{
    if(Inp < 0.0f)
    {
        Inp = -Inp;
    }
    
    return (Inp);
}
# 16 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_Stubs.h" 2

/*** Extern Statements ***/

/* Inputs */
extern uint8 FordMsg41ABusHiSpd_Ip_ClrDiagcFlgProxy;
extern uint8 FordMsg41ABusHiSpd_Ip_FordEpsLifeCycMod;
extern uint16 FordMsg41ABusHiSpd_Ip_Ford_Outside_Air_Temp_Stat;

/* Outputs */
extern float32 FordMsg41ABusHiSpd_Op_FordVehOutdAirT;
extern uint16 FordMsg41ABusHiSpd_Op_FordVehOutdAirTRaw;

/* Calibrations */
extern const uint16 FordMsg41ABusHiSpd_Cal_FordMsg41ABusHiSpdMissMsgFaildThd;
extern const uint16 FordMsg41ABusHiSpd_Cal_FordMsg41ABusHiSpdMissMsgPassdThd;

/* PIMs */
extern uint8 FordMsg41ABusHiSpd_Pim_ClrDiagcFlgProxyPrev;
extern boolean FordMsg41ABusHiSpd_Pim_FordVehMsg41AMiss;
extern float32 FordMsg41ABusHiSpd_Pim_FordVehOutdAirTPrev;
extern uint16 FordMsg41ABusHiSpd_Pim_FordVehOutdAirTRawPrev;
extern uint32 FordMsg41ABusHiSpd_Pim_MissMsgFaildRefTi;
extern uint32 FordMsg41ABusHiSpd_Pim_MissMsgPassdRefTi;

/* Arguments and Returns */
extern uint32 FordMsg41ABusHiSpd_Srv_GetRefTmr100MicroSec32bit_RefTmr;
extern uint32 FordMsg41ABusHiSpd_Srv_GetTiSpan100MicroSec32bit_RefTmr;
extern uint32 FordMsg41ABusHiSpd_Srv_GetTiSpan100MicroSec32bit_TiSpan;
extern NtcNr1 FordMsg41ABusHiSpd_Srv_SetNtcSts_NtcNr;
extern uint8 FordMsg41ABusHiSpd_Srv_SetNtcSts_NtcStInfo;
extern NtcSts1 FordMsg41ABusHiSpd_Srv_SetNtcSts_NtcSts;
extern uint16 FordMsg41ABusHiSpd_Srv_SetNtcSts_DebStep;
extern Std_ReturnType FordMsg41ABusHiSpd_Srv_SetNtcSts_Return;


/*** Client Stub ***/

extern void Rte_Stub(void);


# 274 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\Rte_FordMsg41ABusHiSpd.h" 2
# 82 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c" 2


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of include and declaration area >>        DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
# 1 "C:\\Component\\AR100A_NxtrMath_Impl\\include\\NxtrMath.h" 1
/**********************************************************************************************************************
* Copyright 2015,2016,2017 Nexteer
* Nexteer Confidential
*
* Module File Name  : NxtrMath.h
* Module Description: Nexteer Math Library Header
* Project           : CBD
* Author            : Lucas Wendling
***********************************************************************************************************************
* Version Control:
* %version:          1 %
* %derived_by:       nz4qtt %
*----------------------------------------------------------------------------------------------------------------------
* Date      Rev      Author         Change Description                                                           SCR #
* -------   -------  --------  ---------------------------------------------------------------------------     --------
* 02/04/15  1        LWW       Initial Version                                                                 EA4#73
* 09/29/15  2        Rijvi     Add new sine & cosine algorithm                                                 EA4#1758
* 07/01/16  3        KK        Moving sine lookup function to the Nexteer math library from SF107A.            EA4#6438
* 03/15/17  4        AJM       Moved few constants to architecture global parameters and corrected few values  EA4#10365
* 09/19/17  5        JWJ       Added function prototype for error injection function                           EA4#15504
**********************************************************************************************************************/

/******************************************* Multiple Include Protection *********************************************/



/************************************************ Include Statements *************************************************/
# 1 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h" 1
/*
                        ISO C Runtime Library

        Copyright (c) 1983-2013 Green Hills Software, Inc.

    This program is the property of Green Hills Software, Inc,
    its contents are proprietary information and no part of it
    is to be disclosed to anyone except employees of Green Hills
    Software, Inc., or as agreed in writing signed by the President
    of Green Hills Software, Inc.
*/

# 19 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"





/* The following macros are listed in the order they appear in ISO C99 */

# 41 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"

# 51 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"
  typedef double double_t;
  typedef float  float_t;


/* deprecated as of 3/5/04:
   define HUGE          HUGE_VAL
   define HUGEFLOAT     HUGE_VALF
*/

/*
    The macro INFINITY expands to a constant expression of type float 
    representing positive or unsigned infinity, if available; else to
    a positive constant of type float that overflows at translation time.
*/
# 77 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"

# 87 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"







/*
    The macro FP_FAST_FMA is optionally defined. If defined, it indicates 
    that the fma function generally executes about as fast as, or faster 
    than, a multiply and an add of double operands.
#define FAST_FMA        1
#define FAST_FMAF       1
#define FAST_FMAL       1
*/




/*
    If the expression math_errhandling & MATH_ERREXCEPT can be nonzero,
    the implementation shall define the macros FE_DIVBYZERO, FE_INVALID,
    and FE_OVERFLOW in <fenv.h>.
*/










# 127 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"












double atof     (const char *);


double acos     (double);
double asin     (double);
double atan     (double) ;
double atan2    (double, double) ;
double cos      (double) ;
double sin      (double) ;
double tan      (double);

double cosh     (double);
double sinh     (double);
double tanh     (double);

double exp      (double);
double exp2     (double);
double expm1    (double);
double frexp    (double, int *);
double ldexp    (double, int);
double log      (double);
double log10    (double);
double modf     (double, double *);

double pow      (double, double);
double sqrt     (double);

/* Added by ISO C99 */
double ceil     (double) ;
double floor    (double) ;
double round    (double) ;
long   lround   (double);



double trunc    (double) ;
double fabs     (double) ;
double fmod     (double, double);
double remainder (double, double);
double log2     (double);
double logb     (double);
double scalbln  (double, long);
double cbrt     (double) ;
double remquo   (double, double, int *);
double lgamma   (double);
double tgamma   (double);
double nearbyint  (double);
double rint     (double);
long   lrint    (double);



double nextafter (double, double);
double nexttoward (double, long double);
float  nexttowardf (float, long double);
double fma      (double, double, double) ;
double copysign (double, double) ;

long double cosl  (long double) ;
long double sinl  (long double) ;
long double tanl  (long double);
long double coshl (long double);
long double sinhl (long double);
long double tanhl (long double);

long double acosl (long double);
long double asinl (long double);
long double atanl (long double) ;
long double atan2l(long double, long double) ;

long double acoshl(long double);
long double asinhl(long double);
long double atanhl(long double);

long double sqrtl (long double);
long double ceill (long double) ;
long double floorl(long double) ;
long      lroundl (long double);




long double fabsl (long double) ;
long double frexpl(long double, int*);
long double ldexpl(long double, int);
long double fmodl (long double, long double);
long double powl  (long double, long double);
long double expl  (long double);
long double exp2l (long double);
long double expm1l(long double);
int         ilogbl(long double) ;
long double logl  (long double);
long double log10l(long double);
long double log1pl(long double);
long double log2l (long double);
long double logbl (long double);
long double modfl (long double, long double *);
long double scalbnl    (long double, int);
long double scalblnl   (long double, long);
long double hypotl     (long double, long double);
long double erfl       (long double);
long double erfcl      (long double);
long double remainderl (long double, long double);
long double copysignl  (long double, long double) ;
long double fminl      (long double, long double) ;
long double fmaxl      (long double, long double) ;
long double cbrtl      (long double) ;
long double fdiml      (long double,long double);
long double nanl       (const char *);
long double roundl     (long double) ;
long double truncl     (long double) ;
long double fmal       (long double, long double, long double) ;
long double remquol    (long double, long double, int *);
long double lgammal    (long double);
long double tgammal    (long double);
long double nearbyintl (long double);
long double nextafterl (long double, long double);
long double nexttowardl(long double, long double);
long double rintl      (long double);
long int    lrintl     (long double);





/* End of added by ISO C99 */


long   lroundf  (float);



float  remainderf (float, float);
float  log2f    (float);
float  logbf    (float);
float  scalblnf (float, long);
float  erff     (float);
float  erfcf    (float);
float  cbrtf    (float) ;
float  remquof  (float, float, int *);
float  lgammaf  (float);
float  tgammaf  (float);
float  nearbyintf (float);
float  rintf    (float);
long   lrintf   (float);



float  nextafterf (float, float);
float  fmaf     (float, float, float) ;
float  copysignf (float, float) ;



/* Microsoft libraries do not support these extensions */
double acosh    (double);       /* part of ISO C99 */
double asinh    (double);       /* part of ISO C99 */
double atanh    (double);       /* part of ISO C99 */
double hypot    (double, double);/* part of ISO C99 */
/* ISO C says these are macros and does not require function versions */
int isnan       (double) ;
int isinf       (double) ;
int isfinite    (double) ;
int isnormal    (double) ;
int signbit     (double) ;

int __fpclassifyd (double) ;
int __fpclassifyl (long double) ;

int __fpclassifyf (float) ;

# 346 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"

# 356 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"
int __fcompare(float,float) ;
int __dcompare(double,double) ;
int __lcompare(long double,long double) ;
# 373 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"

# 382 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"


int __isnanf    (float);
int __isinff    (float);

int __isnand    (double);
int __isinfd    (double);
int __isnanl    (long double);
int __isinfl    (long double);
int __signbitl  (long double);
int __signbitd  (double);
int __isnormall (long double);
int __isnormald (double);
int __isfinitel (long double);
int __isfinited (double);

int __signbitf  (float);
int __isnormalf (float);
int __isfinitef (float);

# 683 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"

/* Added by ISO C99 */

int     ilogb   (double) ;
double  log1p   (double);
double  scalbn  (double, int);
double fdim     (double,double);
double fmax     (double,double) ;
double fmin     (double,double) ;
double  nan     (const char *) ;
double erf      (double);
double erfc     (double);

double gamma    (double);


int     ilogbf  (float) ;
float   log1pf  (float);
float   scalbnf (float, int);
float  fdimf    (float, float);
float  fmaxf    (float, float) ;
float  fminf    (float, float) ;
float   nanf    (const char *) ;
/* End of added by ISO C99 */

# 717 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"

float acoshf    (float);
float asinhf    (float);
float atanhf    (float);
float acosf     (float);
float asinf     (float);
float atanf     (float) ;
float atan2f    (float, float) ;
float cosf      (float) ;
float sinf      (float) ;
float tanf      (float);
float coshf     (float);
float sinhf     (float);
float tanhf     (float);
float expf      (float);
float exp2f     (float);
float expm1f    (float);
float frexpf    (float, int *);
float hypotf    (float, float);
float ldexpf    (float, int);
float logf      (float);
float log10f    (float);
float powf      (float, float);

float sqrtf     (float);
float fabsf     (float) ;

float ceilf     (float) ;
float floorf    (float) ;
float roundf    (float) ;
float truncf    (float) ;
float fmodf     (float, float);
float modff     (float, float *);


# 773 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"









# 817 "C:\\Component\\TL103A_CplrSuprt\\include\\2013.5.5\\ansi\\math.h"

# 29 "C:\\Component\\AR100A_NxtrMath_Impl\\include\\NxtrMath.h" 2
# 1 "C:\\Component\\AR999A_ArchGlbPrm_Impl\\include\\ArchGlbPrm.h" 1
/*****************************************************************************
* Copyright 2015,2017 Nexteer 
* Nexteer Confidential
*
* Module File Name: ArchGlbPrm.h
* Module Description: Architecture global parameter definitions
* Project           : CBD
* Author            : Kathleen Creager
*****************************************************************************
* Version Control:
* %version:          1 %
* %derived_by:       nz4qtt %
*---------------------------------------------------------------------------------------------------------------------
* Date      Rev      Author         Change Description                                                           SCR #
* -------   -------  --------  ---------------------------------------------------------------------------     ----------
* 02/25/15  1        KMC       initial version                                                                 EA4#186
* 06/20/15  2        KMC       add constants needed for SF103A                                                 EA4#868
* 03/22/17  3        AJM       add constants needed for NxtrMath.h                                             EA4#10351
******************************************************************************/




/* 2ms loop time step */


/* 4ms loop time step */


/* 10ms loop time step */


/* 100ms loop time step */


/* pi */


/* 2 times pi */


/* pi divided by 2 */


/* 180 divided by pi */


/* pi divided by 180 */


/* 5 times pi divided by 4 */


/* (square root of 3) divided by 2 */


/* 2 divided by square root of 3 */


/* 4 divided by square root of 3 */


/* Zero Threshold for float comparisons; renamed float.h FLT_EPSILON because that name is reserved in MATLAB */


/* 1 divided by 2*Pi */


/* Pi Over Eight */


/* Eight Over Pi */




# 31 "C:\\Component\\AR100A_NxtrMath_Impl\\include\\NxtrMath.h" 2

/******************************************** File Level Rule Deviations *********************************************/
/* MISRA-C:2004 Rule 1.1 [NXTRDEV 1.1.1]: Inline functions are used for Nexteer Math library macros to allow for throughput optimization */
/* MISRA-C:2004 Rule 8.5 [NXTRDEV 8.5.1]: Function definitions are required to be in a header for inline function usage */

/****************************************************** Macros *******************************************************/

/* MISRA-C:2004 Rule 19.7 [NXTRDEV 19.7.1]: This rule is only intended to apply in situations where a function call is permitted.  This macro is targeted
                                                                                        for the pre-processor to resolve to a constant and therefore a function call is not permitted */



/********************************************* Embedded Local Constants **********************************************/
# 51 "C:\\Component\\AR100A_NxtrMath_Impl\\include\\NxtrMath.h"
/* Not used the NxtrFixdPt constants to avoid dependency on NxtrFixdPt component */




/*********************************************** Exported Declarations ***********************************************/
__inline float32 Blnd_f32(float32 Inp1,
                                                                                         float32 Inp2,
                                                                                         float32 Fac);

__inline uint8 Abslt_u08_s08(sint8 Inp);

__inline uint16 Abslt_u16_s16(sint16 Inp);

__inline uint32 Abslt_u32_s32(sint32 Inp);

__inline float32 Abslt_f32_f32(float32 Inp);

__inline sint8 Sign_s08_s08(sint8 Inp);

__inline sint8 Sign_s08_s16(sint16 Inp);

__inline sint8 Sign_s08_s32(sint32 Inp);

__inline sint8 Sign_s08_f32(float32 Inp);

__inline sint8 Min_s08(sint8 Inp1,
                                                                                sint8 Inp2);

__inline uint8 Min_u08(uint8 Inp1,
                                                                                uint8 Inp2);

__inline sint16 Min_s16(sint16 Inp1,
                                                                                        sint16 Inp2);

__inline uint16 Min_u16(uint16 Inp1,
                                                                                        uint16 Inp2);

__inline sint32 Min_s32(sint32 Inp1,
                                                                                        sint32 Inp2);

__inline uint32 Min_u32(uint32 Inp1,
                                                                                        uint32 Inp2);

__inline float32 Min_f32(float32 Inp1,
                                                                                        float32 Inp2);

__inline sint8 Max_s08(sint8 Inp1,
                                                                                sint8 Inp2);

__inline uint8 Max_u08(uint8 Inp1,
                                                                                uint8 Inp2);

__inline sint16 Max_s16(sint16 Inp1,
                                                                                        sint16 Inp2);

__inline uint16 Max_u16(uint16 Inp1,
                                                                                        uint16 Inp2);

__inline sint32 Max_s32(sint32 Inp1,
                                                                                        sint32 Inp2);

__inline uint32 Max_u32(uint32 Inp1,
                                                                                        uint32 Inp2);

__inline float32 Max_f32(float32 Inp1,
                                                                                        float32 Inp2);

__inline sint8 Lim_s08(sint8 Inp,
                                                                                        sint8 RngLo,
                                                                                        sint8 RngHi);

__inline uint8 Lim_u08(uint8 Inp,
                                                                                        uint8 RngLo,
                                                                                        uint8 RngHi);

__inline sint16 Lim_s16(sint16 Inp,
                                                                                        sint16 RngLo,
                                                                                        sint16 RngHi);

__inline uint16 Lim_u16(uint16 Inp,
                                                                                        uint16 RngLo,
                                                                                        uint16 RngHi);

__inline sint32 Lim_s32(sint32 Inp,
                                                                                        sint32 RngLo,
                                                                                        sint32 RngHi);

__inline uint32 Lim_u32(uint32 Inp,
                                                                                        uint32 RngLo,
                                                                                        uint32 RngHi);

__inline float32 Lim_f32(float32 Inp,
                                                                                                float32 RngLo,
                                                                                                float32 RngHi);

__inline float32 Arctan2_f32(float32 Numer,
                                                                                                float32 Denom);

__inline float32 Sin_f32(float32 Inp);

__inline float32 Cos_f32(float32 Inp);

__inline float32 Exp_f32(float32 Inp);

__inline float32 Sqrt_f32(float32 Inp);

__inline float32 Mod_f32(float32 Numer,
                                                                                                float32 Denom);

__inline void SinCos_f32(float32 Inp,
                                                                                                float32* SinVal,
                                                                                                float32* CosVal);

__inline float32 SinLookup(float32 Ag);

extern void InjSwFpuErr(void);

extern const uint16 NXTRMATH_SINCNVNCONTBL_ULS_U16[513];
/*****************************************************************************
*  Name:           Blnd_f32()
*  Description:    Unity gain blend of two input signals
*  Inputs:         Inp1 - first signal to be blended
*                                  Inp2 - second signal to be blended
*                                  Fac - contribution of the second signal
*  Outputs:        Blended signal result
*  Usage Notes:    Fac input is constrained to min of 0.0 and max of 1.0 for
*                  proper functionality
*****************************************************************************/
__inline float32 Blnd_f32(float32 Inp1,
                                                                                         float32 Inp2,
                                                                                         float32 Fac)
{
    return (((Inp1 * (1.0F - Fac)) + (Inp2 * Fac)));
}

/*****************************************************************************
*  Name:           Abslt_u08_s08()
*  Description:    8bit Absolute Value
*  Inputs:         Inp
*  Outputs:        Absolute Value of Input
*  Usage Notes:    None
*****************************************************************************/
__inline uint8 Abslt_u08_s08(sint8 Inp)
{
        /* Rollover in the following line of code will occur if Inp is -128, however, type castings will provide proper overall result */
    return (((Inp)>=0)?((uint8)(Inp)):((uint8)(sint8)(-(Inp))));
}

/*****************************************************************************
*  Name:           Abslt_u16_s16()
*  Description:    16bit Absolute Value
*  Inputs:         Inp
*  Outputs:        Absolute Value of Input
*  Usage Notes:    None
*****************************************************************************/
__inline uint16 Abslt_u16_s16(sint16 Inp)
{
        /* Rollover in the following line of code will occur if Inp is -32768, however, type castings will provide proper overall result */
    return (((Inp)>=0)?((uint16)(Inp)):((uint16)(sint16)(-(Inp))));
}

/*****************************************************************************
*  Name:           Abslt_u32_s32()
*  Description:    32bit Absolute Value
*  Inputs:         Inp
*  Outputs:        Absolute Value of Input
*  Usage Notes:    None
*****************************************************************************/
__inline uint32 Abslt_u32_s32(sint32 Inp)
{
        /* Rollover in the following line of code will occur if Inp is -2147483648, however, type castings will provide proper overall result */
    return (((Inp)>=0)?((uint32)(Inp)):((uint32)(sint32)(-(Inp))));
}

/*****************************************************************************
*  Name:           Abslt_f32_f32()
*  Description:    Single Precision Float Absolute Value
*  Inputs:         Inp
*  Outputs:        Absolute Value of Input
*  Usage Notes:    None
*****************************************************************************/
__inline float32 Abslt_f32_f32(float32 Inp)
{
    return (fabsf(Inp));
}

/*****************************************************************************
*  Name:           Sign_s08_s08()
*  Description:    8bit Sign
*  Inputs:         Inp
*  Outputs:        Sign of input (inputs of zero treated as positive)
*  Usage Notes:    None
*****************************************************************************/
__inline sint8 Sign_s08_s08(sint8 Inp)
{
    return (((Inp)>=0)?((sint8)(1)):((sint8)-1));
}

/*****************************************************************************
*  Name:           Sign_s08_s16()
*  Description:    16bit Sign
*  Inputs:         Inp
*  Outputs:        Sign of input (inputs of zero treated as positive)
*  Usage Notes:    None
*****************************************************************************/
__inline sint8 Sign_s08_s16(sint16 Inp)
{
    return (((Inp)>=0)?((sint8)(1)):((sint8)-1));
}

/*****************************************************************************
*  Name:           Sign_s08_s32()
*  Description:    32bit Sign
*  Inputs:         Inp
*  Outputs:        Sign of input (inputs of zero treated as positive)
*  Usage Notes:    None
*****************************************************************************/
__inline sint8 Sign_s08_s32(sint32 Inp)
{
    return (((Inp)>=0)?((sint8)(1)):((sint8)-1));
}

/*****************************************************************************
*  Name:           Sign_s08_f32()
*  Description:    Single Precision Float Sign
*  Inputs:         Inp
*  Outputs:        Sign of input (inputs of zero treated as positive)
*  Usage Notes:    None
*****************************************************************************/
__inline sint8 Sign_s08_f32(float32 Inp)
{
    return (((Inp)>=0.0F)?((sint8)(1)):((sint8)-1));
}

/*****************************************************************************
*  Name:           Min_s08()
*  Description:    8bit signed minimum
*  Inputs:         Inp1, Inp2
*  Outputs:        Minimum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline sint8 Min_s08(sint8 Inp1,
                                                                                sint8 Inp2)
{
    return (((Inp1)<=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Min_u08()
*  Description:    8bit unsigned minimum
*  Inputs:         Inp1, Inp2
*  Outputs:        Minimum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline uint8 Min_u08(uint8 Inp1,
                                                                                uint8 Inp2)
{
    return (((Inp1)<=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Min_s16()
*  Description:    16bit signed minimum
*  Inputs:         Inp1, Inp2
*  Outputs:        Minimum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline sint16 Min_s16(sint16 Inp1,
                                                                                        sint16 Inp2)
{
    return (((Inp1)<=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Min_u16()
*  Description:    16bit unsigned minimum
*  Inputs:         Inp1, Inp2
*  Outputs:        Minimum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline uint16 Min_u16(uint16 Inp1,
                                                                                        uint16 Inp2)
{
    return (((Inp1)<=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Min_s32()
*  Description:    32bit signed minimum
*  Inputs:         Inp1, Inp2
*  Outputs:        Minimum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline sint32 Min_s32(sint32 Inp1,
                                                                                        sint32 Inp2)
{
    return (((Inp1)<=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Min_u32()
*  Description:    32bit unsigned minimum
*  Inputs:         Inp1, Inp2
*  Outputs:        Minimum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline uint32 Min_u32(uint32 Inp1,
                                                                                        uint32 Inp2)
{
    return (((Inp1)<=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Min_f32()
*  Description:    Single Precision Float minimum
*  Inputs:         Inp1, Inp2
*  Outputs:        Minimum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline float32 Min_f32(float32 Inp1,
                                                                                        float32 Inp2)
{
    return (((Inp1)<=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Max_s08()
*  Description:    8bit signed maximum
*  Inputs:         Inp1, Inp2
*  Outputs:        Maximum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline sint8 Max_s08(sint8 Inp1,
                                                                                sint8 Inp2)
{
    return (((Inp1)>=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Max_u08()
*  Description:    8bit unsigned maximum
*  Inputs:         Inp1, Inp2
*  Outputs:        Maximum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline uint8 Max_u08(uint8 Inp1,
                                                                                uint8 Inp2)
{
    return (((Inp1)>=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Max_s16()
*  Description:    16bit signed maximum
*  Inputs:         Inp1, Inp2
*  Outputs:        Maximum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline sint16 Max_s16(sint16 Inp1,
                                                                                        sint16 Inp2)
{
    return (((Inp1)>=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Max_u16()
*  Description:    16bit unsigned maximum
*  Inputs:         Inp1, Inp2
*  Outputs:        Maximum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline uint16 Max_u16(uint16 Inp1,
                                                                                        uint16 Inp2)
{
    return (((Inp1)>=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Max_s32()
*  Description:    32bit signed maximum
*  Inputs:         Inp1, Inp2
*  Outputs:        Maximum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline sint32 Max_s32(sint32 Inp1,
                                                                                        sint32 Inp2)
{
    return (((Inp1)>=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Max_u32()
*  Description:    32bit unsigned maximum
*  Inputs:         Inp1, Inp2
*  Outputs:        Maximum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline uint32 Max_u32(uint32 Inp1,
                                                                                        uint32 Inp2)
{
    return (((Inp1)>=(Inp2))?(Inp1):(Inp2));
}

/*****************************************************************************
*  Name:           Max_f32()
*  Description:    Single Precision Float maximum
*  Inputs:         Inp1, Inp2
*  Outputs:        Maximum of Inp1 and Inp2
*  Usage Notes:    None
*****************************************************************************/
__inline float32 Max_f32(float32 Inp1,
                                                                                        float32 Inp2)
{
    return (((Inp1)>=(Inp2))?(Inp1):(Inp2));
}


/*****************************************************************************
*  Name:           Lim_s08()
*  Description:    8bit signed limit
*  Inputs:         Inp, RngLo, RngHi
*  Outputs:        Bounded value of input
*  Usage Notes:    None
*****************************************************************************/
__inline sint8 Lim_s08(sint8 Inp,
                                                                                        sint8 RngLo,
                                                                                        sint8 RngHi)
{
    return (((Inp)>=(RngHi))?(RngHi):(((Inp)<=(RngLo))?(RngLo):(Inp)));
}

/*****************************************************************************
*  Name:           Lim_u08()
*  Description:    8bit unsigned limit
*  Inputs:         Inp, RngLo, RngHi
*  Outputs:        Bounded value of input
*  Usage Notes:    None
*****************************************************************************/
__inline uint8 Lim_u08(uint8 Inp,
                                                                                        uint8 RngLo,
                                                                                        uint8 RngHi)
{
    return (((Inp)>=(RngHi))?(RngHi):(((Inp)<=(RngLo))?(RngLo):(Inp)));
}

/*****************************************************************************
*  Name:           Lim_s16()
*  Description:    16bit signed limit
*  Inputs:         Inp, RngLo, RngHi
*  Outputs:        Bounded value of input
*  Usage Notes:    None
*****************************************************************************/
__inline sint16 Lim_s16(sint16 Inp,
                                                                                        sint16 RngLo,
                                                                                        sint16 RngHi)
{
    return (((Inp)>=(RngHi))?(RngHi):(((Inp)<=(RngLo))?(RngLo):(Inp)));
}

/*****************************************************************************
*  Name:           Lim_u16()
*  Description:    16bit unsigned limit
*  Inputs:         Inp, RngLo, RngHi
*  Outputs:        Bounded value of input
*  Usage Notes:    None
*****************************************************************************/
__inline uint16 Lim_u16(uint16 Inp,
                                                                                        uint16 RngLo,
                                                                                        uint16 RngHi)
{
    return (((Inp)>=(RngHi))?(RngHi):(((Inp)<=(RngLo))?(RngLo):(Inp)));
}

/*****************************************************************************
*  Name:           Lim_s32()
*  Description:    32bit signed limit
*  Inputs:         Inp, RngLo, RngHi
*  Outputs:        Bounded value of input
*  Usage Notes:    None
*****************************************************************************/
__inline sint32 Lim_s32(sint32 Inp,
                                                                                        sint32 RngLo,
                                                                                        sint32 RngHi)
{
    return (((Inp)>=(RngHi))?(RngHi):(((Inp)<=(RngLo))?(RngLo):(Inp)));
}

/*****************************************************************************
*  Name:           Lim_u32()
*  Description:    32bit unsigned limit
*  Inputs:         Inp, RngLo, RngHi
*  Outputs:        Bounded value of input
*  Usage Notes:    None
*****************************************************************************/
__inline uint32 Lim_u32(uint32 Inp,
                                                                                        uint32 RngLo,
                                                                                        uint32 RngHi)
{
    return (((Inp)>=(RngHi))?(RngHi):(((Inp)<=(RngLo))?(RngLo):(Inp)));
}

/*****************************************************************************
*  Name:           Lim_f32()
*  Description:    Single Precision Float limit
*  Inputs:         Inp, RngLo, RngHi
*  Outputs:        Bounded value of input
*  Usage Notes:    None
*****************************************************************************/
__inline float32 Lim_f32(float32 Inp,
                                                                                                float32 RngLo,
                                                                                                float32 RngHi)
{
    return (((Inp)>=(RngHi))?(RngHi):(((Inp)<=(RngLo))?(RngLo):(Inp)));
}

/*****************************************************************************
*  Name:           Arctan2_f32()
*  Description:    Single Precision Float Arctangent 2
*  Inputs:         Numer, Denom
*  Outputs:        Arctangent of Num/Den
*  Usage Notes:    Numer and Denom must not be both zero
*                  The output is in the range of -pi to pi radians
*****************************************************************************/
__inline float32 Arctan2_f32(float32 Numer,
                                                                                                float32 Denom)
{
    return (atan2f(Numer, Denom));
}

/*****************************************************************************
*  Name:           Sin_f32()
*  Description:    Single Precision Float Sine
*  Inputs:         Inp
*  Outputs:        Sine of input
*  Usage Notes:    Inp must be in radians
*****************************************************************************/
__inline float32 Sin_f32(float32 Inp)
{
    return (sinf(Inp));
}

/*****************************************************************************
*  Name:           Cos_f32()
*  Description:    Single Precision Float Cosine
*  Inputs:         Inp
*  Outputs:        Cosine of input
*  Usage Notes:    Inp must be in radians
*****************************************************************************/
__inline float32 Cos_f32(float32 Inp)
{
    return (cosf(Inp));
}

/*****************************************************************************
*  Name:           Exp_f32()
*  Description:    Single Precision Float Exponential
*  Inputs:         Inp
*  Outputs:        Exponential of input
*  Usage Notes:    None
*****************************************************************************/
__inline float32 Exp_f32(float32 Inp)
{
    return (expf(Inp));
}

/*****************************************************************************
*  Name:           Sqrt_f32()
*  Description:    Single Precision Float Square Root
*  Inputs:         Inp
*  Outputs:        Square Root of input
*  Usage Notes:    Input must not be negative
*****************************************************************************/
__inline float32 Sqrt_f32(float32 Inp)
{
    return (sqrtf(Inp));
}

/*****************************************************************************
*  Name:           Mod_f32()
*  Description:    Single Precision Float Modulus
*  Inputs:         Numer, Denom
*  Outputs:        Remainder of Numer over Denom
*  Usage Notes:    The output sign is the same sign as Numer
*****************************************************************************/
__inline float32 Mod_f32(float32 Numer,
                                                                                                float32 Denom)
{
    return (fmodf(Numer, Denom));
}




/*****************************************************************************
*  Name:           SinCos_f32()
*  Description:    Optimized SinCos Algorithm
*  Inputs:         Inp, *SinVal, *CosVal
*  Outputs:        *SinVal = Sin(Inp) and *CosVal = Cosine(Inp)
*  Usage Notes:    Inp must be in radians.
*                  Input Range [-10000 to 10000]
*****************************************************************************/
__inline void SinCos_f32(float32 Inp,
                                                                                                float32* SinVal,
                                                                                                float32* CosVal)
{

        sint32  n;
        uint8  Normdn;
        float32  InpSqd;
        float32  SinA;
        float32  CosA;
        float32  Tmp;


        Tmp = (Inp < 0.0F) ? ( (Inp * (2.546479F)) - 0.5F  ) : ( (Inp * (2.546479F)) + 0.5F );
        n = (sint32)Tmp;
        Inp = Inp - ((float32)n * (0.392699F));         /* Determine 'A' part of 'Inp' angle. 'Inp' = 'A' + 'n' * 'B' */
        Normdn = (uint8)( (uint32)n & 0x0000000FU );            /* Determine normalized 'n' */

        InpSqd = Inp * Inp;

        SinA = Inp * ( 1.0F - (InpSqd * 0.16666667F) );
        CosA = 1.0F - (InpSqd  * 0.5F);


        switch ( Normdn )
        {
                case 0U:
                        *SinVal = SinA;
                        *CosVal = CosA;
                        break;

                case 1U:
                        *SinVal = (0.9238794F * SinA) + (0.38268344F * CosA);
                        *CosVal = (-0.38268344F * SinA) + (0.9238794F * CosA);
                        break;

                case 2U:
                        *SinVal = (0.7071066F * SinA) + (0.7071066F * CosA);
                        *CosVal = (-0.7071066F * SinA) + (0.7071066F * CosA);
                        break;

                case 3U:
                        *SinVal = (0.38268344F * SinA) + (0.9238794F * CosA);
                        *CosVal = (-0.9238794F * SinA) + (0.38268344F * CosA);
                        break;

                case 4U:
                        *SinVal = CosA;
                        *CosVal = -SinA;
                        break;

                case 5U:
                        *SinVal = (-0.38268344F * SinA) + (0.9238794F * CosA);
                        *CosVal = (-0.9238794F * SinA) + (-0.38268344F * CosA);
                        break;

                case 6U:
                        *SinVal = (-0.7071066F * SinA) +  (0.7071066F * CosA);
                        *CosVal = (-0.7071066F * SinA) + (-0.7071066F * CosA);
                        break;

                case 7U:
                        *SinVal = (-0.9238794F * SinA) + (0.38268344F * CosA);
                        *CosVal = (-0.38268344F * SinA) + (-0.9238794F * CosA);
                        break;

                case 8U:
                        *SinVal = -SinA;
                        *CosVal = -CosA;
                        break;

                case 9U:
                        *SinVal = (-0.9238794F * SinA) + (-0.38268344F * CosA);
                        *CosVal =  (0.38268344F * SinA) + (-0.9238794F * CosA);
                        break;

                case 10U:
                        *SinVal = (-0.7071066F * SinA) + (-0.7071066F * CosA);
                        *CosVal =  (0.7071066F * SinA) + (-0.7071066F * CosA);
                        break;

                case 11U:
                        *SinVal = (-0.38268344F * SinA) + (-0.9238794F * CosA);
                        *CosVal =  (0.9238794F * SinA) + (-0.38268344F * CosA);
                        break;

                case 12U:
                        *SinVal = -CosA;
                        *CosVal =  SinA;
                        break;

                case 13U:
                        *SinVal =  (0.38268344F * SinA) + (-0.9238794F * CosA);
                        *CosVal =  (0.9238794F * SinA) +  (0.38268344F * CosA);
                        break;

                case 14U:
                        *SinVal =  (0.7071066F * SinA) + (-0.7071066F * CosA);
                        *CosVal =  (0.7071066F * SinA) +  (0.7071066F * CosA);
                        break;

                /* case 15U:   */
                default :
                        *SinVal =  (0.9238794F * SinA) + (-0.38268344F * CosA);
                        *CosVal =  (0.38268344F * SinA) +  (0.9238794F * CosA);
                        break;

        }

}


 /*****************************************************************************
 *
 *  Function Name:     SinLookup
 *
 *  Description:       Sine lookup to improve throughput
 *
 *  Inputs:            Ag  (angle in radians)
 *
 *  Outputs:           SinVal_Uls_T_f32 (Output sine value- Precision of p8)
 *
 *****************************************************************************/

 __inline float32 SinLookup(float32 Ag)
{
        float32 Theta_Rev_T_f32;
        uint16 Theta_Cnt_T_u16;
        sint8 SignFlip_Cnt_T_s08;
        float32 SinVal_Uls_T_f32;

        Theta_Rev_T_f32 = Ag * (0.15915494F);

        Theta_Rev_T_f32 = Theta_Rev_T_f32 - ((float32)((sint32)Theta_Rev_T_f32)); /* casting used for 'mod 1' functionality */

        if( Theta_Rev_T_f32 < 0.0f )
        {
                Theta_Rev_T_f32 += 1.0f;
        }

        /* Conditioned: 0 <= Theta <= 1 */

        if( Theta_Rev_T_f32 > 0.5F )
        {
                SignFlip_Cnt_T_s08 = -1;
                Theta_Rev_T_f32 -= 0.5F;
        }
        else
        {
                SignFlip_Cnt_T_s08 = 1;
        }

        if( Theta_Rev_T_f32 > 0.25F )
        {
                Theta_Rev_T_f32 = 0.5F - Theta_Rev_T_f32;
        }

        /* Conditioned: 0 <= Theta <= 0.25 */

        Theta_Cnt_T_u16 = (uint16)(uint32)(float32)(Theta_Rev_T_f32 * 2048.0F);

        SinVal_Uls_T_f32 = ((float32)NXTRMATH_SINCNVNCONTBL_ULS_U16[Theta_Cnt_T_u16])*1.52587890625e-05F;


        SinVal_Uls_T_f32 = SinVal_Uls_T_f32 * (float32)SignFlip_Cnt_T_s08;


        return SinVal_Uls_T_f32;
}



# 88 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c" 2
# 1 "C:\\Component\\AR103A_NxtrFixdPt_Impl\\include\\NxtrFixdPt.h" 1
/**********************************************************************************************************************
* Copyright 2015 Nexteer 
* Nexteer Confidential
*
* Module File Name  : NxtrFixdPt.h
* Module Description: Nexteer Fixed Point Library Header
* Project           : CBD
* Author            : Selva Sengottaiyan
***********************************************************************************************************************
* Version Control:
* %version:          1 %
* %derived_by:       nz4qtt %
*----------------------------------------------------------------------------------------------------------------------
* Date      Rev      Author         Change Description                                                           SCR #
* -------   -------  --------  ---------------------------------------------------------------------------     --------
* 02/13/15  1.0      Selva         Initial EA4 version                                                           EA4#139
**********************************************************************************************************************/

/******************************************* Multiple Include Protection *********************************************/



/************************************************ Include Statements *************************************************/


/******************************************** File Level Rule Deviations *********************************************/
/* MISRA-C:2004 Rule 1.1 [NXTRDEV 1.1.1]: Inline functions are used for Nexteer library macros to allow for throughput optimization */
/* MISRA-C:2004 Rule 8.5 [NXTRDEV 8.5.1]: Function definitions are required to be in a header for inline function usage */

/*********************************************** Exported Declarations ***********************************************/


__inline sint16 FloatToFixdWithRound_s16_f32(float32 Inp, float32 Mplr);
__inline sint32 FloatToFixdWithRound_s32_f32(float32 Inp, float32 Mplr);
__inline uint16 FloatToFixdWithRound_u16_f32(float32 Inp, float32 Mplr);
__inline uint32 FloatToFixdWithRound_u32_f32(float32 Inp, float32 Mplr);

__inline sint16 FloatToFixd_s16_f32(float32 Inp, float32 Mplr);
__inline sint32 FloatToFixd_s32_f32(float32 Inp, float32 Mplr);
__inline uint16 FloatToFixd_u16_f32(float32 Inp, float32 Mplr);
__inline uint32 FloatToFixd_u32_f32(float32 Inp, float32 Mplr);

__inline float32 FixdToFloat_f32_s16(sint16 Inp, float32 Mplr);
__inline float32 FixdToFloat_f32_s32(sint32 Inp, float32 Mplr);
__inline float32 FixdToFloat_f32_u16(uint16 Inp, float32 Mplr);
__inline float32 FixdToFloat_f32_u32(uint32 Inp, float32 Mplr);

/****************************************************** Macros *******************************************************/



































































































































/********************** Inline functions******************************/

/*****************************************************************************
*  Name:        FloatToFixdWithRound_s16_f32  
*  Description: Converts the float to fixed point and rounds to the nearest integer
*  Inputs:      Single precision float and the multiplication factor derived from the Corresponding Macro   
*  Outputs:     16 bit signed number.         
*  Usage Notes: Macro NXTRFIXDPT_FLOATTOP'X'_ULS_F32 shall be used where X is the precision of signed 16 bit output. 
                 and must satisfy  -327678 <= inp1* Mplr <= 32767
*****************************************************************************/
__inline sint16 FloatToFixdWithRound_s16_f32(float32 Inp, float32 Mplr)
{
  return ( ((Inp < 0.0F) ? ((sint16)(sint32)(float32)((Inp * Mplr) - 0.5F)): ((sint16)(sint32)(float32)((Inp * Mplr) + 0.5F))));
}


/*****************************************************************************
*  Name:         FloatToFixdWithRound_s32_f32  
*  Description:  Converts the float to fixed point and rounds to the nearest integer
*  Inputs:       Single precision float and the multiplication factor derived from the Corresponding Macro   
*  Outputs:      32 bit signed number.        
*  Usage Notes:  Macro NXTRFIXDPT_FLOATTOP'X'_ULS_F32 shall be used where X is the precision of signed 32 bit output 
                 and  -(2^31)<=inp1* Mplr <=(2^31)-1
*****************************************************************************/
__inline sint32 FloatToFixdWithRound_s32_f32(float32 Inp, float32 Mplr)
{
  return ( ((Inp < 0.0F) ? ((sint32)(float32)((Inp * Mplr) - 0.5F)): ((sint32)(float32)((Inp * Mplr) + 0.5F))));
}


/*****************************************************************************
*  Name:         FloatToFixdWithRound_u16_f32  
*  Description:  Converts the float to fixed point and rounds to the nearest integer
*  Inputs:       Single precision float and the multiplication factor derived from the Corresponding Macro    
*  Outputs:      16 bit unsigned number.         
*  Usage Notes:  Macro NXTRFIXDPT_FLOATTOP'X'_ULS_F32 shall be used where X is the precision of unsigned 16 bit output.
                0<=inp1* Mplr <= (2^16)-1
*****************************************************************************/
__inline uint16 FloatToFixdWithRound_u16_f32(float32 Inp, float32 Mplr)
{
  return ((uint16)(uint32)(float32)((Inp * Mplr) + 0.5F));
}


/*****************************************************************************
*  Name:          FloatToFixdWithRound_u32_f32  
*  Description:   Converts the float to fixed point and rounds to the nearest integer
*  Inputs:        Single precision float and the multiplication factor derived from the Corresponding Macro    
*  Outputs:       32 bit unsigned number.         
*  Usage Notes:   Macro NXTRFIXDPT_FLOATTOP'X'_ULS_F32 shall be used where X is the precision of unsigned 32 bit output 
                   and must satisfy   0 =< inp1* Mplr <= (2^32)-1
*****************************************************************************/
__inline uint32 FloatToFixdWithRound_u32_f32(float32 Inp, float32 Mplr)
{
  return ((uint32)(float32)((Inp * Mplr) + 0.5F));
}



/*****************************************************************************
*  Name:         FloatToFixd_s16_f32  
*  Description:  Converts the float to corresponding Fixed point.
*  Inputs:       Single precision float and the multiplication factor derived from the Corresponding Macro .                    
*  Outputs:      16 bit signed number.         
*  Usage Notes:  Macro NXTRFIXDPT_FLOATTOP'X'_ULS_F32 shall be used where X is the precision of signed 16 bit output.
                 and must satisfy  -(2^15)<= inp1* Mplr <= (2^15)-1
*****************************************************************************/
__inline sint16 FloatToFixd_s16_f32(float32 Inp, float32 Mplr)
{
  return ((sint16)(sint32)(float32)(Inp * Mplr));
}


/*****************************************************************************
*  Name:         FloatToFixd_s32_f32  
*  Description:  Converts the float to corresponding Fixed point.
*  Inputs:       Single precision float and the multiplication factor derived from the Corresponding Macro .                    
*  Outputs:      32 bit signed number.         
*  Usage Notes:  Macro NXTRFIXDPT_FLOATTOP'X'_ULS_F32 shall be used where X is the precision of signed 32 bit output
                 and must satisfy   -(2^31) <=inp1 <= (2^31)-1
*****************************************************************************/
__inline sint32 FloatToFixd_s32_f32(float32 Inp, float32 Mplr)
{
  return ((sint32)(float32)(Inp * Mplr));
}


/*****************************************************************************
*  Name:         FloatToFixd_u16_f32  
*  Description:  Converts the float to corresponding Fixed point.
*  Inputs:       Single precision float and the multiplication factor derived from the Corresponding Macro .                    
*  Outputs:      16 bit unsigned number.         
*  Usage Notes:  Macro NXTRFIXDPT_FLOATTOP'X'_ULS_F32 shall be used where X is the precision of unsigned 16 bit output
                 and must satisfy 0<=inp1* Mplr <= (2^16)-1
*****************************************************************************/
__inline uint16 FloatToFixd_u16_f32(float32 Inp, float32 Mplr)
{
  return ((uint16)(uint32)(float32)(Inp * Mplr));
}


/*****************************************************************************
*  Name:         FloatToFixd_u32_f32  
*  Description:  Converts the float to corresponding Fixed point.
*  Inputs:       Single precision float and the multiplication factor derived from the Corresponding Macro .                    
*  Outputs:      32 bit unsigned number.         
*  Usage Notes:  Macro NXTRFIXDPT_FLOATTOP'X'_ULS_F32 shall be used where X is the precision of unsigned 32 bit output.
                  and must satisfy  0 <=inp1* Mplr <= (2^32)-1
*****************************************************************************/
__inline uint32 FloatToFixd_u32_f32(float32 Inp, float32 Mplr)
{
  return ((uint32)(float32)((Inp * Mplr) ));
}


/*****************************************************************************
*  Name:           FixdToFloat_f32_s16        
*  Description:    Converts the Fixed point signed 16 bit to single precision float.
*  Inputs:         16 bit signed integer and the multiplication factor derived from the Corresponding Macro .  
*  Outputs:        Single Precision Float        
*  Usage Notes:    Macro "NXTRFIXDPT_P'X'TOFLOAT_ULS_F32" shall be used where X is the precision of signed 16 bit input
                   and must satisfy -(2^15) <= Inp <= (2^15) -1
*****************************************************************************/
__inline float32 FixdToFloat_f32_s16(sint16 Inp, float32 Mplr)
{
  return ((float32)((float32)Inp * Mplr));
}


/*****************************************************************************
*  Name:           FixdToFloat_f32_s32        
*  Description:    Converts the Fixed point signed 32 bit to single precision float.
*  Inputs:         32 bit signed integer and the multiplication factor derived from the Corresponding Macro .  
*  Outputs:        Single Precision Float        
*  Usage Notes:    Macro "NXTRFIXDPT_P'X'TOFLOAT_ULS_F32" shall be used where X is the precision of signed 32 bit input
*                   and must satisfy -(2^31) <= Inp <= (2^31)-1   
*****************************************************************************/
__inline float32 FixdToFloat_f32_s32(sint32 Inp, float32 Mplr)
{
  return ((float32)((float32)Inp * Mplr));
}


/*****************************************************************************
*  Name:           FixdToFloat_f32_u16        
*  Description:    Converts the Fixed point unsigned 16 bit to single precision float.
*  Inputs:         16 bit unsigned integer and the multiplication factor derived from the Corresponding Macro .  
*  Outputs:        Single Precision Float        
*  Usage Notes:    Macro "NXTRFIXDPT_P'X'TOFLOAT_ULS_F32" shall be used where X is the precision of unsigned 16 bit input
                   and must satisfy 0<=Inp <= (2^16)-1
*****************************************************************************/
__inline float32 FixdToFloat_f32_u16(uint16 Inp, float32 Mplr)
{
  return ((float32)((float32)Inp * Mplr));
}


/*****************************************************************************
*  Name:           FixdToFloat_f32_u32       
*  Description:    Converts the Fixed point unsigned 32 bit to single precision float.
*  Inputs:         32 bit unsigned integer and the multiplication factor derived from the Corresponding Macro .  
*  Outputs:        Single Precision Float        
*  Usage Notes:    Macro "NXTRFIXDPT_P'X'TOFLOAT_ULS_F32" shall be used where X is the precision of unsigned 32 bit input
     and must satisfy 0<=Inp <= (2^32)-1
*****************************************************************************/
__inline float32 FixdToFloat_f32_u32(uint32 Inp, float32 Mplr)
{
  return ((float32)((float32)Inp * Mplr));
}

/******************************************/
# 89 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c" 2

/* MISRA-C:2004 Rule 19.1 [NXTRDEV 19.1.1]: AUTOSAR requires deviation from this rule for Memory Mapping include statements */
/* MISRA-C:2004 Rule 16.10 [NXTRDEV 16.10.1]: There is no appropriate action to take on the return values for Rte_Read and Rte_Write */

# 105 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c"


/******************************************** Local Function Prototypes **********************************************/
static boolean DiagEna(boolean FordCanDtcInhb_Cnt_T_logl,
                                                                                                          uint8 ClrDiagcFlgProxy_Cnt_T_u08,
                                                                                                          boolean*ClrDiagcFlgProxyEna_Cnt_T_logl
                                                                                                          );
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of include and declaration area >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *
 * Used AUTOSAR Data Types
 *
 **********************************************************************************************************************
 *
 * Primitive Types:
 * ================
 * boolean: Boolean (standard type)
 * float32: Real in interval [-FLT_MAX...FLT_MAX] with single precision (standard type)
 * u16p0: Integer in interval [0...65535]
 * uint16: Integer in interval [0...65535] (standard type)
 * uint32: Integer in interval [0...4294967295] (standard type)
 * uint8: Integer in interval [0...255] (standard type)
 *
 * Enumeration Types:
 * ==================
 * Ford_Outside_Air_Temp_Stat: Enumeration of integer in interval [0...255] with enumerators
 *   CxFE_Unknown (254U)
 *   CxFF_Invalid (255U)
 *   Unit: [Degrees C], Factor: 1, Offset: 0
 * NtcNr1: Enumeration of integer in interval [0...65535] with enumerators
 *   NTCNR_0X001 (1U)
 *   NTCNR_0X002 (2U)
 *   NTCNR_0X003 (3U)
 *   NTCNR_0X004 (4U)
 *   NTCNR_0X005 (5U)
 *   NTCNR_0X006 (6U)
 *   NTCNR_0X007 (7U)
 *   NTCNR_0X008 (8U)
 *   NTCNR_0X009 (9U)
 *   NTCNR_0X00A (10U)
 *   NTCNR_0X00B (11U)
 *   NTCNR_0X00C (12U)
 *   NTCNR_0X00D (13U)
 *   NTCNR_0X00E (14U)
 *   NTCNR_0X00F (15U)
 *   NTCNR_0X010 (16U)
 *   NTCNR_0X011 (17U)
 *   NTCNR_0X012 (18U)
 *   NTCNR_0X013 (19U)
 *   NTCNR_0X014 (20U)
 *   NTCNR_0X015 (21U)
 *   NTCNR_0X016 (22U)
 *   NTCNR_0X017 (23U)
 *   NTCNR_0X018 (24U)
 *   NTCNR_0X019 (25U)
 *   NTCNR_0X01A (26U)
 *   NTCNR_0X01B (27U)
 *   NTCNR_0X01C (28U)
 *   NTCNR_0X01D (29U)
 *   NTCNR_0X01E (30U)
 *   NTCNR_0X01F (31U)
 *   NTCNR_0X020 (32U)
 *   NTCNR_0X021 (33U)
 *   NTCNR_0X022 (34U)
 *   NTCNR_0X023 (35U)
 *   NTCNR_0X024 (36U)
 *   NTCNR_0X025 (37U)
 *   NTCNR_0X026 (38U)
 *   NTCNR_0X027 (39U)
 *   NTCNR_0X028 (40U)
 *   NTCNR_0X029 (41U)
 *   NTCNR_0X02A (42U)
 *   NTCNR_0X02B (43U)
 *   NTCNR_0X02C (44U)
 *   NTCNR_0X02D (45U)
 *   NTCNR_0X02E (46U)
 *   NTCNR_0X02F (47U)
 *   NTCNR_0X030 (48U)
 *   NTCNR_0X031 (49U)
 *   NTCNR_0X032 (50U)
 *   NTCNR_0X033 (51U)
 *   NTCNR_0X034 (52U)
 *   NTCNR_0X035 (53U)
 *   NTCNR_0X036 (54U)
 *   NTCNR_0X037 (55U)
 *   NTCNR_0X038 (56U)
 *   NTCNR_0X039 (57U)
 *   NTCNR_0X03A (58U)
 *   NTCNR_0X03B (59U)
 *   NTCNR_0X03C (60U)
 *   NTCNR_0X03D (61U)
 *   NTCNR_0X03E (62U)
 *   NTCNR_0X03F (63U)
 *   NTCNR_0X040 (64U)
 *   NTCNR_0X041 (65U)
 *   NTCNR_0X042 (66U)
 *   NTCNR_0X043 (67U)
 *   NTCNR_0X044 (68U)
 *   NTCNR_0X045 (69U)
 *   NTCNR_0X046 (70U)
 *   NTCNR_0X047 (71U)
 *   NTCNR_0X048 (72U)
 *   NTCNR_0X049 (73U)
 *   NTCNR_0X04A (74U)
 *   NTCNR_0X04B (75U)
 *   NTCNR_0X04C (76U)
 *   NTCNR_0X04D (77U)
 *   NTCNR_0X04E (78U)
 *   NTCNR_0X04F (79U)
 *   NTCNR_0X050 (80U)
 *   NTCNR_0X051 (81U)
 *   NTCNR_0X052 (82U)
 *   NTCNR_0X053 (83U)
 *   NTCNR_0X054 (84U)
 *   NTCNR_0X055 (85U)
 *   NTCNR_0X056 (86U)
 *   NTCNR_0X057 (87U)
 *   NTCNR_0X058 (88U)
 *   NTCNR_0X059 (89U)
 *   NTCNR_0X05A (90U)
 *   NTCNR_0X05B (91U)
 *   NTCNR_0X05C (92U)
 *   NTCNR_0X05D (93U)
 *   NTCNR_0X05E (94U)
 *   NTCNR_0X05F (95U)
 *   NTCNR_0X060 (96U)
 *   NTCNR_0X061 (97U)
 *   NTCNR_0X062 (98U)
 *   NTCNR_0X063 (99U)
 *   NTCNR_0X064 (100U)
 *   NTCNR_0X065 (101U)
 *   NTCNR_0X066 (102U)
 *   NTCNR_0X067 (103U)
 *   NTCNR_0X068 (104U)
 *   NTCNR_0X069 (105U)
 *   NTCNR_0X06A (106U)
 *   NTCNR_0X06B (107U)
 *   NTCNR_0X06C (108U)
 *   NTCNR_0X06D (109U)
 *   NTCNR_0X06E (110U)
 *   NTCNR_0X06F (111U)
 *   NTCNR_0X070 (112U)
 *   NTCNR_0X071 (113U)
 *   NTCNR_0X072 (114U)
 *   NTCNR_0X073 (115U)
 *   NTCNR_0X074 (116U)
 *   NTCNR_0X075 (117U)
 *   NTCNR_0X076 (118U)
 *   NTCNR_0X077 (119U)
 *   NTCNR_0X078 (120U)
 *   NTCNR_0X079 (121U)
 *   NTCNR_0X07A (122U)
 *   NTCNR_0X07B (123U)
 *   NTCNR_0X07C (124U)
 *   NTCNR_0X07D (125U)
 *   NTCNR_0X07E (126U)
 *   NTCNR_0X07F (127U)
 *   NTCNR_0X080 (128U)
 *   NTCNR_0X081 (129U)
 *   NTCNR_0X082 (130U)
 *   NTCNR_0X083 (131U)
 *   NTCNR_0X084 (132U)
 *   NTCNR_0X085 (133U)
 *   NTCNR_0X086 (134U)
 *   NTCNR_0X087 (135U)
 *   NTCNR_0X088 (136U)
 *   NTCNR_0X089 (137U)
 *   NTCNR_0X08A (138U)
 *   NTCNR_0X08B (139U)
 *   NTCNR_0X08C (140U)
 *   NTCNR_0X08D (141U)
 *   NTCNR_0X08E (142U)
 *   NTCNR_0X08F (143U)
 *   NTCNR_0X090 (144U)
 *   NTCNR_0X091 (145U)
 *   NTCNR_0X092 (146U)
 *   NTCNR_0X093 (147U)
 *   NTCNR_0X094 (148U)
 *   NTCNR_0X095 (149U)
 *   NTCNR_0X096 (150U)
 *   NTCNR_0X097 (151U)
 *   NTCNR_0X098 (152U)
 *   NTCNR_0X099 (153U)
 *   NTCNR_0X09A (154U)
 *   NTCNR_0X09B (155U)
 *   NTCNR_0X09C (156U)
 *   NTCNR_0X09D (157U)
 *   NTCNR_0X09E (158U)
 *   NTCNR_0X09F (159U)
 *   NTCNR_0X0A0 (160U)
 *   NTCNR_0X0A1 (161U)
 *   NTCNR_0X0A2 (162U)
 *   NTCNR_0X0A3 (163U)
 *   NTCNR_0X0A4 (164U)
 *   NTCNR_0X0A5 (165U)
 *   NTCNR_0X0A6 (166U)
 *   NTCNR_0X0A7 (167U)
 *   NTCNR_0X0A8 (168U)
 *   NTCNR_0X0A9 (169U)
 *   NTCNR_0X0AA (170U)
 *   NTCNR_0X0AB (171U)
 *   NTCNR_0X0AC (172U)
 *   NTCNR_0X0AD (173U)
 *   NTCNR_0X0AE (174U)
 *   NTCNR_0X0AF (175U)
 *   NTCNR_0X0B0 (176U)
 *   NTCNR_0X0B1 (177U)
 *   NTCNR_0X0B2 (178U)
 *   NTCNR_0X0B3 (179U)
 *   NTCNR_0X0B4 (180U)
 *   NTCNR_0X0B5 (181U)
 *   NTCNR_0X0B6 (182U)
 *   NTCNR_0X0B7 (183U)
 *   NTCNR_0X0B8 (184U)
 *   NTCNR_0X0B9 (185U)
 *   NTCNR_0X0BA (186U)
 *   NTCNR_0X0BB (187U)
 *   NTCNR_0X0BC (188U)
 *   NTCNR_0X0BD (189U)
 *   NTCNR_0X0BE (190U)
 *   NTCNR_0X0BF (191U)
 *   NTCNR_0X0C0 (192U)
 *   NTCNR_0X0C1 (193U)
 *   NTCNR_0X0C2 (194U)
 *   NTCNR_0X0C3 (195U)
 *   NTCNR_0X0C4 (196U)
 *   NTCNR_0X0C5 (197U)
 *   NTCNR_0X0C6 (198U)
 *   NTCNR_0X0C7 (199U)
 *   NTCNR_0X0C8 (200U)
 *   NTCNR_0X0C9 (201U)
 *   NTCNR_0X0CA (202U)
 *   NTCNR_0X0CB (203U)
 *   NTCNR_0X0CC (204U)
 *   NTCNR_0X0CD (205U)
 *   NTCNR_0X0CE (206U)
 *   NTCNR_0X0CF (207U)
 *   NTCNR_0X0D0 (208U)
 *   NTCNR_0X0D1 (209U)
 *   NTCNR_0X0D2 (210U)
 *   NTCNR_0X0D3 (211U)
 *   NTCNR_0X0D4 (212U)
 *   NTCNR_0X0D5 (213U)
 *   NTCNR_0X0D6 (214U)
 *   NTCNR_0X0D7 (215U)
 *   NTCNR_0X0D8 (216U)
 *   NTCNR_0X0D9 (217U)
 *   NTCNR_0X0DA (218U)
 *   NTCNR_0X0DB (219U)
 *   NTCNR_0X0DC (220U)
 *   NTCNR_0X0DD (221U)
 *   NTCNR_0X0DE (222U)
 *   NTCNR_0X0DF (223U)
 *   NTCNR_0X0E0 (224U)
 *   NTCNR_0X0E1 (225U)
 *   NTCNR_0X0E2 (226U)
 *   NTCNR_0X0E3 (227U)
 *   NTCNR_0X0E4 (228U)
 *   NTCNR_0X0E5 (229U)
 *   NTCNR_0X0E6 (230U)
 *   NTCNR_0X0E7 (231U)
 *   NTCNR_0X0E8 (232U)
 *   NTCNR_0X0E9 (233U)
 *   NTCNR_0X0EA (234U)
 *   NTCNR_0X0EB (235U)
 *   NTCNR_0X0EC (236U)
 *   NTCNR_0X0ED (237U)
 *   NTCNR_0X0EE (238U)
 *   NTCNR_0X0EF (239U)
 *   NTCNR_0X0F0 (240U)
 *   NTCNR_0X0F1 (241U)
 *   NTCNR_0X0F2 (242U)
 *   NTCNR_0X0F3 (243U)
 *   NTCNR_0X0F4 (244U)
 *   NTCNR_0X0F5 (245U)
 *   NTCNR_0X0F6 (246U)
 *   NTCNR_0X0F7 (247U)
 *   NTCNR_0X0F8 (248U)
 *   NTCNR_0X0F9 (249U)
 *   NTCNR_0X0FA (250U)
 *   NTCNR_0X0FB (251U)
 *   NTCNR_0X0FC (252U)
 *   NTCNR_0X0FD (253U)
 *   NTCNR_0X0FE (254U)
 *   NTCNR_0X0FF (255U)
 *   NTCNR_0X100 (256U)
 *   NTCNR_0X101 (257U)
 *   NTCNR_0X102 (258U)
 *   NTCNR_0X103 (259U)
 *   NTCNR_0X104 (260U)
 *   NTCNR_0X105 (261U)
 *   NTCNR_0X106 (262U)
 *   NTCNR_0X107 (263U)
 *   NTCNR_0X108 (264U)
 *   NTCNR_0X109 (265U)
 *   NTCNR_0X10A (266U)
 *   NTCNR_0X10B (267U)
 *   NTCNR_0X10C (268U)
 *   NTCNR_0X10D (269U)
 *   NTCNR_0X10E (270U)
 *   NTCNR_0X10F (271U)
 *   NTCNR_0X110 (272U)
 *   NTCNR_0X111 (273U)
 *   NTCNR_0X112 (274U)
 *   NTCNR_0X113 (275U)
 *   NTCNR_0X114 (276U)
 *   NTCNR_0X115 (277U)
 *   NTCNR_0X116 (278U)
 *   NTCNR_0X117 (279U)
 *   NTCNR_0X118 (280U)
 *   NTCNR_0X119 (281U)
 *   NTCNR_0X11A (282U)
 *   NTCNR_0X11B (283U)
 *   NTCNR_0X11C (284U)
 *   NTCNR_0X11D (285U)
 *   NTCNR_0X11E (286U)
 *   NTCNR_0X11F (287U)
 *   NTCNR_0X120 (288U)
 *   NTCNR_0X121 (289U)
 *   NTCNR_0X122 (290U)
 *   NTCNR_0X123 (291U)
 *   NTCNR_0X124 (292U)
 *   NTCNR_0X125 (293U)
 *   NTCNR_0X126 (294U)
 *   NTCNR_0X127 (295U)
 *   NTCNR_0X128 (296U)
 *   NTCNR_0X129 (297U)
 *   NTCNR_0X12A (298U)
 *   NTCNR_0X12B (299U)
 *   NTCNR_0X12C (300U)
 *   NTCNR_0X12D (301U)
 *   NTCNR_0X12E (302U)
 *   NTCNR_0X12F (303U)
 *   NTCNR_0X130 (304U)
 *   NTCNR_0X131 (305U)
 *   NTCNR_0X132 (306U)
 *   NTCNR_0X133 (307U)
 *   NTCNR_0X134 (308U)
 *   NTCNR_0X135 (309U)
 *   NTCNR_0X136 (310U)
 *   NTCNR_0X137 (311U)
 *   NTCNR_0X138 (312U)
 *   NTCNR_0X139 (313U)
 *   NTCNR_0X13A (314U)
 *   NTCNR_0X13B (315U)
 *   NTCNR_0X13C (316U)
 *   NTCNR_0X13D (317U)
 *   NTCNR_0X13E (318U)
 *   NTCNR_0X13F (319U)
 *   NTCNR_0X140 (320U)
 *   NTCNR_0X141 (321U)
 *   NTCNR_0X142 (322U)
 *   NTCNR_0X143 (323U)
 *   NTCNR_0X144 (324U)
 *   NTCNR_0X145 (325U)
 *   NTCNR_0X146 (326U)
 *   NTCNR_0X147 (327U)
 *   NTCNR_0X148 (328U)
 *   NTCNR_0X149 (329U)
 *   NTCNR_0X14A (330U)
 *   NTCNR_0X14B (331U)
 *   NTCNR_0X14C (332U)
 *   NTCNR_0X14D (333U)
 *   NTCNR_0X14E (334U)
 *   NTCNR_0X14F (335U)
 *   NTCNR_0X150 (336U)
 *   NTCNR_0X151 (337U)
 *   NTCNR_0X152 (338U)
 *   NTCNR_0X153 (339U)
 *   NTCNR_0X154 (340U)
 *   NTCNR_0X155 (341U)
 *   NTCNR_0X156 (342U)
 *   NTCNR_0X157 (343U)
 *   NTCNR_0X158 (344U)
 *   NTCNR_0X159 (345U)
 *   NTCNR_0X15A (346U)
 *   NTCNR_0X15B (347U)
 *   NTCNR_0X15C (348U)
 *   NTCNR_0X15D (349U)
 *   NTCNR_0X15E (350U)
 *   NTCNR_0X15F (351U)
 *   NTCNR_0X160 (352U)
 *   NTCNR_0X161 (353U)
 *   NTCNR_0X162 (354U)
 *   NTCNR_0X163 (355U)
 *   NTCNR_0X164 (356U)
 *   NTCNR_0X165 (357U)
 *   NTCNR_0X166 (358U)
 *   NTCNR_0X167 (359U)
 *   NTCNR_0X168 (360U)
 *   NTCNR_0X169 (361U)
 *   NTCNR_0X16A (362U)
 *   NTCNR_0X16B (363U)
 *   NTCNR_0X16C (364U)
 *   NTCNR_0X16D (365U)
 *   NTCNR_0X16E (366U)
 *   NTCNR_0X16F (367U)
 *   NTCNR_0X170 (368U)
 *   NTCNR_0X171 (369U)
 *   NTCNR_0X172 (370U)
 *   NTCNR_0X173 (371U)
 *   NTCNR_0X174 (372U)
 *   NTCNR_0X175 (373U)
 *   NTCNR_0X176 (374U)
 *   NTCNR_0X177 (375U)
 *   NTCNR_0X178 (376U)
 *   NTCNR_0X179 (377U)
 *   NTCNR_0X17A (378U)
 *   NTCNR_0X17B (379U)
 *   NTCNR_0X17C (380U)
 *   NTCNR_0X17D (381U)
 *   NTCNR_0X17E (382U)
 *   NTCNR_0X17F (383U)
 *   NTCNR_0X180 (384U)
 *   NTCNR_0X181 (385U)
 *   NTCNR_0X182 (386U)
 *   NTCNR_0X183 (387U)
 *   NTCNR_0X184 (388U)
 *   NTCNR_0X185 (389U)
 *   NTCNR_0X186 (390U)
 *   NTCNR_0X187 (391U)
 *   NTCNR_0X188 (392U)
 *   NTCNR_0X189 (393U)
 *   NTCNR_0X18A (394U)
 *   NTCNR_0X18B (395U)
 *   NTCNR_0X18C (396U)
 *   NTCNR_0X18D (397U)
 *   NTCNR_0X18E (398U)
 *   NTCNR_0X18F (399U)
 *   NTCNR_0X190 (400U)
 *   NTCNR_0X191 (401U)
 *   NTCNR_0X192 (402U)
 *   NTCNR_0X193 (403U)
 *   NTCNR_0X194 (404U)
 *   NTCNR_0X195 (405U)
 *   NTCNR_0X196 (406U)
 *   NTCNR_0X197 (407U)
 *   NTCNR_0X198 (408U)
 *   NTCNR_0X199 (409U)
 *   NTCNR_0X19A (410U)
 *   NTCNR_0X19B (411U)
 *   NTCNR_0X19C (412U)
 *   NTCNR_0X19D (413U)
 *   NTCNR_0X19E (414U)
 *   NTCNR_0X19F (415U)
 *   NTCNR_0X1A0 (416U)
 *   NTCNR_0X1A1 (417U)
 *   NTCNR_0X1A2 (418U)
 *   NTCNR_0X1A3 (419U)
 *   NTCNR_0X1A4 (420U)
 *   NTCNR_0X1A5 (421U)
 *   NTCNR_0X1A6 (422U)
 *   NTCNR_0X1A7 (423U)
 *   NTCNR_0X1A8 (424U)
 *   NTCNR_0X1A9 (425U)
 *   NTCNR_0X1AA (426U)
 *   NTCNR_0X1AB (427U)
 *   NTCNR_0X1AC (428U)
 *   NTCNR_0X1AD (429U)
 *   NTCNR_0X1AE (430U)
 *   NTCNR_0X1AF (431U)
 *   NTCNR_0X1B0 (432U)
 *   NTCNR_0X1B1 (433U)
 *   NTCNR_0X1B2 (434U)
 *   NTCNR_0X1B3 (435U)
 *   NTCNR_0X1B4 (436U)
 *   NTCNR_0X1B5 (437U)
 *   NTCNR_0X1B6 (438U)
 *   NTCNR_0X1B7 (439U)
 *   NTCNR_0X1B8 (440U)
 *   NTCNR_0X1B9 (441U)
 *   NTCNR_0X1BA (442U)
 *   NTCNR_0X1BB (443U)
 *   NTCNR_0X1BC (444U)
 *   NTCNR_0X1BD (445U)
 *   NTCNR_0X1BE (446U)
 *   NTCNR_0X1BF (447U)
 *   NTCNR_0X1C0 (448U)
 *   NTCNR_0X1C1 (449U)
 *   NTCNR_0X1C2 (450U)
 *   NTCNR_0X1C3 (451U)
 *   NTCNR_0X1C4 (452U)
 *   NTCNR_0X1C5 (453U)
 *   NTCNR_0X1C6 (454U)
 *   NTCNR_0X1C7 (455U)
 *   NTCNR_0X1C8 (456U)
 *   NTCNR_0X1C9 (457U)
 *   NTCNR_0X1CA (458U)
 *   NTCNR_0X1CB (459U)
 *   NTCNR_0X1CC (460U)
 *   NTCNR_0X1CD (461U)
 *   NTCNR_0X1CE (462U)
 *   NTCNR_0X1CF (463U)
 *   NTCNR_0X1D0 (464U)
 *   NTCNR_0X1D1 (465U)
 *   NTCNR_0X1D2 (466U)
 *   NTCNR_0X1D3 (467U)
 *   NTCNR_0X1D4 (468U)
 *   NTCNR_0X1D5 (469U)
 *   NTCNR_0X1D6 (470U)
 *   NTCNR_0X1D7 (471U)
 *   NTCNR_0X1D8 (472U)
 *   NTCNR_0X1D9 (473U)
 *   NTCNR_0X1DA (474U)
 *   NTCNR_0X1DB (475U)
 *   NTCNR_0X1DC (476U)
 *   NTCNR_0X1DD (477U)
 *   NTCNR_0X1DE (478U)
 *   NTCNR_0X1DF (479U)
 *   NTCNR_0X1E0 (480U)
 *   NTCNR_0X1E1 (481U)
 *   NTCNR_0X1E2 (482U)
 *   NTCNR_0X1E3 (483U)
 *   NTCNR_0X1E4 (484U)
 *   NTCNR_0X1E5 (485U)
 *   NTCNR_0X1E6 (486U)
 *   NTCNR_0X1E7 (487U)
 *   NTCNR_0X1E8 (488U)
 *   NTCNR_0X1E9 (489U)
 *   NTCNR_0X1EA (490U)
 *   NTCNR_0X1EB (491U)
 *   NTCNR_0X1EC (492U)
 *   NTCNR_0X1ED (493U)
 *   NTCNR_0X1EE (494U)
 *   NTCNR_0X1EF (495U)
 *   NTCNR_0X1F0 (496U)
 *   NTCNR_0X1F1 (497U)
 *   NTCNR_0X1F2 (498U)
 *   NTCNR_0X1F3 (499U)
 *   NTCNR_0X1F4 (500U)
 *   NTCNR_0X1F5 (501U)
 *   NTCNR_0X1F6 (502U)
 *   NTCNR_0X1F7 (503U)
 *   NTCNR_0X1F8 (504U)
 *   NTCNR_0X1F9 (505U)
 *   NTCNR_0X1FA (506U)
 *   NTCNR_0X1FB (507U)
 *   NTCNR_0X1FC (508U)
 *   NTCNR_0X1FD (509U)
 *   NTCNR_0X1FE (510U)
 *   NTCNR_0X1FF (511U)
 * NtcSts1: Enumeration of integer in interval [0...255] with enumerators
 *   NTCSTS_PASSD (0U)
 *   NTCSTS_FAILD (1U)
 *   NTCSTS_PREPASSD (2U)
 *   NTCSTS_PREFAILD (3U)
 *
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *
 * APIs which are accessible from all runnable entities of the SW-C
 *
 **********************************************************************************************************************
 * Per-Instance Memory:
 * ====================
 *   float32 *Rte_Pim_FordVehOutdAirTPrev(void)
 *   uint32 *Rte_Pim_MissMsgFaildRefTi(void)
 *   uint32 *Rte_Pim_MissMsgPassdRefTi(void)
 *   uint16 *Rte_Pim_FordVehOutdAirTRawPrev(void)
 *   uint8 *Rte_Pim_ClrDiagcFlgProxyPrev(void)
 *   boolean *Rte_Pim_FordVehMsg41AMiss(void)
 *
 * Calibration Parameters:
 * =======================
 *   Calibration Component Calibration Parameters:
 *   ---------------------------------------------
 *   u16p0 Rte_Prm_FordMsg41ABusHiSpdMissMsgFaildThd_Val(void)
 *   u16p0 Rte_Prm_FordMsg41ABusHiSpdMissMsgPassdThd_Val(void)
 *
 *********************************************************************************************************************/


# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\FordMsg41ABusHiSpd_MemMap.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  FordMsg41ABusHiSpd_MemMap.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Memory Mapping header file for SW-C <FordMsg41ABusHiSpd> (Contract Phase)
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of version logging area >>                DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of version logging area >>                  DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of include and declaration area >>        DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of include and declaration area >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * FordMsg41ABusHiSpd specific defines
 *********************************************************************************************************************/

/* open sections */
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_CODE
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_CONST_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_NOINIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_ZERO_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/* close sections */
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_CODE
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_CONST_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_NOINIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_ZERO_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of removed code area >>                   DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of removed code area >>                     DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
# 685 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c" 2

/**********************************************************************************************************************
 *
 * Runnable Entity Name: FordMsg41ABusHiSpdInit1
 *
 *---------------------------------------------------------------------------------------------------------------------
 *
 * Executed once after the RTE is started
 *
 **********************************************************************************************************************
 *
 * Client/Server Interfaces:
 * =========================
 *   Server Invocation:
 *   ------------------
 *   Std_ReturnType Rte_Call_GetRefTmr100MicroSec32bit_Oper(uint32 *RefTmr_Arg)
 *     Synchronous Server Invocation. Timeout: None
 *
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of documentation area >>                  DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpdInit1_doc
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of documentation area >>                    DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

void FordMsg41ABusHiSpdInit1(void) /* PRQA S 0850 */ /* MD_MSR_19.8 */
{
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of runnable implementation >>             DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpdInit1
 *********************************************************************************************************************/
*(Rte_Inst_FordMsg41ABusHiSpd->Pim_FordVehOutdAirTPrev)          = (86.5F);
*(Rte_Inst_FordMsg41ABusHiSpd->Pim_FordVehOutdAirTRawPrev)       = (254U);
(void)Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper((Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgFaildRefTi));
(void)Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper((Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgPassdRefTi));
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of runnable implementation >>               DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
}

/**********************************************************************************************************************
 *
 * Runnable Entity Name: FordMsg41ABusHiSpdPer1
 *
 *---------------------------------------------------------------------------------------------------------------------
 *
 * Executed if at least one of the following trigger conditions occurred:
 *   - triggered on TimingEvent every 10ms
 *
 **********************************************************************************************************************
 *
 * Input Interfaces:
 * =================
 *   Explicit S/R API:
 *   -----------------
 *   Std_ReturnType Rte_Read_ClrDiagcFlgProxy_Val(uint8 *data)
 *   Std_ReturnType Rte_Read_FordCanDtcInhb_Logl(boolean *data)
 *   Std_ReturnType Rte_Read_FordEpsLifeCycMod_Val(uint8 *data)
 *   Std_ReturnType Rte_Read_FordOutdAirTSts_Ford_Outside_Air_Temp_Stat(Ford_Outside_Air_Temp_Stat *data)
 *
 * Output Interfaces:
 * ==================
 *   Explicit S/R API:
 *   -----------------
 *   Std_ReturnType Rte_Write_FordVehOutdAirT_Val(float32 data)
 *   Std_ReturnType Rte_Write_FordVehOutdAirTRaw_Val(uint16 data)
 *
 * Client/Server Interfaces:
 * =========================
 *   Server Invocation:
 *   ------------------
 *   Std_ReturnType Rte_Call_GetRefTmr100MicroSec32bit_Oper(uint32 *RefTmr_Arg)
 *     Synchronous Server Invocation. Timeout: None
 *   Std_ReturnType Rte_Call_GetTiSpan100MicroSec32bit_Oper(uint32 RefTmr_Arg, uint32 *TiSpan_Arg)
 *     Synchronous Server Invocation. Timeout: None
 *   Std_ReturnType Rte_Call_SetNtcSts_Oper(NtcNr1 NtcNr_Arg, uint8 NtcStInfo_Arg, NtcSts1 NtcSts_Arg, uint16 DebStep_Arg)
 *     Synchronous Server Invocation. Timeout: None
 *     Returned Application Errors: RTE_E_SetNtcSts_PortIf1_E_NOT_OK
 *
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of documentation area >>                  DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpdPer1_doc
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of documentation area >>                    DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

void FordMsg41ABusHiSpdPer1(void) /* PRQA S 0850 */ /* MD_MSR_19.8 */
{
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of runnable implementation >>             DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpdPer1
 *********************************************************************************************************************/

 /* Local Variable Definition*/
        uint32 TiSpan_Cnt_T_u32;
        
        uint8 FordEpsLifeCycMod_Cnt_T_u08;
        boolean FordCanDtcInhb_Cnt_T_logl;
        uint8 ClrDiagcFlgProxy_Cnt_T_u08;
        
        
        uint16 BusHiSpdMissThd_Cnt_T_u16;        
        uint16 FordVehOutdAirTRaw_Cnt_T_u16;
        Ford_Outside_Air_Temp_Stat Ford_Outside_Air_Temp_Stat_Cnt_T_enum;        
        
        float32  FordVehOutdAirT_DegCgrd_T_f32;  
        
        boolean DiagEna_Cnt_T_logl;
        boolean ClrDiagcFlgProxyEna_Cnt_T_logl;
 
  /*Reading inputs from RTE*/
   (void)Rte_Read_FordMsg41ABusHiSpd_ClrDiagcFlgProxy_Val(&ClrDiagcFlgProxy_Cnt_T_u08);
   (void)Rte_Read_FordMsg41ABusHiSpd_FordCanDtcInhb_Logl(&FordCanDtcInhb_Cnt_T_logl);
   (void)Rte_Read_FordMsg41ABusHiSpd_FordEpsLifeCycMod_Val(&FordEpsLifeCycMod_Cnt_T_u08);
   (void)Rte_Read_FordMsg41ABusHiSpd_FordOutdAirTSts_Ford_Outside_Air_Temp_Stat(&Ford_Outside_Air_Temp_Stat_Cnt_T_enum);
 
 
DiagEna_Cnt_T_logl =  DiagEna(FordCanDtcInhb_Cnt_T_logl,ClrDiagcFlgProxy_Cnt_T_u08,&ClrDiagcFlgProxyEna_Cnt_T_logl);    

if(FordEpsLifeCycMod_Cnt_T_u08 == (1U))
{
        BusHiSpdMissThd_Cnt_T_u16 = (5000U);
}       
else
{
        BusHiSpdMissThd_Cnt_T_u16 = Rte_Prm_FordMsg41ABusHiSpd_FordMsg41ABusHiSpdMissMsgFaildThd_Val();
}                                
/*** End of CalSeln ***/        
 
 if(1u == *(Rte_Inst_FordMsg41ABusHiSpd->Pim_FordVehMsg41AMiss))
 {
        /*** Start of MissMsgDetermination ***/ 
        if(1u == DiagEna_Cnt_T_logl)
        {        
                (void)Rte_Call_FordMsg41ABusHiSpd_GetTiSpan100MicroSec32bit_Oper(*(Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgFaildRefTi),&TiSpan_Cnt_T_u32);
                if( TiSpan_Cnt_T_u32>((uint32) (BusHiSpdMissThd_Cnt_T_u16 *(uint32) (10U))))
                {
                        (void)Rte_Call_FordMsg41ABusHiSpd_SetNtcSts_Oper((410U), 0U, (1U), (65535U));
                }                       
        }
        else
        {
                (void)Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper((Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgFaildRefTi));
                (void)Rte_Call_FordMsg41ABusHiSpd_SetNtcSts_Oper((410U), 0U, (0U), (65535U));  
        }
        if(ClrDiagcFlgProxyEna_Cnt_T_logl ==  1u)
        {
                (void)Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper((Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgFaildRefTi));
                
        }
        else
        {
                /* do nothing */                
        }
        
        FordVehOutdAirT_DegCgrd_T_f32 = *(Rte_Inst_FordMsg41ABusHiSpd->Pim_FordVehOutdAirTPrev);
        FordVehOutdAirTRaw_Cnt_T_u16 = *(Rte_Inst_FordMsg41ABusHiSpd->Pim_FordVehOutdAirTRawPrev);
        (void)Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper((Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgPassdRefTi));
        /*** End of MissMsgDetermination ***/            
        }
else
{
        /*** Start of MsgProcessing ***/
        if(1u == DiagEna_Cnt_T_logl)
        {        
                (void)Rte_Call_FordMsg41ABusHiSpd_GetTiSpan100MicroSec32bit_Oper(*(Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgPassdRefTi),&TiSpan_Cnt_T_u32);
                if( TiSpan_Cnt_T_u32>((uint32) (Rte_Prm_FordMsg41ABusHiSpd_FordMsg41ABusHiSpdMissMsgPassdThd_Val() *(uint32) (10U))))
                {
                        (void)Rte_Call_FordMsg41ABusHiSpd_SetNtcSts_Oper((410U), 0U, (0U), (65535U));
                }                       
        }
        else
        {
                (void)Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper((Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgPassdRefTi));
                (void)Rte_Call_FordMsg41ABusHiSpd_SetNtcSts_Oper((410U), 0U, (0U), (65535U));  
        }
        
        if(ClrDiagcFlgProxyEna_Cnt_T_logl ==  1u)
        {
                (void)Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper((Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgPassdRefTi));
        }
        else
        {
                /* do nothing*/
        }
        
        (void)Rte_Call_FordMsg41ABusHiSpd_GetRefTmr100MicroSec32bit_Oper((Rte_Inst_FordMsg41ABusHiSpd->Pim_MissMsgFaildRefTi));
        
         /*** Start of OutputProcessing ***/
        FordVehOutdAirT_DegCgrd_T_f32 = ((FixdToFloat_f32_u16(Ford_Outside_Air_Temp_Stat_Cnt_T_enum,1.0F) * ((0.5F)))- ((40.0F)));
        FordVehOutdAirTRaw_Cnt_T_u16 = Ford_Outside_Air_Temp_Stat_Cnt_T_enum;   
        /*** End of OutputProcessing ***/               
        /*** End of MsgProcessing ***/
}

FordVehOutdAirT_DegCgrd_T_f32 = Lim_f32(FordVehOutdAirT_DegCgrd_T_f32, (-40.0F), (86.5F)); 
*(Rte_Inst_FordMsg41ABusHiSpd->Pim_FordVehOutdAirTPrev) = FordVehOutdAirT_DegCgrd_T_f32;
FordVehOutdAirTRaw_Cnt_T_u16 = Lim_u16(FordVehOutdAirTRaw_Cnt_T_u16, (0U), (255U)); 
*(Rte_Inst_FordMsg41ABusHiSpd->Pim_FordVehOutdAirTRawPrev) = FordVehOutdAirTRaw_Cnt_T_u16;
        
    /*Writing outputs to RTE*/
(void)Rte_Write_FordMsg41ABusHiSpd_FordVehOutdAirT_Val(FordVehOutdAirT_DegCgrd_T_f32);
(void)Rte_Write_FordMsg41ABusHiSpd_FordVehOutdAirTRaw_Val(FordVehOutdAirTRaw_Cnt_T_u16);
        
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of runnable implementation >>               DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
}


# 1 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\tools\\local\\generate\\FordMsg41ABusHiSpd_MemMap.h" 1
/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  FordMsg41ABusHiSpd_MemMap.h
 *        Config:  C:/Component/MM078A_FordMsg41ABusHiSpd_Impl/tools/Component.dpa
 *     SW-C Type:  FordMsg41ABusHiSpd
 *  Generated at:  Fri Apr 20 16:09:20 2018
 *
 *     Generator:  MICROSAR RTE Generator Version 4.13.0
 *                 RTE Core Version 1.13.0
 *       License:  Unlimited license CBD1400351 for Nexteer Automotive Corporation
 *
 *   Description:  Memory Mapping header file for SW-C <FordMsg41ABusHiSpd> (Contract Phase)
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of version logging area >>                DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of version logging area >>                  DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of include and declaration area >>        DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of include and declaration area >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * FordMsg41ABusHiSpd specific defines
 *********************************************************************************************************************/

/* open sections */
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_CODE
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_CONST_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_NOINIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_START_SEC_VAR_ZERO_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/* close sections */
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_CODE
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_CONST_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_NOINIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!         << Start of memory mapping implementation >>         DO NOT CHANGE THIS COMMENT!
 * Symbol: FordMsg41ABusHiSpd_STOP_SEC_VAR_ZERO_INIT_UNSPECIFIED
 *********************************************************************************************************************/







/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!          << End of memory mapping implementation >>          DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of removed code area >>                   DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of removed code area >>                     DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
# 905 "C:\\Component\\MM078A_FordMsg41ABusHiSpd_Impl\\src\\FordMsg41ABusHiSpd.c" 2


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of function definition area >>            DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/

 /*****************************************************************************
  * Name            : DiagEna
  * Description     : Implementation of "DiagEna" subsystem in model.
  * Inputs          : FordCanDtcInhb_Cnt_T_logl,                     
  *                                   ClrDiagcFlgProxy_Cnt_T_u08.                                     
  * Outputs         : None
  * Returns             : DiagEna_Cnt_T_logl
  * Usage Notes     : NA.
*****************************************************************************/

static boolean DiagEna(boolean FordCanDtcInhb_Cnt_T_logl,
                                                                                                          uint8 ClrDiagcFlgProxy_Cnt_T_u08,
                                                                                                          boolean*ClrDiagcFlgProxyEna_Cnt_T_logl
                                                                                                          )                                                                                               
{
    boolean DiagEna_Cnt_T_logl;
/*** Start of DiagEna ***/
    (FordCanDtcInhb_Cnt_T_logl == 1u ) ? (DiagEna_Cnt_T_logl = 0u) : (DiagEna_Cnt_T_logl = 1u);          
    
        if(ClrDiagcFlgProxy_Cnt_T_u08 != *(Rte_Inst_FordMsg41ABusHiSpd->Pim_ClrDiagcFlgProxyPrev))
        {
            *ClrDiagcFlgProxyEna_Cnt_T_logl = 1u;
        }
        else
        {
            *ClrDiagcFlgProxyEna_Cnt_T_logl = 0u;
        }
        *(Rte_Inst_FordMsg41ABusHiSpd->Pim_ClrDiagcFlgProxyPrev)= ClrDiagcFlgProxy_Cnt_T_u08;
        return(DiagEna_Cnt_T_logl);             
/*** End of DiagEna ***/
}
                        

/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of function definition area >>              DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << Start of removed code area >>                   DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/


/**********************************************************************************************************************
 * DO NOT CHANGE THIS COMMENT!           << End of removed code area >>                     DO NOT CHANGE THIS COMMENT!
 *********************************************************************************************************************/
