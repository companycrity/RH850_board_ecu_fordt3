Placer 1.6
State
LoadSections_addArgs = "                                                      \
                                                                              \
    if( $btnText.set == 0 &&                                                  \
        $btnData.set == 0 &&                                                  \
        $btnBSS.set  == 0 ) {                                                 \
        argsAccum = argsAccum | \" -noload\";                                 \
    } else if( $btnText.set == 1 &&                                           \
               $btnData.set == 1 &&                                           \
               $btnBSS.set  == 1 ) {                                          \
        argsAccum = argsAccum | \" -loadall\";                                \
    } else {                                                                  \
        if( $btnText.set == 0 ) {                                             \
            argsAccum = argsAccum | \" -notext\";                             \
        }                                                                     \
        if( $btnData.set == 0 ) {                                             \
            argsAccum = argsAccum | \" -nodata\";                             \
        }                                                                     \
        if( $btnBSS.set == 1 ) {                                              \
            argsAccum = argsAccum | \" -bss\";                                \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
LoadSections_handle_argv = "                                                  \
                                                                              \
    if( argv == \"-noload\" ) {                                               \
        $btnText.set = 0;                                                     \
        $btnData.set = 0;                                                     \
        $btnBSS.set  = 0;                                                     \
        return 1;                                                             \
                                                                              \
    } else if( argv == \"-loadall\" ) {                                       \
        $btnText.set = 1;                                                     \
        $btnData.set = 1;                                                     \
        $btnBSS.set  = 1;                                                     \
        return 1;                                                             \
                                                                              \
    } else if( argv == \"-notext\" ) {                                        \
        $btnText.set = 0;                                                     \
        return 1;                                                             \
                                                                              \
    } else if( argv == \"-text\" ) {                                          \
        $btnText.set = 1;                                                     \
        return 1;                                                             \
                                                                              \
    } else if( argv == \"-nodata\" ) {                                        \
        $btnData.set = 0;                                                     \
        return 1;                                                             \
                                                                              \
    } else if( argv == \"-data\" ) {                                          \
        $btnData.set = 1;                                                     \
        return 1;                                                             \
                                                                              \
    } else if( argv == \"-nobss\" ) {                                         \
        $btnBSS.set = 0;                                                      \
        return 1;                                                             \
                                                                              \
    } else if( argv == \"-bss\" ) {                                           \
        $btnBSS.set = 1;                                                      \
        return 1;                                                             \
                                                                              \
    } else {                                                                  \
        return 0;                                                             \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
LoadSections_handle_btnBSS = "                                                \
                                                                              \
                                                                              \
                                                                              \
"
LoadSections_handle_btnData = "                                               \
                                                                              \
                                                                              \
                                                                              \
"
LoadSections_handle_btnText = "                                               \
                                                                              \
                                                                              \
                                                                              \
"
LoadSections_onCleanup = "                                                    \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
LoadSections_onSetup = "                                                      \
    $btnText.set = 1;                                                         \
    $btnData.set = 1;                                                         \
    $btnBSS.set  = 0;                                                         \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_eval_connection = "                                    \
    $TCGUILIB_sane = \"0\";                                                   \
    STRINGLIB_init();                                                         \
    STRINGLIB_string = $tfTargetName;                                         \
    if( $btnEthernet.set == 1 &&                                              \
        STRINGLIB_count_tokens () <= 0) {                                     \
        alert \"Please specify a Probe Name on the 'Connection' tab\";        \
        return;                                                               \
    }                                                                         \
/* Check that there are no spaces in the input */                             \
    STRINGLIB_init();                                                         \
    STRINGLIB_stop_chars = \" \";                                             \
    STRINGLIB_string = $tfTargetName;                                         \
    if ($btnEthernet.set == 1 &&                                              \
            STRINGLIB_count_tokens() > 1) {                                   \
        alert \"No spaces are allowed in the Probe Name or IP Address field on the 'Connection' tab\"; \
        return;                                                               \
    }                                                                         \
    if( $btnUsb.set == 1 ) {                                                  \
        hostName = clitext (\"__gethostname\");                               \
        if (index (hostName, \"windows\") != -1) {                            \
            STRINGLIB_init();                                                 \
            STRINGLIB_string = $tfUSBDevice;                                  \
            if ( STRINGLIB_count_tokens () <= 0) {                            \
                alert \"Please specify a USB Device on the 'Connection' tab\"; \
                return;                                                       \
            }                                                                 \
        }                                                                     \
    }                                                                         \
    STRINGLIB_init();                                                         \
    STRINGLIB_string = $tfForceCore;                                          \
    if( $btnForceCore.set == 1 &&                                             \
        STRINGLIB_count_tokens () <= 0) {                                     \
        alert \"Please specify a Core #ID on the 'Advanced' tab\";            \
        return;                                                               \
    }                                                                         \
/* Check that there are no spaces in the input */                             \
    STRINGLIB_init();                                                         \
    STRINGLIB_stop_chars = \" \";                                             \
    STRINGLIB_string = $tfForceCore;                                          \
    if( $btnForceCore.set == 1 &&                                             \
        STRINGLIB_count_tokens () > 1) {                                      \
        alert \"No spaces are allowed in the 'Force core ID#' field on the 'Advanced' tab\"; \
        return;                                                               \
    }                                                                         \
/* Check that probe config file is a valid filename */                        \
    STRINGLIB_init();                                                         \
    STRINGLIB_filename_string = $tfProbeCfg;                                  \
    if (STRINGLIB_is_filename() != 1) {                                       \
        alert \"Invalid filename for Probe Configuration File\";              \
        return;                                                               \
    }                                                                         \
    $TCGUILIB_sane = \"1\";                                                   \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_handle_btnEthernet = "                                 \
    $btnEthernet.set = 1;                                                     \
    $btnUsb.set      = 0;                                                     \
    $txtUSBName.dim    = 1;                                                   \
    $tfUSBDevice.dim   = 1;                                                   \
    $txtTargetName.dim = 0;                                                   \
    $tfTargetName.dim  = 0;                                                   \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_handle_btnForceCore = "                                \
    if ($btnForceCore.set == 1) {                                             \
        $tfForceCore.dim = 0;                                                 \
    } else {                                                                  \
        $tfForceCore.dim = 1;                                                 \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_handle_btnUsb = "                                      \
    $btnEthernet.set = 0;                                                     \
    $btnUsb.set   = 1;                                                        \
    $txtUSBName.dim    = 0;                                                   \
    $tfUSBDevice.dim   = 0;                                                   \
    $txtTargetName.dim = 1;                                                   \
    $tfTargetName.dim  = 1;                                                   \
    if (strlen ($tfUSBDevice) == 0) {                                         \
        $tfUSBDevice = \"0\";                                                 \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_handle_choose_probe_config = "                         \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MAJOR_VERSION)\"); \
    major_ver = STRINGLIB_get_number();                                       \
    dlgCmd = \"filedialog \\\"Select\\\" \\\"Use which probe config file?\\\" -preset \\\"ProbeConfig\\\"\"; \
    if (major_ver >= 6) {                                                     \
        scriptPath = clitext(\"connection report \" | $TCGUILIB_CID | \" scriptpath \\\"EMPTY\\\"\"); \
        if (strlen(scriptPath) > 5 &&                                         \
            substr(scriptPath, strlen(scriptPath)-5, 5) == \"EMPTY\") {       \
              dlgCmd = dlgCmd | \" -defaultdir \\\"\" |                       \
                substr(scriptPath, 0, strlen(scriptPath)-5) | \"\\\"\";       \
        }                                                                     \
    }                                                                         \
    ProbeConfigFile = clitext( dlgCmd );                                      \
    if( strlen( ProbeConfigFile ) > 0 ) {                                     \
/* They didn't cancel, so change the thing */                                 \
        $tfProbeCfg = ProbeConfigFile;                                        \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_handle_edit_probe_config = "                           \
    configFile = clitext (\"connection report \" | $TCGUILIB_CID | \" scriptpath \\\"\" | $tfProbeCfg | \"\\\"\"); \
    clitext( \"__editnewprocess \\\"\" | configFile | \"\\\"\");              \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_onCleanup = "                                          \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_onSetup = "                                            \
    clitext (\"setpswindowname \\\"Green Hills Debug Probe (mpserv) Connection Editor\\\"\"); \
    hostName = clitext (\"__gethostname\");                                   \
    if (index (hostName, \"windows\") != -1) {                                \
        activate (2);                                                         \
    } else if (index (hostName, \"linux\") != -1) {                           \
        activate (1);                                                         \
        $btnUsb.dim = 1;                                                      \
        $btnUsb.set = 0;                                                      \
    } else {                                                                  \
        $btnUsb.dim = 1;                                                      \
        $btnUsb.set = 0;                                                      \
        activate (3);                                                         \
    }                                                                         \
    LoadSections_onSetup();                                                   \
    OtherOptions_onSetup();                                                   \
    MPServConnectionEditor_handle_btnEthernet();                              \
    $btnForceCore.set = 0;                                                    \
    $tfForceCore.dim = 1;                                                     \
    $btnSyncCores.set = 0;                                                    \
/* set the callbacks and properties the TCGUILIB wants */                     \
    $TCGUILIB_editor_dlg_name      = \"MPServConnectionEditor\";              \
    $TCGUILIB_editor_saveargs_fn   = \"MPServConnectionEditor_save_connection\"; \
    $TCGUILIB_editor_readargs_fn   = \"MPServConnectionEditor_read_connection\"; \
    $TCGUILIB_editor_evalargs_fn   = \"MPServConnectionEditor_eval_connection\"; \
    $TCGUILIB_statuswin_dlg_name   = \"MPServConnectionStatus\";              \
    $TCGUILIB_editor_legacyscripts  = \"1\";                                  \
    TCGUILIB_editor_onSetup();                                                \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_read_connection = "                                    \
/*    STRINGLIB_msg = \"Reading connection\"; STRINGLIB_show_msg(); */        \
    allArgs = $TCGUILIB_conargs;                                              \
/*    STRINGLIB_msg = \"all args: \" | $TCGUILIB_conargs; STRINGLIB_show_msg(); */ \
/* Set some defaults */                                                       \
    $tfTargetName.dim = 0;                                                    \
    $tfTargetName     = \"\";                                                 \
    $tfOtherOptions   = \"\";                                                 \
    $btnSysCalls.set  = 1;                                                    \
    $btnSyncCores.set = 0;                                                    \
    LoadSections_onSetup();                                                   \
    $btnUsb.set = 0;                                                          \
/* We don't have a server name yet, so we must not have hit apply yet */      \
/* In this case the default is Ethernet */                                    \
/* Otherwise it is usb */                                                     \
    MPServConnectionEditor_handle_btnEthernet();                              \
/* Set argv to first token */                                                 \
    STRINGLIB_init();                                                         \
    STRINGLIB_string = allArgs;                                               \
    argv = STRINGLIB_get_next_token();                                        \
    seenusb = 0;                                                              \
    $tfTargetName = \"\";                                                     \
    $tfProbeCfg = \"\";                                                       \
/* default to Probe cfg edit button dimmed. */                                \
    $btnsProbeCfg.dim(1) = 1;                                                 \
/* Parse args */                                                              \
    while( strlen( argv ) > 0 ) {                                             \
/* STRINGLIB_msg = \"argv: \" | argv; STRINGLIB_show_msg(); */                \
        if( argv == \"-force_coreid\" ) {                                     \
            $btnForceCore.set = 1;                                            \
            $tfForceCore.dim = 0;                                             \
            $tfForceCore = STRINGLIB_get_next_token();                        \
        }                                                                     \
        else if( argv == \"-setup\" ) {                                       \
            if (strlen($tfSetupScript) == 0) {                                \
                STRING_token = STRINGLIB_get_next_token();                    \
                STRING_save = STRINGLIB_string;                               \
                STRINGLIB_string = STRING_token;                              \
                $tfSetupScript =                                              \
                    STRINGLIB_copy_and_strip_outer_quotes();                  \
                STRINGLIB_string = STRING_save;                               \
                $bsSetupScript.set(2) = 1;                                    \
            }                                                                 \
        }                                                                     \
        else if( argv == \"-cfgloaddisplay\" ) {                              \
/* This is what's displayed in the GUI */                                     \
            STRING_token = STRINGLIB_get_next_token();                        \
            STRING_save = STRINGLIB_string;                                   \
            STRINGLIB_string = STRING_token;                                  \
            $tfProbeCfg = STRINGLIB_copy_and_strip_outer_quotes();            \
            STRINGLIB_string = STRING_save;                                   \
            $btnsProbeCfg.dim(1) = 0;                                         \
        }                                                                     \
        else if( argv == \"-cfgload\" ) {                                     \
            STRING_token = STRINGLIB_get_next_token();                        \
/* Display in the GUI only if we didn't */                                    \
/* already find -cfgloadbase. */                                              \
            if (strlen($tfProbeCfg) == 0) {                                   \
                    STRING_save = STRINGLIB_string;                           \
                    STRINGLIB_string = STRING_token;                          \
                    $tfProbeCfg = STRINGLIB_copy_and_strip_outer_quotes();    \
                    STRINGLIB_string = STRING_save;                           \
            }                                                                 \
            $btnsProbeCfg.dim(1) = 0;                                         \
        }                                                                     \
        else if( argv == \"-runmode_port\" ) {                                \
            runmodeport = STRINGLIB_get_next_token();                         \
            if (strlen($tfOtherOptions) == 0) {                               \
                $tfOtherOptions = \"-runmode_port \" | runmodeport;           \
            } else {                                                          \
                $tfOtherOptions = $tfOtherOptions | \" -runmode_port \" | runmodeport; \
            }                                                                 \
        }                                                                     \
        else if( argv == \"-adi\" ) {                                         \
            if (strlen($tfOtherOptions) == 0) {                               \
                $tfOtherOptions = argv;                                       \
            } else {                                                          \
                $tfOtherOptions = $tfOtherOptions | \" \" | argv;             \
            }                                                                 \
        }                                                                     \
        else if( argv == \"-synccores\" ) {                                   \
            $btnSyncCores.set = 1;                                            \
        }                                                                     \
        else if( argv == \"-nosyscalls\" ) {                                  \
            $btnSysCalls.set = 0;                                             \
        }                                                                     \
        else if( argv == \"-noload\" ) {                                      \
            $btnText.set = 0;                                                 \
            $btnData.set = 0;                                                 \
            $btnBSS.set  = 0;                                                 \
        } else if( argv == \"-loadall\" ) {                                   \
            $btnText.set = 1;                                                 \
            $btnData.set = 1;                                                 \
            $btnBSS.set  = 1;                                                 \
        } else if( argv == \"-notext\" ) {                                    \
            $btnText.set = 0;                                                 \
        } else if( argv == \"-text\" ) {                                      \
            $btnText.set = 1;                                                 \
        } else if( argv == \"-nodata\" ) {                                    \
            $btnData.set = 0;                                                 \
        } else if( argv == \"-data\" ) {                                      \
            $btnData.set = 1;                                                 \
        } else if( argv == \"-nobss\" ) {                                     \
            $btnBSS.set = 0;                                                  \
        } else if( argv == \"-bss\" ) {                                       \
            $btnBSS.set = 1;                                                  \
        } else if( argv == \"-usb\" ) {                                       \
            seenusb = 1;                                                      \
            hostName = clitext (\"__gethostname\");                           \
            if (index (hostName, \"windows\") != -1) {                        \
/* Specify the USB device */                                                  \
                $tfUSBDevice.dim = 0;                                         \
                $tfUSBDevice = STRINGLIB_get_next_token ();                   \
            }                                                                 \
        } else if (index(argv, \"-\") == 0) {                                 \
/* This starts with a dash, so let's assume it's an argument */               \
/* we don't know about. */                                                    \
              if (strlen($tfOtherOptions) == 0) {                             \
                if (strlen($tfTargetName) == 0) {                             \
                    $tfOtherOptions = argv;                                   \
                } else {                                                      \
                    $tfOtherOptions = $tfTargetName | \" \" | argv;           \
                    $tfTargetName = \"\";                                     \
                }                                                             \
            } else {                                                          \
                if (strlen($tfTargetName) == 0) {                             \
                    $tfOtherOptions = $tfOtherOptions | \" \" | argv;         \
                } else {                                                      \
                    $tfOtherOptions = $tfOtherOptions | \" \" | $tfTargetName | \" \" | argv; \
                    $tfTargetName = \"\";                                     \
                }                                                             \
            }                                                                 \
        } else {                                                              \
/* Let's assume this is the last argument.  That means that */                \
/* the previous argument that we got that we thought was */                   \
/* the last really wasn't, so it's an \"other option\" */                     \
/* instead of a target name. */                                               \
            if( strlen( $tfOtherOptions ) == 0 ) {                            \
                $tfOtherOptions = $tfTargetName;                              \
            } else {                                                          \
                $tfOtherOptions = $tfOtherOptions | \" \" | $tfTargetName;    \
            }                                                                 \
/* this must be the hostname, then. */                                        \
            $tfTargetName = argv;                                             \
        }                                                                     \
/* Advance argv to next token */                                              \
        argv = STRINGLIB_get_next_token();                                    \
    }                                                                         \
    if (seenusb == 1) {                                                       \
/* and since we've seen USB now, it must be that the thing */                 \
/* we thought was a target name really wasn't. */                             \
        if( strlen( $tfOtherOptions ) == 0 ) {                                \
            $tfOtherOptions = $tfTargetName;                                  \
        } else {                                                              \
            $tfOtherOptions = $tfOtherOptions | \" \" | $tfTargetName;        \
        }                                                                     \
        $tfTargetName = \"\";                                                 \
        MPServConnectionEditor_handle_btnUsb();                               \
    }                                                                         \
    TCGUILIB_read_runmode_partner();                                          \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionEditor_save_connection = "                                    \
/*    STRINGLIB_msg = \"Saving connection\"; STRINGLIB_show_msg(); */         \
    argsAccum = \"\";                                                         \
    if ($bsSetupScript.set(2) == 1 &&                                         \
        strlen($tfSetupScript) > 0) {                                         \
        STRINGLIB_init();                                                     \
        STRINGLIB_string = $tfSetupScript;                                    \
        if (STRINGLIB_count_tokens () > 0) {                                  \
            argsAccum = argsAccum | \" -setup \\\"\" | $tfSetupScript | \"\\\"\"; \
        }                                                                     \
    }                                                                         \
    if ($tfProbeCfg != \"\") {                                                \
        STRINGLIB_filename_string = $tfProbeCfg;                              \
        if (STRINGLIB_is_filename() == 1) {                                   \
            configFile = clitext (\"connection report \" | $TCGUILIB_CID | \" scriptpath \\\"\" | $tfProbeCfg | \"\\\"\"); \
            argsAccum = argsAccum | \" -cfgload \\\"\" | configFile | \"\\\"\"; \
            argsAccum = argsAccum | \" -cfgloaddisplay \\\"\" | $tfProbeCfg | \"\\\"\"; \
        }                                                                     \
    }                                                                         \
    if ($btnForceCore.set == 1) {                                             \
        argsAccum = argsAccum | \" -force_coreid \" | $tfForceCore;           \
    }                                                                         \
    if($btnSysCalls.set == 0) {                                               \
        argsAccum = argsAccum | \" -nosyscalls\";                             \
    }                                                                         \
    if($btnSyncCores.set == 1) {                                              \
        argsAccum = argsAccum | \" -synccores\";                              \
    }                                                                         \
    if( $btnText.set == 0 &&                                                  \
        $btnData.set == 0 &&                                                  \
        $btnBSS.set  == 0 ) {                                                 \
        argsAccum = argsAccum | \" -noload\";                                 \
    } else if( $btnText.set == 1 &&                                           \
               $btnData.set == 1 &&                                           \
               $btnBSS.set  == 1 ) {                                          \
        argsAccum = argsAccum | \" -loadall\";                                \
    } else {                                                                  \
        if( $btnText.set == 0 ) {                                             \
            argsAccum = argsAccum | \" -notext\";                             \
        }                                                                     \
        if( $btnData.set == 0 ) {                                             \
            argsAccum = argsAccum | \" -nodata\";                             \
        }                                                                     \
        if( $btnBSS.set == 1 ) {                                              \
            argsAccum = argsAccum | \" -bss\";                                \
        }                                                                     \
    }                                                                         \
    if (strlen( $tfOtherOptions ) > 0) {                                      \
        argsAccum = argsAccum | \" \" | $tfOtherOptions;                      \
    }                                                                         \
    if($btnUsb.set == 1) {                                                    \
        argsAccum = argsAccum | \" -usb\";                                    \
        hostName = clitext (\"__gethostname\");                               \
        if (index (hostName, \"windows\") != -1) {                            \
            argsAccum = argsAccum | \" \" | $tfUSBDevice;                     \
        }                                                                     \
    } else if( $btnEthernet.set == 1 ) {                                      \
/* target name goes last */                                                   \
        argsAccum = argsAccum | \" \" | $tfTargetName;                        \
    }                                                                         \
    $TCGUILIB_conargs = argsAccum;                                            \
/*    STRINGLIB_msg = \"saved conargs: \" | $TCGUILIB_conargs; STRINGLIB_show_msg(); */ \
    TCGUILIB_save_runmode_partner();                                          \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionStatus_eval_sane = "                                          \
    TCGUILIB_edit_if_not_sane ();                                             \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionStatus_eval_start = "                                         \
    TCGUILIB_report_messages_from_connect ();                                 \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionStatus_eval_stop = "                                          \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionStatus_onCleanup = "                                          \
    TCGUILIB_statuswin_onCleanup();                                           \
                                                                              \
                                                                              \
                                                                              \
"
MPServConnectionStatus_onSetup = "                                            \
/* set the callbacks and properties the TCGUILIB wants */                     \
    $TCGUILIB_editor_dlg_name       = \"MPServConnectionEditor\";             \
    $TCGUILIB_statuswin_dlg_name    = \"MPServConnectionStatus\";             \
    $TCGUILIB_analyzestop_fn        = \"MPServConnectionStatus_eval_stop\";   \
    $TCGUILIB_analyzestart_fn       = \"MPServConnectionStatus_eval_start\";  \
    $TCGUILIB_statuswin_evalargs_fn = \"MPServConnectionStatus_eval_sane\";   \
    TCGUILIB_statuswin_onSetup();                                             \
    dismiss (0);                                                              \
                                                                              \
                                                                              \
                                                                              \
"
OtherOptions_addArgs = "                                                      \
                                                                              \
    if( strlen( $tfOtherOptions ) > 0 ) {                                     \
        argsAccum = argsAccum | \" \" | $tfOtherOptions;                      \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
OtherOptions_onCleanup = "                                                    \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
OtherOptions_onSetup = "                                                      \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_copy_and_escape_string = "                                          \
                                                                              \
    STRINGLIB_index = 0;                                                      \
    STRINGLIB_length = strlen( STRINGLIB_string );                            \
    STRINGLIB_escaped_string = \"\";                                          \
                                                                              \
    while( STRINGLIB_index < STRINGLIB_length ) {                             \
                                                                              \
/* Get one character at index from string */                                  \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_string, STRINGLIB_index, 1 ); \
                                                                              \
/* If quote marks found, insert escaped quote mark in copied string */        \
/* Otherwise, just copy in character */                                       \
                                                                              \
      if( index( STRINGLIB_single_char, \"\\\"\" ) != -1 ) {                  \
                                                                              \
        STRINGLIB_escaped_string = STRINGLIB_escaped_string | \"\\\\\\\"\";   \
      } else {                                                                \
                                                                              \
        STRINGLIB_escaped_string =                                            \
          STRINGLIB_escaped_string | STRINGLIB_single_char;                   \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_index = STRINGLIB_index + 1;                                  \
    }                                                                         \
                                                                              \
    return STRINGLIB_escaped_string;                                          \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_copy_and_strip_outer_quotes = "                                     \
    STRINGLIB_stripped_string = STRINGLIB_string;                             \
    STRING_len = strlen(STRINGLIB_stripped_string);                           \
    STRING_first = substr(STRINGLIB_stripped_string, 0, 1);                   \
    STRING_last  = substr(STRINGLIB_stripped_string, STRING_len - 1, 1);      \
                                                                              \
    if ( index(STRING_first, \"\\\"\") != -1 ) {                              \
        STRINGLIB_stripped_string =                                           \
            substr(STRINGLIB_stripped_string, 1, STRING_len - 1);             \
        STRING_len = strlen(STRINGLIB_stripped_string);                       \
    }                                                                         \
    if ( index(STRING_last, \"\\\"\") != -1 ) {                               \
        STRINGLIB_stripped_string =                                           \
            substr(STRINGLIB_stripped_string, 0, STRING_len - 1);             \
    }                                                                         \
                                                                              \
    return STRINGLIB_stripped_string;                                         \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_count_tokens = "                                                    \
                                                                              \
    STRINGLIB_temp_string = \" \" | STRINGLIB_string;                         \
    STRINGLIB_string = STRINGLIB_temp_string;                                 \
    STRINGLIB_get_next_token();                                               \
    STRINGLIB_num_tokens = 0;                                                 \
                                                                              \
    while( strlen( STRINGLIB_token ) > 0 ) {                                  \
                                                                              \
      STRINGLIB_num_tokens = STRINGLIB_num_tokens + 1;                        \
      STRINGLIB_get_next_token();                                             \
    }                                                                         \
                                                                              \
    return STRINGLIB_num_tokens;                                              \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_next_token = "                                                  \
                                                                              \
    STRINGLIB_get_next_token_start();                                         \
    STRINGLIB_get_next_token_stop();                                          \
                                                                              \
    STRINGLIB_token_length = STRINGLIB_token_stop - STRINGLIB_token_start;    \
                                                                              \
    if( STRINGLIB_token_length > 0 ) {                                        \
                                                                              \
      STRINGLIB_token = substr( STRINGLIB_string, STRINGLIB_token_start,      \
                                STRINGLIB_token_length );                     \
      STRINGLIB_string_after_token = substr( STRINGLIB_string,                \
                                             STRINGLIB_token_stop + 1,        \
                                             strlen( STRINGLIB_string ) -     \
                                             STRINGLIB_token_stop );          \
      STRINGLIB_string = STRINGLIB_string_after_token;                        \
    } else {                                                                  \
                                                                              \
      STRINGLIB_token = \"\";                                                 \
      STRINGLIB_string_after_token = \"\";                                    \
    }                                                                         \
                                                                              \
    return STRINGLIB_token;                                                   \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_next_token_peek = "                                             \
                                                                              \
    STRINGLIB_get_next_token_start();                                         \
    STRINGLIB_get_next_token_stop();                                          \
                                                                              \
    STRINGLIB_token_length_peek = STRINGLIB_token_stop - STRINGLIB_token_start; \
                                                                              \
    if( STRINGLIB_token_length_peek > 0 ) {                                   \
        STRINGLIB_token_peek = substr( STRINGLIB_string, STRINGLIB_token_start, \
                                STRINGLIB_token_length_peek );                \
    } else {                                                                  \
        STRINGLIB_token_peek = \"\";                                          \
    }                                                                         \
                                                                              \
    return STRINGLIB_token_peek;                                              \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_next_token_start = "                                            \
                                                                              \
    STRINGLIB_quote_open = 0;                                                 \
    STRINGLIB_accepted_char_found = 0;                                        \
    STRINGLIB_length = strlen( STRINGLIB_string );                            \
    STRINGLIB_index  = 0;                                                     \
                                                                              \
    while( STRINGLIB_index < STRINGLIB_length ) {                             \
                                                                              \
/* Get one character at index from string */                                  \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_string, STRINGLIB_index, 1 ); \
                                                                              \
/* Check for quote marks */                                                   \
                                                                              \
      if( index( STRINGLIB_single_char, \"\\\"\" ) != -1 ) {                  \
                                                                              \
          STRINGLIB_quote_open = 1;                                           \
          STRINGLIB_accepted_char_found = 1;                                  \
          break;                                                              \
      }                                                                       \
                                                                              \
/* Check if it is not in the stop char string */                              \
                                                                              \
      if( index( STRINGLIB_stop_chars,                                        \
                 text( STRINGLIB_single_char ) ) == -1 ) {                    \
                                                                              \
        STRINGLIB_accepted_char_found = 1;                                    \
        break;                                                                \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_index = STRINGLIB_index + 1;                                  \
    }                                                                         \
                                                                              \
    if( STRINGLIB_accepted_char_found == 1 ) {                                \
                                                                              \
      STRINGLIB_token_start = STRINGLIB_index;                                \
    } else {                                                                  \
                                                                              \
      STRINGLIB_token_start = -1;                                             \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_next_token_stop = "                                             \
                                                                              \
    STRINGLIB_stop_char_found = 0;                                            \
    STRINGLIB_accepted_char_found = 0;                                        \
    STRINGLIB_length = strlen( STRINGLIB_string );                            \
                                                                              \
    if( STRINGLIB_token_start == -1 ) {                                       \
                                                                              \
      STRINGLIB_token_stop = -1;                                              \
      return;                                                                 \
    }                                                                         \
                                                                              \
    STRINGLIB_index  = STRINGLIB_token_start + 1;                             \
    while( STRINGLIB_index < STRINGLIB_length ) {                             \
                                                                              \
/* Get one character at index from string */                                  \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_string, STRINGLIB_index, 1 ); \
                                                                              \
/* If quote marks found, toggle quote open */                                 \
                                                                              \
      if( index( STRINGLIB_single_char, \"\\\"\" ) != -1 ) {                  \
                                                                              \
        if( STRINGLIB_quote_open == 0 ) {                                     \
                                                                              \
          STRINGLIB_quote_open = 1;                                           \
        } else {                                                              \
                                                                              \
          STRINGLIB_quote_open = 0;                                           \
        }                                                                     \
      }                                                                       \
                                                                              \
/* Check character against stop char string */                                \
                                                                              \
      if( index( STRINGLIB_stop_chars,                                        \
                 text( STRINGLIB_single_char ) ) != -1 ) {                    \
                                                                              \
        STRINGLIB_stop_char_found = 1;                                        \
                                                                              \
        if( STRINGLIB_quote_open == 0 ) {                                     \
                                                                              \
          break;                                                              \
        }                                                                     \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_index = STRINGLIB_index + 1;                                  \
    }                                                                         \
                                                                              \
    STRINGLIB_token_stop = STRINGLIB_index;                                   \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_number = "                                                      \
    STRINGLIB_number = 0;                                                     \
    STRINGLIB_digit_index = 0;                                                \
    STRINGLIB_digit_length = strlen( STRINGLIB_digit_string );                \
                                                                              \
    while( STRINGLIB_digit_index < STRINGLIB_digit_length ) {                 \
                                                                              \
/* Get one character at index from digit string */                            \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_digit_string,                 \
                                      STRINGLIB_digit_index, 1 );             \
                                                                              \
/* This is painful. */                                                        \
                                                                              \
      if( index(STRINGLIB_single_char, \"0\" ) != -1 ) {                      \
        STRINGLIB_temp_number = 0;                                            \
      } else if( index(STRINGLIB_single_char, \"1\" ) != -1 ) {               \
        STRINGLIB_temp_number = 1;                                            \
      } else if( index(STRINGLIB_single_char, \"2\" ) != -1 ) {               \
        STRINGLIB_temp_number = 2;                                            \
      } else if( index(STRINGLIB_single_char, \"3\" ) != -1 ) {               \
        STRINGLIB_temp_number = 3;                                            \
      } else if( index(STRINGLIB_single_char, \"4\" ) != -1 ) {               \
        STRINGLIB_temp_number = 4;                                            \
      } else if( index(STRINGLIB_single_char, \"5\" ) != -1 ) {               \
        STRINGLIB_temp_number = 5;                                            \
      } else if( index(STRINGLIB_single_char, \"6\" ) != -1 ) {               \
        STRINGLIB_temp_number = 6;                                            \
      } else if( index(STRINGLIB_single_char, \"7\" ) != -1 ) {               \
        STRINGLIB_temp_number = 7;                                            \
      } else if( index(STRINGLIB_single_char, \"8\" ) != -1 ) {               \
        STRINGLIB_temp_number = 8;                                            \
      } else if( index(STRINGLIB_single_char, \"9\" ) != -1 ) {               \
        STRINGLIB_temp_number = 9;                                            \
      } else {                                                                \
        return -1;                                                            \
      }                                                                       \
                                                                              \
      STRINGLIB_number = (STRINGLIB_number * 10) + STRINGLIB_temp_number;     \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_digit_index = STRINGLIB_digit_index + 1;                      \
    }                                                                         \
    return STRINGLIB_number;                                                  \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_init = "                                                            \
                                                                              \
    STRINGLIB_string = \"Empty STRINGLIB_string\";                            \
    STRINGLIB_string_after_token = \"Empty STRINGLIB_string_after_token\";    \
    STRINGLIB_escaped_string = \"Empty STRINGLIB_escaped_string\";            \
    STRINGLIB_stripped_string = \"Empty STRINGLIB_stripped_string\";          \
    STRINGLIB_token = \"Empty STRINGLIB_token\";                              \
    STRINGLIB_token_peek = \"Empty STRINGLIB_token_peek\";                    \
    STRINGLIB_single_char = \"Empty STRINGLIB_single_char\";                  \
    STRINGLIB_digit_string = \"Empty STRINGLIB_digit_string\";                \
    STRINGLIB_filename_string = \"Empty STRINGLIB_filename_string\";          \
    STRINGLIB_stop_chars = \" \";                                             \
    STRINGLIB_token_start = 0;                                                \
    STRINGLIB_token_stop = 0;                                                 \
    STRINGLIB_quote_open = 0;                                                 \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_is_digit = "                                                        \
                                                                              \
    STRINGLIB_digit_index = 0;                                                \
    STRINGLIB_digit_length = strlen( STRINGLIB_digit_string );                \
                                                                              \
    while( STRINGLIB_digit_index < STRINGLIB_digit_length ) {                 \
                                                                              \
/* Get one character at index from digit string */                            \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_digit_string,                 \
                                      STRINGLIB_digit_index, 1 );             \
                                                                              \
/* If character is not a digit, return 0 */                                   \
                                                                              \
      if( index( STRINGLIB_single_char, \"x\" ) != -1 ||                      \
          index( STRINGLIB_single_char, \"X\" ) != -1 ) {                     \
                                                                              \
        if( STRINGLIB_digit_index != 1 ) {                                    \
                                                                              \
          return 0;                                                           \
        } else if( substr( STRINGLIB_digit_string, 0, 1 ) != \"0\" ) {        \
                                                                              \
          return 0;                                                           \
        }                                                                     \
      } else if( index( STRINGLIB_single_char, \"0\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"1\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"2\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"3\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"4\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"5\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"6\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"7\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"8\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"9\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"+\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"-\" ) == -1 ) {              \
                                                                              \
        return 0;                                                             \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_digit_index = STRINGLIB_digit_index + 1;                      \
    }                                                                         \
                                                                              \
/* If we got here, all characters in digit_string are digits */               \
                                                                              \
    return 1;                                                                 \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_is_filename = "                                                     \
    STRINGLIB_filename_index = 0;                                             \
    STRINGLIB_filename_length = strlen( STRINGLIB_filename_string );          \
                                                                              \
    while( STRINGLIB_filename_index < STRINGLIB_filename_length ) {           \
                                                                              \
/* Get one character at index from filename string */                         \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_filename_string,              \
                                      STRINGLIB_filename_index, 1 );          \
                                                                              \
/* If character is not a filename, return 0 */                                \
                                                                              \
       if (! ((STRINGLIB_single_char >= \"0\" && STRINGLIB_single_char <= \"9\") || \
              (STRINGLIB_single_char >= \"A\" && STRINGLIB_single_char <= \"Z\") || \
              (STRINGLIB_single_char >= \"a\" && STRINGLIB_single_char <= \"z\") || \
              (STRINGLIB_single_char == \"{\") ||                             \
              (STRINGLIB_single_char == \"}\") ||                             \
              (STRINGLIB_single_char == \"[\") ||                             \
              (STRINGLIB_single_char == \"]\") ||                             \
              (STRINGLIB_single_char == \"(\") ||                             \
              (STRINGLIB_single_char == \")\") ||                             \
              (STRINGLIB_single_char == \"_\") ||                             \
              (STRINGLIB_single_char == \"+\") ||                             \
              (STRINGLIB_single_char == \"-\") ||                             \
              (STRINGLIB_single_char == \".\") ||                             \
              (STRINGLIB_single_char == \",\") ||                             \
              (STRINGLIB_single_char == \"/\") ||                             \
              (STRINGLIB_single_char == \"\\\\\") ||                          \
              (STRINGLIB_single_char == \":\") ||                             \
              (STRINGLIB_single_char == \"'\") ||                             \
              (STRINGLIB_single_char == \" \"))) {                            \
                                                                              \
            return 0;                                                         \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_filename_index = STRINGLIB_filename_index + 1;                \
    }                                                                         \
                                                                              \
/* If we got here, all characters in filename_string are valid */             \
                                                                              \
    return 1;                                                                 \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_show_msg = "                                                        \
                                                                              \
    cli( \"echo \" | STRINGLIB_msg );                                         \
                                                                              \
                                                                              \
                                                                              \
"
SetupScript_handle_btnChooseSetupScript = "                                   \
                                                                              \
    SetupScriptFile =                                                         \
      clitext( \"filedialog \\\"Select\\\" \\\"Use which setup script?\\\" -preset \\\"ScriptFiles\\\"\" ); \
    if( strlen( SetupScriptFile ) > 0 ) {                                     \
/* They didn't cancel, so change the thing */                                 \
        $tfSetupScript = SetupScriptFile;                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
SetupScript_onCleanup = "                                                     \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
SetupScript_onSetup = "                                                       \
    $tfSetupScript = \"\";                                                    \
    if (strlen($TCGUILIB_SetupScript) > 0) {                                  \
        $tfSetupScript = $TCGUILIB_SetupScript;                               \
        $bsSetupScript.set(1) = 1;                                            \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_edit_if_not_sane = "                                                 \
                                                                              \
    if (index ($TCGUILIB_mode, \"goifok\") != -1) {                           \
        theMode = \" \\\"noconnect show_sanity_errors\\\" \";                 \
    } else {                                                                  \
        theMode = \" noconnect \";                                            \
    }                                                                         \
                                                                              \
    if ($TCGUILIB_sane == \"0\") {                                            \
/* we should force the user to edit the thing */                              \
        clitext (\"dialog \" | $TCGUILIB_editor_dlg_name |                    \
                 theMode | $TCGUILIB_CID | \"\");                             \
        TCGUILIB_read_sane ();                                                \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnApply = "                           \
                                                                              \
/* Ignore blank names */                                                      \
    if (strlen($TCGUILIB_tfName) <= 0) {                                      \
        alert (\"You must specify a name for the Connection Method.\");       \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_sane = \"0\";                                               \
                                                                              \
/* Let the client choose whether or not you can save */                       \
        cli (\"callpsfunction \" | $TCGUILIB_editor_evalargs_fn);             \
        if ($TCGUILIB_sane == \"1\") {                                        \
                                                                              \
            TCGUILIB_editor_save_connection ();                               \
            TCGUILIB_editor_read_connection ();                               \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnCancel = "                          \
                                                                              \
    dismiss (0);                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnConnect = "                         \
                                                                              \
                                                                              \
/* Ignore blank names */                                                      \
    if (strlen($TCGUILIB_tfName) <= 0) {                                      \
        alert (\"You must specify a name for the Connection Method.\");       \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_sane = \"0\";                                               \
                                                                              \
/* Let the client choose whether or not you can save */                       \
        cli (\"callpsfunction \" | $TCGUILIB_editor_evalargs_fn);             \
        if ($TCGUILIB_sane == \"1\") {                                        \
                                                                              \
/* only dismiss if the client thinks the arguments are OK */                  \
            TCGUILIB_editor_save_connection () ;                              \
            clitext (\"connection statuswin \" | $TCGUILIB_CID |              \
                     \" 0 \\\"goifok closeifstarted\\\"\") ;                  \
            dismiss (0);                                                      \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnOK = "                              \
                                                                              \
/* Ignore blank names */                                                      \
    if (strlen($TCGUILIB_tfName) <= 0) {                                      \
        alert (\"You must specify a name for the Connection Method.\");       \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_sane = \"0\";                                               \
                                                                              \
/* Let the client choose whether or not you can save */                       \
        cli (\"callpsfunction \" | $TCGUILIB_editor_evalargs_fn);             \
        if ($TCGUILIB_sane == \"1\") {                                        \
                                                                              \
            TCGUILIB_editor_save_connection ();                               \
            dismiss(0);                                                       \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnRevert = "                          \
                                                                              \
    TCGUILIB_editor_read_connection ();                                       \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_handle_TCGUILIB_btnLogging = "                         \
                                                                              \
    $TCGUILIB_tfLogFilename.dim = !($TCGUILIB_btnLogging.set);                \
    $TCGUILIB_btnsLogFileChooser.dim(1) = !($TCGUILIB_btnLogging.set);        \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_handle_choose_logfile = "                              \
                                                                              \
    LogFile =                                                                 \
      clitext( \"filedialog \\\"Select\\\" \\\"Use which log file?\\\"\" );   \
    if( strlen( LogFile ) > 0 ) {                                             \
/* They didn't cancel, so change the thing */                                 \
        $TCGUILIB_tfLogFilename = LogFile;                                    \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_handle_choose_script = "                               \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MAJOR_VERSION)\"); \
    major_ver = STRINGLIB_get_number();                                       \
                                                                              \
    dlgCmd = \"filedialog \\\"Select\\\" \\\"Use which setup script?\\\" -preset \\\"ScriptFiles\\\"\"; \
                                                                              \
    if (major_ver >= 6) {                                                     \
        scriptPath = clitext(\"connection report \" | $TCGUILIB_CID | \" scriptpath \\\"EMPTY\\\"\"); \
        if (strlen(scriptPath) > 5 &&                                         \
            substr(scriptPath, strlen(scriptPath)-5, 5) == \"EMPTY\") {       \
              dlgCmd = dlgCmd | \" -defaultdir \\\"\" |                       \
                substr(scriptPath, 0, strlen(scriptPath)-5) | \"\\\"\";       \
        }                                                                     \
    }                                                                         \
                                                                              \
    SetupScriptFile = clitext( dlgCmd );                                      \
    if( strlen( SetupScriptFile ) > 0 ) {                                     \
/* They didn't cancel, so change the thing */                                 \
        $tfSetupScript = SetupScriptFile;                                     \
                                                                              \
/* [patmac] Mon Mar 26 15:24:20 2007 Fix for J#MULTI-20927 */                 \
/* Automatically adjust the setup script type to the appropriate format */    \
/* based on the setup script file's suffix. */                                \
            if (strlen($tfSetupScript) >= 4 &&                                \
                substr($tfSetupScript, strlen($tfSetupScript)-4, 4) == \".mbs\") { \
            $bsSetupScript.set(1) = 1;                                        \
        } else if (strlen($tfSetupScript) >= 4 &&                             \
                substr($tfSetupScript, strlen($tfSetupScript)-4, 4) == \".dbs\") { \
            $bsSetupScript.set(2) = 1;                                        \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_handle_edit_script = "                                 \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MAJOR_VERSION)\"); \
    major_ver = STRINGLIB_get_number();                                       \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MINOR_VERSION)\"); \
    minor_ver = STRINGLIB_get_number();                                       \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MICRO_VERSION)\"); \
    micro_ver = STRINGLIB_get_number();                                       \
                                                                              \
    useScriptPathCmd = \"0\";                                                 \
                                                                              \
                                                                              \
    if (major_ver == -1 && minor_ver == -1 && micro_ver == -1) {              \
/* Unable to determine any version information.  Fallback to checking if */   \
/* the rominithbp command, added after 5.0.5, exists. */                      \
        STRINGLIB_init();                                                     \
        STRINGLIB_string = clitext(\"rominithbp\");                           \
        if (index (STRINGLIB_string, \"-setup\") != -1) {                     \
/* The command exists. */                                                     \
            useScriptPathCmd = \"1\";                                         \
            major_ver = 5;                                                    \
        } else {                                                              \
/* The command didn't exist.  Look for the __editnewprocess command. */       \
/* It was added for MULTI 5. */                                               \
            STRINGLIB_init();                                                 \
            STRINGLIB_string = clitext(\"__editnewprocess\");                 \
            if (index (STRINGLIB_string, \"filename\") != -1) {               \
/* The command exists. */                                                     \
                 major_ver = 5;                                               \
            }                                                                 \
        }                                                                     \
    } else if (major_ver >= 6 || (major_ver == 5 && (minor_ver > 0 || micro_ver > 5  || (minor_ver == 0 && micro_ver == 0)))) { \
        useScriptPathCmd = \"1\";                                             \
    }                                                                         \
                                                                              \
    if( $tfSetupScript != \"\" && index( $tfSetupScript, \"\\\"\" ) != -1 ) { \
/* Limitation: can't edit setup scripts containing a double-quote */          \
/* character */                                                               \
        alert(\"Cannot edit a setup script file from a path containing a \\\" character.\"); \
        return;                                                               \
    }                                                                         \
                                                                              \
    if (major_ver < 5) {                                                      \
        alert (\"Editing the target setup script from this window is not supported by this version of MULTI.\"); \
        $TCGUILIB_btnsSetupScript.dim(1) = 1;                                 \
    } else if ($tfSetupScript != \"\" && useScriptPathCmd == \"1\") {         \
        scriptFile = clitext (\"connection report \" | $TCGUILIB_CID | \" scriptpath \\\"\" | $tfSetupScript | \"\\\"\"); \
        clitext( \"__editnewprocess \\\"\" | scriptFile | \"\\\"\");          \
    } else if ($tfSetupScript != \"\") {                                      \
        ConFile = clitext (\"connection report \" | $TCGUILIB_CID | \" dir\"); \
           clitext( \"__editnewprocess \\\"\" | $tfSetupScript | \"\\\" \\\"\" | ConFile | \"\\\"\" ); \
    } else {                                                                  \
        clitext( \"__editnewprocess untitled.mbs\" );                         \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_no_script_handle_TCGUILIB_btnLogging = "               \
                                                                              \
    $TCGUILIB_tfLogFilename.dim = !($TCGUILIB_btnLogging.set);                \
    $TCGUILIB_btnsLogFileChooser.dim(1) = !($TCGUILIB_btnLogging.set);        \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_onCleanup = "                                                 \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_onSetup = "                                                   \
                                                                              \
    $TCGUILIB_mode = %1;                                                      \
    $TCGUILIB_CID  = %2;                                                      \
                                                                              \
    if (index ($TCGUILIB_mode, \"allowconnect\") != -1 ||                     \
        index ($TCGUILIB_mode, \"allowConnect\") != -1) {                     \
        $TCGUILIB_btnConnect.dim = 0;                                         \
    } else {                                                                  \
        $TCGUILIB_btnConnect.dim = 1;                                         \
    }                                                                         \
                                                                              \
    if (strlen($TCGUILIB_editor_legacyscripts) <= 0 ||                        \
        ($TCGUILIB_editor_legacyscripts == \"0\")) {                          \
        $bsSetupScript.set(1) = 1;                                            \
        $bsSetupScript.dim(2) = 1;                                            \
    }                                                                         \
                                                                              \
    TCGUILIB_editor_read_connection ();                                       \
                                                                              \
    if (index ($TCGUILIB_mode, \"show_sanity_errors\") != -1 ||               \
        index ($TCGUILIB_mode, \"eval_sanity\") != -1) {                      \
        cli (\"callpsfunction \" | $TCGUILIB_editor_evalargs_fn);             \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_read_connection = "                                           \
                                                                              \
    $TCGUILIB_tfType.dim    = 0;                                              \
    $TCGUILIB_tfCommand.dim = 0;                                              \
    $TCGUILIB_tfCommand = clitext (\"connection report \" |                   \
                                   $TCGUILIB_CID | \" fullcmd\");             \
    $TCGUILIB_tfType    = clitext (\"connection report \" |                   \
                                   $TCGUILIB_CID | \" type\");                \
    $TCGUILIB_tfType.dim    = 1;                                              \
    $TCGUILIB_tfCommand.dim = 1;                                              \
                                                                              \
                                                                              \
    $TCGUILIB_tfName    = clitext (\"connection report \" |                   \
                                   $TCGUILIB_CID | \" name\");                \
    $TCGUILIB_conargs   = clitext (\"connection report \" |                   \
                                   $TCGUILIB_CID | \" args\");                \
    $TCGUILIB_SetupScript = clitext (\"connection report \" |                 \
                                   $TCGUILIB_CID | \" setupscript\");         \
                                                                              \
/* read logging information */                                                \
    logging = clitext (\"connection report \" |                               \
                       $TCGUILIB_CID | \" logging\");                         \
    if (index (logging, \"yes\") != -1) {                                     \
        $TCGUILIB_btnLogging.set = 1;                                         \
        $TCGUILIB_tfLogFilename.dim = 0;                                      \
                                                                              \
        $TCGUILIB_tfLogFilename = clitext (\"connection report \" |           \
                                           $TCGUILIB_CID | \" logfile\");     \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_btnLogging.set    = 0;                                      \
        $TCGUILIB_tfLogFilename.dim = 0;                                      \
        $TCGUILIB_tfLogFilename     = \"\";                                   \
        $TCGUILIB_tfLogFilename.dim = 1;                                      \
    }                                                                         \
                                                                              \
    $TCGUILIB_btnsLogFileChooser.dim(1) = !($TCGUILIB_btnLogging.set);        \
                                                                              \
/* Read setup script information */                                           \
    $tfSetupScript = \"\";                                                    \
    if (strlen($TCGUILIB_SetupScript) > 0) {                                  \
        $tfSetupScript = $TCGUILIB_SetupScript;                               \
        $bsSetupScript.set(1) = 1;                                            \
    }                                                                         \
                                                                              \
/* Call the client dialog's read function so that all of the */               \
/* target-specific widgets will get set correctly from _conargs. */           \
                                                                              \
    cli (\"callpsfunction \" | $TCGUILIB_editor_readargs_fn);                 \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_save_connection = "                                           \
                                                                              \
    clitext (\"connection change \" | $TCGUILIB_CID | \" name \\\"\" |        \
             $TCGUILIB_tfName | \"\\\"\");                                    \
                                                                              \
/* save the logging state */                                                  \
    if ($TCGUILIB_btnLogging.set) {                                           \
        clitext (\"connection change \" | $TCGUILIB_CID | \" log yes \\\"\" | \
                 $TCGUILIB_tfLogFilename | \"\\\"\");                         \
                                                                              \
    } else {                                                                  \
        clitext (\"connection change \" | $TCGUILIB_CID | \" log no \\\"\" |  \
                 $TCGUILIB_tfLogFilename | \"\\\"\");                         \
    }                                                                         \
                                                                              \
/* Call the client dialog's save function so that _conargs will get */        \
/* the argument line that I want to save. */                                  \
                                                                              \
    $TCGUILIB_SetupScript = \"\";                                             \
    cli (\"callpsfunction \" | $TCGUILIB_editor_saveargs_fn);                 \
                                                                              \
    if ($bsSetupScript.set(1) == 1 &&                                         \
        strlen( $tfSetupScript ) > 0) {                                       \
        STRINGLIB_init();                                                     \
        STRINGLIB_string = $tfSetupScript;                                    \
                                                                              \
        if (STRINGLIB_count_tokens () > 0) {                                  \
            $TCGUILIB_SetupScript = $tfSetupScript;                           \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    clitext (\"connection change \" | $TCGUILIB_CID | \" args \\\"\" |        \
             escapify($TCGUILIB_conargs) | \"\\\"\");                         \
                                                                              \
/* save the multi language setup script name */                               \
    if (strlen($TCGUILIB_SetupScript) > 0) {                                  \
        clitext (\"connection change \" | $TCGUILIB_CID | \" setupscript \\\"\" | \
                 escapify($TCGUILIB_SetupScript) | \"\\\"\");                 \
    } else {                                                                  \
        clitext (\"connection change \" | $TCGUILIB_CID | \" setupscript \\\"\\\"\"); \
    }                                                                         \
                                                                              \
                                                                              \
/* MULTI 5 ignores the mode, so clear it. */                                  \
    STRINGLIB_init();                                                         \
    STRINGLIB_string = clitext(\"__debugFlag 2088\");                         \
    if (index (STRINGLIB_string, \"= on\") != -1) {                           \
        clitext (\"connection change \" | $TCGUILIB_CID | \" mode \\\"\\\"\"); \
    }                                                                         \
                                                                              \
    clitext (\"connection change \" | $TCGUILIB_CID | \" sane yes\");         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_eval_sane = "                                                        \
                                                                              \
    $TCGUILIB_conargs = clitext (\"connection report \" |                     \
                                 $TCGUILIB_CID | \" args\");                  \
                                                                              \
/* call the user's evaluation function and see what they said */              \
    cli (\"callpsfunction \" | $TCGUILIB_statuswin_evalargs_fn | \"\");       \
                                                                              \
                                                                              \
    if ($TCGUILIB_sane == \"1\") {                                            \
        clitext (\"connection change \" | $TCGUILIB_CID | \" sane yes\");     \
    } else {                                                                  \
        clitext (\"connection change \" | $TCGUILIB_CID | \" sane no\");      \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_handle_connectionChange = "                                          \
    TCGUILIB_read_sane ();                                                    \
    TCGUILIB_read_started ();                                                 \
                                                                              \
    TCGUILIB_eval_sane ();                                                    \
                                                                              \
    TCGUILIB_read_sane ();                                                    \
    TCGUILIB_read_started ();                                                 \
    TCGUILIB_read_logged ();                                                  \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_logging_dialog_handle_TCGUILIB_btnCancel = "                         \
    dismiss (0);                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_logging_dialog_handle_TCGUILIB_btnOK = "                             \
                                                                              \
    if ($TCGUILIB_btnUseLog.set == 1) {                                       \
        clitext (\"connection targetlogstart \" | $TCGUILIB_TID | \" \\\"\" | \
                 $TCGUILIB_tfLogFilename | \"\\\"\");                         \
    } else {                                                                  \
        clitext (\"connection targetlogstop \" | $TCGUILIB_TID | \" \");      \
    }                                                                         \
                                                                              \
    dismiss (0);                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_logging_dialog_handle_TCGUILIB_btnUseLog = "                         \
                                                                              \
    if ($TCGUILIB_btnUseLog.set == 1) {                                       \
        $TCGUILIB_tfLogFilename.dim = 0;                                      \
    } else {                                                                  \
        $TCGUILIB_tfLogFilename.dim = 1;                                      \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_logging_dialog_onSetup = "                                           \
/* get the target ID from my caller */                                        \
    $TCGUILIB_TID = %1;                                                       \
                                                                              \
                                                                              \
/* configure the widgets based on the current logging state */                \
    logged = clitext (\"connection targetislogged  \" | $TCGUILIB_TID | \"\") ; \
                                                                              \
    if (index (logged, \"yes\") != -1) {                                      \
        $TCGUILIB_tfLogFilename =                                             \
            clitext (\"connection targetlogfile  \" | $TCGUILIB_TID | \"\") ; \
        $TCGUILIB_btnUseLog.set = 1;                                          \
        $TCGUILIB_tfLogFilename.dim = 0;                                      \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_tfLogFilename = \"\";                                       \
        $TCGUILIB_btnUseLog.set = 0;                                          \
        $TCGUILIB_tfLogFilename.dim = 1;                                      \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_read_logged = "                                                      \
    logged = clitext (\"connection targetislogged  \" | $TCGUILIB_TID | \"\") ; \
                                                                              \
    if (index (logged, \"yes\") != -1) {                                      \
        logfile = clitext (\"connection targetlogfile  \" | $TCGUILIB_TID | \"\") ; \
                                                                              \
        if (strlen (logfile) < 1) {                                           \
            $TCGUILIB_tfLogMsg.dim = 0;                                       \
            $TCGUILIB_tfLogMsg = \"Logging to sterr\";                        \
            $TCGUILIB_tfLogMsg.dim = 1;                                       \
                                                                              \
        } else {                                                              \
            $TCGUILIB_tfLogMsg.dim = 0;                                       \
            $TCGUILIB_tfLogMsg = \"Logging to \" | logfile | \"\";            \
            $TCGUILIB_tfLogMsg.dim = 1;                                       \
        }                                                                     \
                                                                              \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_tfLogMsg.dim = 0;                                           \
        $TCGUILIB_tfLogMsg = \"Connection logging is off.\";                  \
        $TCGUILIB_tfLogMsg.dim = 1;                                           \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_read_runmode_partner = "                                             \
/* Read in the run-mode connection partner, if present */                     \
    $tfRunModePartner =                                                       \
        clitext (\"connection report \" | $TCGUILIB_CID | \" partner\");      \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_read_sane = "                                                        \
    sane = clitext (\"connection report \" | $TCGUILIB_CID | \" sane\") ;     \
                                                                              \
    if (index (sane, \"yes\") != -1) {                                        \
        $TCGUILIB_sane = \"1\";                                               \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_sane = \"0\";                                               \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_read_started = "                                                     \
    started = clitext (\"connection targetisstarted \" | $TCGUILIB_TID);      \
                                                                              \
    if (index (started, \"yes\") != -1) {                                     \
        $TCGUILIB_btnStart.dim       = 1;                                     \
        $TCGUILIB_btnEdit.dim        = 1;                                     \
        $TCGUILIB_btnStop.dim        = 0;                                     \
        $TCGUILIB_btnSetLogging.dim  = 0;                                     \
        $TCGUILIB_started            = \"1\";                                 \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_btnStart.dim       = 0;                                     \
        $TCGUILIB_btnEdit.dim        = 0;                                     \
        $TCGUILIB_btnStop.dim        = 1;                                     \
        $TCGUILIB_btnSetLogging.dim  = 1;                                     \
        $TCGUILIB_started      = \"0\";                                       \
        $TCGUILIB_TID          = \"0\";                                       \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_report_messages_from_connect = "                                     \
                                                                              \
    theString = \"\";                                                         \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
        theString = $TCGUILIB_msg_tf;                                         \
    } else {                                                                  \
        theString = $TCGUILIB_msg;                                            \
    }                                                                         \
                                                                              \
    if (rindex (theString, \"SUCCESS\") == -1) {                              \
        if (rindex (theString, \"FAILURE\") != -1) {                          \
                                                                              \
/* only display a message if the connection failed */                         \
            msgEnd = rindex (theString, \"FAILURE\");                         \
            theMsg = substr (theString, 0, msgEnd);                           \
                                                                              \
            alert (theMsg);                                                   \
        }                                                                     \
    } else {                                                                  \
        msgEnd = rindex (theString, \"SUCCESS\");                             \
        theMsg = substr (theString, 0, msgEnd);                               \
                                                                              \
        cli (\"echo \" | theMsg);                                             \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_save_runmode_partner = "                                             \
/* Save the run-mode connection partner, if present */                        \
    clitext (\"connection change \" | $TCGUILIB_CID | \" partner \\\"\" |     \
                 escapify($tfRunModePartner) | \"\\\"\");                     \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_start = "                                                            \
                                                                              \
    if (index ($TCGUILIB_mode, \"useprocess\") != -1) {                       \
/* They want us to connect to a particular process window, */                 \
/* which is already open.  MULTI knows which window to use and */             \
/* how to hook it up. */                                                      \
        if ($TCGUILIB_use_msgtf == \"1\") {                                   \
               $TCGUILIB_msg_tf = clitext (\"connection startonprocess \" |   \
                                          $TCGUILIB_CID | \"\");              \
        } else {                                                              \
               $TCGUILIB_msg = clitext (\"connection startonprocess \" |      \
                                       $TCGUILIB_CID | \"\");                 \
        }                                                                     \
                                                                              \
    } else {                                                                  \
/* Just start the server; don't try to hook it up to a certain */             \
/* process */                                                                 \
        if ($TCGUILIB_use_msgtf == \"1\") {                                   \
            $TCGUILIB_msg_tf = clitext (\"connection start \" | $TCGUILIB_CID | \"\"); \
        } else {                                                              \
            $TCGUILIB_msg = clitext (\"connection start \" | $TCGUILIB_CID | \"\"); \
        }                                                                     \
    }                                                                         \
                                                                              \
/* process the output message and find the TID */                             \
    the_msg = \"\";                                                           \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
            the_msg = $TCGUILIB_msg_tf;                                       \
    } else {                                                                  \
            the_msg = $TCGUILIB_msg;                                          \
    }                                                                         \
    successmsg = rindex (the_msg, \"SUCCESS : \");                            \
    if (successmsg != -1) {                                                   \
/* found a TID */                                                             \
        $TCGUILIB_TID = substr (the_msg, successmsg + 10,                     \
                                strlen (the_msg) - successmsg - 10);          \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_TID = \"0\";                                                \
    }                                                                         \
                                                                              \
    TCGUILIB_read_started ();                                                 \
                                                                              \
/* Give the client an opportunity to look at the start */                     \
    cli (\"callpsfunction \" | $TCGUILIB_analyzestart_fn | \"\");             \
                                                                              \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
        $TCGUILIB_msg_tf = \"\";                                              \
    } else {                                                                  \
        $TCGUILIB_msg = \"\";                                                 \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_status_footer_handle_TCGUILIB_btnEdit = "                            \
    clitext (\"dialog \" | $TCGUILIB_editor_dlg_name |                        \
             \" noconnect \" | $TCGUILIB_CID | \"\");                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_status_footer_handle_TCGUILIB_btnSetLogging = "                      \
    clitext (\"dialog TCGUILIB_logging_dialog \" |                            \
             \" \" | $TCGUILIB_TID | \"\");                                   \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_status_footer_handle_TCGUILIB_btnStart = "                           \
    TCGUILIB_start ();                                                        \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_status_footer_handle_TCGUILIB_btnStop = "                            \
    TCGUILIB_stop ();                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_statuswin_onCleanup = "                                              \
/* unregister this window with the connection manager now */                  \
    clitext (\"connection plcunlisten TCGUILIB_handle_connectionChange\");    \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_statuswin_onSetup = "                                                \
                                                                              \
    $TCGUILIB_mode = %1;                                                      \
    $TCGUILIB_CID  = %2;                                                      \
    $TCGUILIB_TID  = %3;                                                      \
                                                                              \
    TCGUILIB_read_sane ();                                                    \
    TCGUILIB_read_started ();                                                 \
    TCGUILIB_read_logged ();                                                  \
                                                                              \
                                                                              \
    if ($TCGUILIB_sane == \"0\") {                                            \
/* not sane yet, sanify. */                                                   \
        TCGUILIB_eval_sane ();                                                \
    }                                                                         \
                                                                              \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MAJOR_VERSION)\"); \
    major_ver = STRINGLIB_get_number();                                       \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MINOR_VERSION)\"); \
    minor_ver = STRINGLIB_get_number();                                       \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MICRO_VERSION)\"); \
    micro_ver = STRINGLIB_get_number();                                       \
                                                                              \
                                                                              \
    if (major_ver == -1 && minor_ver == -1 && micro_ver == -1) {              \
/* Unable to determine any version information.  Fallback to checking if */   \
/* the rominithbp command, added after 5.0.5, exists. */                      \
        STRINGLIB_init();                                                     \
                                                                              \
        STRINGLIB_string = clitext(\"rominithbp\");                           \
        if (index (STRINGLIB_string, \"-setup\") != -1) {                     \
/* The command exists. */                                                     \
            $TCGUILIB_use_msgtf = \"0\";                                      \
        } else {                                                              \
            $TCGUILIB_use_msgtf = \"1\";                                      \
        }                                                                     \
    } else if (major_ver >= 6 || (major_ver == 5 && (minor_ver > 0 || micro_ver > 5  || (minor_ver == 0 && micro_ver == 0)))) { \
        $TCGUILIB_use_msgtf = \"0\";                                          \
    } else {                                                                  \
        $TCGUILIB_use_msgtf = \"1\";                                          \
    }                                                                         \
                                                                              \
/* register this window with the connection manager, so that it */            \
/* will get updated when the connection changes */                            \
    clitext (\"connection plclisten TCGUILIB_handle_connectionChange\");      \
                                                                              \
                                                                              \
/* We may need to do various things if the connection is or is not started */ \
    if ($TCGUILIB_started == \"0\") {                                         \
/* not started yet.  Start as desired.  */                                    \
                                                                              \
        if (index ($TCGUILIB_mode, \"forcego\") != -1) {                      \
            TCGUILIB_start ();                                                \
                                                                              \
        } else if (index ($TCGUILIB_mode, \"goifok\") != -1) {                \
            if ($TCGUILIB_sane == \"1\") {                                    \
                TCGUILIB_start ();                                            \
            }                                                                 \
        }                                                                     \
                                                                              \
    } else {                                                                  \
/* started.  Are we being asked to stop it? */                                \
        if (index ($TCGUILIB_mode, \"trystop\") != -1) {                      \
            TCGUILIB_stop ();                                                 \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    if (index ($TCGUILIB_mode, \"forceclose\") != -1) {                       \
/* We must always close the window */                                         \
        dismiss (0);                                                          \
    }                                                                         \
                                                                              \
                                                                              \
    if (index ($TCGUILIB_mode, \"closeifok\") != -1) {                        \
/* we should close the window if the connection is sane */                    \
        if ($TCGUILIB_sane == \"1\") {                                        \
            dismiss (0);                                                      \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    if (index ($TCGUILIB_mode, \"closeifstarted\") != -1) {                   \
/* we should close the window if the connection is started */                 \
        if ($TCGUILIB_started == \"1\") {                                     \
            dismiss (0);                                                      \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    if (index ($TCGUILIB_mode, \"closeifstopped\") != -1) {                   \
/* we should close the window if the connection is stopped */                 \
        if ($TCGUILIB_started == \"0\") {                                     \
            dismiss (0);                                                      \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_stop = "                                                             \
                                                                              \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
        $TCGUILIB_msg_tf = clitext (\"connection targetstop \" | $TCGUILIB_TID | \"\"); \
    } else {                                                                  \
        $TCGUILIB_msg = clitext (\"connection targetstop \" | $TCGUILIB_TID | \"\"); \
    }                                                                         \
                                                                              \
    TCGUILIB_read_started ();                                                 \
                                                                              \
/* Give the client an opportunity to look at the start */                     \
    cli (\"callpsfunction \" | $TCGUILIB_analyzestop_fn | \"\");              \
                                                                              \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
        $TCGUILIB_msg_tf = \"\";                                              \
    } else {                                                                  \
        $TCGUILIB_msg = \"\";                                                 \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
Items=LoadSections
 Dialogue(,,,98,60,NULL,"LoadSections","LoadSections_onSetup() ;","LoadSections_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =LoadSections > -1
 Text(0,0,0,NULL,"Load Sections:",PNone)0xffffffff =txtLoadSections >-1
 Button(0,0,0,44,15,NULL,NULL,NULL,"Text",2,0,0,0,"LoadSections_handle_btnText() ;")0xffffffff =btnText >-1
 Button(0,0,0,44,15,NULL,NULL,NULL,"Data",2,0,0,0,"LoadSections_handle_btnData() ;")0xffffffff =btnData >-1
 Button(0,0,0,38,15,NULL,NULL,NULL,"BSS",2,0,0,0,"LoadSections_handle_btnBSS() ;")0xffffffff =btnBSS >-1
MinSizes
Sizes
 0,(1,2,3,4),(),2,0,0,0,0,1,1,Vertical
 0,(1),(),0,0,0,0,0,1,1,((2),(),0,0,0,0,0,1,1,((3),(),0,0,0,0,0,1,1,((4),(),0,0,0,0,0,1,1,)))Horizontal
Positions
 (4),3,0,0,0,0,0,Top,Top,Bottom
 (4),3,0,0,0,0,0,Left,Left,Left
 (3),2,0,0,0,0,0,Top,Top,Bottom
 (3),2,0,0,0,0,0,Left,Left,Left
 (2),1,2,0,0,0,0,Top,Top,Bottom
 (2),1,0,0,0,0,0,Left,Left,Left
 (1),0,0,0,0,0,0,Top,Top,Top
 (1),0,0,0,0,0,0,Left,Left,Left

Items=MPServConnectionEditor
 Dialogue(,,,430,364,"$MULTI.mpserv_connection_editor","MPServConnectionEditor","MPServConnectionEditor_onSetup() ;","MPServConnectionEditor_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =MPServConnectionEditor > -1
 Rectangle(0,0,0,1,54,"use TCGUILIB_editor_header;",2,NULL,PNone)0x400 =rctTCGUILIBHeader >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz1 >-1
 Text(0,0,0,NULL,"Name:",PNone)0xffffffff =TCGUILIB_txtName >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfName >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz2 >-1
 Text(0,0,0,NULL,"Type:",PNone)0xffffffff =TCGUILIB_txtType >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfType >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz3 >-1
 Button(0,0,0,124,15,NULL,NULL,NULL,"Log Connection to file:",2,0,0,0,"TCGUILIB_editor_header_handle_TCGUILIB_btnLogging() ;")0xffffffff =TCGUILIB_btnLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfLogFilename >-1
 ButtonSet(0,0,0,23,22,NULL,NULL,NULL,    (1,"Choose..."),    (1,"TCGUILIB_editor_header_handle_choose_logfile()"),    -1,1,1,0,0,61,0,    (1,NULL),    (1,"open"),    (1,NULL),    (1,NULL),0,0)0xffffffff =TCGUILIB_btnsLogFileChooser >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,-8,1052,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatuswinDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,1072,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSaveArgsFunc:",NULL)0x400 =TCGUILIB_editor_saveargs_fn >-1
 TextField(0,-8,1092,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenReadArgsFunc:",NULL)0x400 =TCGUILIB_editor_readargs_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenConChangedFunc:",NULL)0x400 =TCGUILIB_statuswin_changed_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,-8,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgsSane:",NULL)0x400 =TCGUILIB_sane >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEvalArgsFunc:",NULL)0x400 =TCGUILIB_editor_evalargs_fn >-1
 TextField(0,-8,795,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenLegacyScripts:",NULL)0x400 =TCGUILIB_editor_legacyscripts >-1
 Text(0,0,0,NULL,"Target setup script:",PNone)0xffffffff =TCGUILIB_txtSetupScript >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =tfSetupScript >-1
 ButtonSet(0,0,0,46,22,NULL,NULL,NULL,    (2,"Edit","Choose..."),    (2,"TCGUILIB_editor_header_handle_edit_script()","TCGUILIB_editor_header_handle_choose_script()"),    -1,1,2,0,0,61,0,    (2,NULL,NULL),    (2,"editconnection","open"),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =TCGUILIB_btnsSetupScript >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz4 >-1
 ButtonSet(0,0,0,132,15,NULL,NULL,NULL,    (2,"MULTI","Legacy"),    (2,NULL,NULL),    -1,2,2,0,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =bsSetupScript >-1
 TextField(0,0,815,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSetupScript:",NULL)0x400 =TCGUILIB_SetupScript >-1
 Text(0,0,0,NULL,"TCGUILIB Header Rct",PNone)0x400 =txtTCGUILIBHeaderRct >-1
 TabControl(0,0,0,1,1,NULL,NULL,NULL,NULL,NULL,(5,"Connection","Probe Config","INTEGRITY","Advanced","Debug"),0,0,())0xffffffff =tcTabs >-1
 Rectangle(31.0,0,0,1,1,NULL,2,NULL,PNone)0xffffffff =rctEthernet >-1
 Button(31.0,0,0,154,15,NULL,NULL,NULL,"Ethernet / IP Connection",1,0,0,1,"MPServConnectionEditor_handle_btnEthernet() ;")0xffffffff =btnEthernet >-1
 Button(31.0,0,0,108,15,NULL,NULL,NULL,"USB Connection",1,0,0,1,"MPServConnectionEditor_handle_btnUsb() ;")0x6 =btnUsb >-1
 Text(31.0,0,0,NULL,"Probe Name or IP Address:",PNone)0xffffffff =txtTargetName >-1
 TextField(31.0,0,0,1,19,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =tfTargetName >-1
 Rectangle(31.0,0,0,1,1,NULL,2,NULL,PNone)0x6 =rctUsb >-1
 Rectangle(31.4,0,0,1,31,"use OtherOptions;",2,NULL,PNone)0x400 =rctOtherOptions >-1
 Line(31.4,0,0,0,21,NULL,PNone)0x400 =lnVMax >-1
 Text(31.4,0,2,NULL,"Other Options:",PNone)0xffffffff =txtOtherOptions >-1
 TextField(31.4,87,0,289,21,NULL,NULL,NULL,256,1,"",NULL)0xffffffff =tfOtherOptions >-1
 Text(31.4,0,0,NULL,"Other Options Rct",PNone)0x400 =txtOtherOptionsRct >-1
 Rectangle(0,0,0,1,60,"use TCGUILIB_editor_footer;",2,NULL,PNone)0x400 =rctTCGUILIBFooter >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line3 >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfCommand >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line2 >-1
 Button(0,0,0,56,19,NULL,NULL,NULL,"Connect",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnConnect() ;")0xffffffff =TCGUILIB_btnConnect >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"OK",0,1,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnOK() ;")0xffffffff =TCGUILIB_btnOK >-1
 Button(0,0,0,48,19,NULL,NULL,NULL,"Cancel",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnCancel() ;")0xffffffff =TCGUILIB_btnCancel >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Revert",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnRevert() ;")0xffffffff =TCGUILIB_btnRevert >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Apply",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnApply() ;")0xffffffff =TCGUILIB_btnApply >-1
 Text(0,0,0,NULL,"TCGUILIB Footer Rct",PNone)0x400 =txtTCGUILIBFooterRct >-1
 Line(31.0,-237,0,1,1,NULL,PNone)0x400 =lnVMax >-1
 Line(31.0,0,-581,1,1,NULL,PNone)0x400 =lnHMax >-1
 Button(31.3,0,0,104,15,NULL,NULL,NULL,"Force core ID#:",2,0,0,0,"MPServConnectionEditor_handle_btnForceCore() ;")0xffffffff =btnForceCore >-1
 TextField(31.3,0,0,1,19,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =tfForceCore >-1
 Rectangle(0,-108,-108,70,36,"use TCGUILIB_minsize_ref;",1,NULL,PNone)0x400 =rctMinsizeRef >-1
 Text(0,10,13,NULL,"Connect for:",PNone)0x400 =TCGUILIB_minsize_txtConnectFor >-1
 Button(0,10,68,246,15,NULL,NULL,NULL,"Board Setup (Debug board initialization sequence)",1,0,0,0,"")0x400 =TCGUILIB_minsize_btnLogging >-1
 Button(31.3,0,0,132,15,NULL,NULL,NULL,"Service system calls",2,0,0,0,"")0xffffffff =btnSysCalls >-1
 Rectangle(31.3,0,0,200,39,"use LoadSections;",1,NULL,PNone)0x400 =rctLoadSections >-1
 Text(31.3,0,0,NULL,"Load Sections:",PNone)0xffffffff =txtLoadSections >-1
 Button(31.3,0,0,44,15,NULL,NULL,NULL,"Text",2,0,0,0,"LoadSections_handle_btnText() ;")0xffffffff =btnText >-1
 Button(31.3,0,0,44,15,NULL,NULL,NULL,"Data",2,0,0,0,"LoadSections_handle_btnData() ;")0xffffffff =btnData >-1
 Button(31.3,0,0,38,15,NULL,NULL,NULL,"BSS",2,0,0,0,"LoadSections_handle_btnBSS() ;")0xffffffff =btnBSS >-1
 Text(31.3,0,0,NULL,"Load Sections Rct",PNone)0x400 =txtLoadSectionsRct >-1
 TextField(31.0,0,0,1,19,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =tfUSBDevice >-1
 Rectangle(31.2,0,0,1,47,"use TCGUILIB_runmode_partner;",2,NULL,PNone)0x400 =rctRunModePartner >-1
 Line(31.2,0,1,0,1,NULL,PNone)0x400 =lnVMax >-1
 Text(31.2,0,0,NULL,"Run-Mode Partner Connection:",PNone)0xffffffff =txtRunModePartner >-1
 TextField(31.2,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =tfRunModePartner >-1
 Text(31.2,0,0,NULL,"Run-Mode Partner Rct",PNone)0x400 =txtRunModePartner >-1
 Text(31.0,0,0,NULL,"Probe Serial Number or USB Index",PNone)0xffffffff =txtUSBName >-1
 Rectangle(31.1,0,0,1,1,NULL,2,NULL,PNone)0xffffffff =rctProbeCfg >-1
 TextField(31.1,0,0,1,19,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =tfProbeCfg >-1
 Text(31.1,0,0,NULL,"Probe Configuration File",PNone)0xffffffff =txtProbeCfg >-1
 ButtonSet(31.1,0,0,46,22,NULL,NULL,NULL,    (2,"Edit","Choose..."),    (2,"MPServConnectionEditor_handle_edit_probe_config()","MPServConnectionEditor_handle_choose_probe_config()"),    -1,2,2,0,0,61,0,    (2,NULL,NULL),    (2,"editconnection","open"),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =btnsProbeCfg >-1
 Button(31.3,0,0,160,15,NULL,NULL,NULL,"Halt cores synchronously",2,0,0,0,"")0xffffffff =btnSyncCores >-1
MinSizes
 0,(57),(),0,0,0,0,0,1,1,Horizontal
 0,(43,1,53),(),0,0,0,0,0,1,1,Vertical
Sizes
 74,(76,75),(),30,0,0,0,0,1,1,Vertical
 75,(74),(77),-25,0,0,0,0,1,1,Horizontal
 74,(31),(),-20,0,0,0,0,1,1,Horizontal
 68,(31),(),-20,0,0,0,0,1,1,Horizontal
 72,(31),(),0,0,0,0,0,1,1,Horizontal
 67,(37),(),-20,0,0,0,0,1,1,Horizontal
 56,(31),(55),-6,0,0,0,0,1,1,Horizontal
 54,(),(),0,0,0,0,0,1,1,Vertical
 53,(),(),0,0,0,0,0,1,1,Horizontal
 53,(32,37),(),46,0,0,2,0,1,1,((38),(),35,0,0,2,0,1,1,((61,56),(),40,0,0,2,0,1,1,))Vertical
 0,(54),(),40,0,0,0,0,1,1,Horizontal
 54,(33),(),20,0,0,0,0,1,1,((35),(),20,0,0,0,0,1,1,((),(),40,50,0,0,0,1,1,((),(),20,0,20,0,0,1,1,((34),(),20,0,0,0,0,1,1,((61),(),30,0,0,0,0,1,1,)))))Horizontal
 43,(0),(),0,0,0,0,0,1,1,Horizontal
 37,(73,34,67),(),40,0,0,0,0,1,1,Vertical
 37,(32),(),0,0,0,0,0,1,1,Horizontal
 38,(31),(),-20,0,0,0,0,1,1,Horizontal
 36,(32),(),-20,0,0,0,0,1,1,Horizontal
 32,(31),(),-20,0,0,0,0,1,1,Horizontal
 32,(33,35,36),(),40,0,0,0,0,1,1,Vertical
 31,(0),(1,43),0,0,0,0,0,1,1,Vertical
 0,(43,1,53),(),0,0,0,0,0,1,1,Vertical
 31,(0),(),-20,0,0,0,0,1,1,Horizontal
 1,(0),(),0,0,0,0,0,1,0,Horizontal
 25,(10),(11),0,0,0,0,0,1,1,Horizontal
 27,(24),(),0,0,0,0,0,1,1,((25),(),0,0,0,0,0,1,1,((),(),0,0,0,0,0,1,1,))Vertical
 8,(9),(),0,0,0,0,0,1,1,((10),(),0,0,0,0,0,1,1,)Vertical
 5,(6),(),0,0,0,0,0,1,1,((7),(),0,0,0,0,0,1,1,)Vertical
 2,(3),(),0,0,0,0,0,1,1,((4),(),0,0,0,0,0,1,1,)Vertical
 10,(1),(9,11),-20,1,0,0,0,1,1,Horizontal
 1,(8,5,2,28),(),89,0,0,0,0,1,1,Vertical
 12,(1),(),-20,0,0,0,0,1,1,Horizontal
 7,(4),(),0,0,0,0,0,1,1,Horizontal
 4,(1),(3),-10,0,0,0,0,1,1,Horizontal
 38,(39),(),0,0,0,0,0,1,1,Vertical
 39,(40),(),0,0,0,0,0,1,1,((41),(),0,0,0,0,0,1,1,)Vertical
 41,(38),(40),10,0,0,0,0,1,1,Horizontal
 43,(45,48),(),50,0,0,0,0,1,1,Vertical
 50,(49),(),0,0,0,0,0,1,1,Horizontal
 51,(49),(),0,0,0,0,0,1,1,Horizontal
 45,(43),(),4,0,0,0,0,1,1,Horizontal
 44,(43),(),-20,0,0,0,0,1,1,Horizontal
 46,(43),(),-20,0,0,0,0,1,1,Horizontal
 48,(49),(),0,0,0,0,0,1,1,Horizontal
 57,(59,58),(),30,0,0,0,0,1,1,Horizontal
 61,(62,63,64,65),(),2,0,0,0,0,1,1,Vertical
 61,(62),(),0,0,0,0,0,1,1,((63),(),0,0,0,0,0,1,1,((64),(),0,0,0,0,0,1,1,((65),(),0,0,0,0,0,1,1,)))Horizontal
 68,(69),(),0,0,0,0,0,1,1,Vertical
 71,(68),(),10,0,0,0,0,1,1,Horizontal
 69,(70,71),(),5,0,0,0,0,1,1,Vertical
Positions
 (77),75,0,0,0,0,0,Top,Top,Top
 (77),74,-10,0,0,0,0,Right,Right,Right
 (75),76,8,0,0,0,0,Top,Top,Bottom
 (76),74,10,0,0,0,0,Top,Top,Top
 (75),76,10,0,0,0,0,Left,Left,Left
 (76),74,10,0,0,0,0,Left,Left,Left
 (74),31,40,0,0,0,0,Top,Top,Top
 (74),31,10,0,0,0,0,Left,Left,Left
 (78),60,20,0,0,0,0,Top,Top,Bottom
 (73),34,10,0,0,0,0,Top,Top,Bottom
 (73),34,0,0,0,0,0,Left,Left,Left
 (72),68,0,0,0,0,0,Left,LRCenter,LRCenter
 (72),68,0,0,0,0,0,Top,TBCenter,TBCenter
 (68),31,20,0,0,1,0,Top,Top,Top
 (68),31,10,0,0,0,0,Left,Left,Left
 (60),55,0,0,0,0,0,Left,Left,Left
 (61),56,10,0,0,0,0,Top,Top,Bottom
 (60),55,20,0,0,0,0,Top,Top,Bottom
 (67),73,10,0,0,0,0,Left,Left,Left
 (67),73,8,0,0,0,0,Top,Top,Bottom
 (61),56,-20,0,0,0,0,Left,Right,Right
 (66),61,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (66),61,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (56),31,10,0,0,2,0,Top,Top,Top
 (78,55),31,10,0,0,0,0,Left,Left,Left
 (56),31,2,0,0,0,0,Right,Right,Right
 (55),56,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (35),33,10,0,0,0,0,Top,Top,Bottom
 (54),31,10,0,0,0,0,Left,Left,Left
 (53),31,40,0,0,0,0,Top,Top,Top
 (42),38,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (42),38,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (38),31,15,0,0,2,0,Top,Top,Top
 (38),31,10,0,0,0,0,Left,Left,Left
 (52),43,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (52),43,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (43),0,0,0,0,0,0,Bottom,Bottom,Bottom
 (43),0,0,0,0,0,0,Left,Left,Left
 (34),37,10,0,0,0,0,Top,Top,Top
 (34),37,10,0,0,0,0,Left,Left,Left
 (37),32,10,0,0,0,0,Top,Top,Bottom
 (37),32,0,0,0,0,0,Left,Left,Left
 (36),35,8,0,0,0,0,Top,Top,Bottom
 (36),35,10,0,0,0,0,Left,Left,Left
 (35),33,0,0,0,0,0,Left,Left,Left
 (33),32,10,0,0,0,0,Top,Top,Top
 (33),32,10,0,0,0,0,Left,Left,Left
 (32),31,40,0,0,0,0,Top,Top,Top
 (32),31,10,0,0,0,0,Left,Left,Left
 (1),0,0,0,0,0,0,Top,Top,Top
 (31),1,0,0,0,0,0,Top,Top,Bottom
 (31),0,10,0,0,0,0,Left,Left,Left
 (30),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (30),1,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (1),0,0,0,0,0,0,Left,Left,Left
 (12),28,10,0,0,0,0,Top,Top,Bottom
 (26),25,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (11),1,-7,0,0,0,0,Right,Right,Right
 (11),10,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (28),25,8,0,0,0,0,Left,Left,Left
 (28),27,5,0,0,0,0,TBCenter,Top,Bottom
 (26),1,-7,0,0,0,0,Right,Right,Right
 (25),10,0,0,0,0,0,Left,Left,Left
 (24),1,10,0,0,0,0,Left,Left,Left
 (24,25,27),8,9,0,0,0,0,TBCenter,Top,Bottom
 (10),9,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (8),5,10,0,0,0,0,Top,Top,Bottom
 (5),2,10,0,0,0,0,Top,Top,Bottom
 (2),1,10,0,0,0,0,Top,Top,Top
 (10),9,0,0,0,0,0,Left,Left,Right
 (9),1,10,0,0,0,0,Left,Left,Left
 (9),8,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (12),1,10,0,0,0,0,Left,Left,Left
 (6),5,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (6),1,10,0,0,0,0,Left,Left,Left
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),1,10,0,0,0,0,Left,Left,Left
 (7),6,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (7),4,0,0,0,0,0,Left,Left,Left
 (4),3,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (4),1,2,0,0,0,0,Right,Right,Right
 (41),40,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (41),40,0,0,0,0,0,Left,Left,Right
 (40),39,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (40),38,0,0,0,0,0,Left,Left,Left
 (39),38,0,0,0,0,0,Top,Top,Top
 (39),38,0,0,0,0,0,Left,Left,Left
 (50),51,0,0,0,0,0,Top,Top,Top
 (50),51,-5,0,0,0,0,Right,Right,Left
 (49),50,0,0,0,0,0,Top,Top,Top
 (51),43,-10,0,0,0,0,Bottom,Bottom,Bottom
 (51),43,-10,0,0,0,0,Right,Right,Right
 (44),45,-10,0,0,0,0,Top,Top,Top
 (44),43,10,0,0,0,0,Left,Left,Left
 (45),46,-10,0,0,0,0,Bottom,Bottom,Bottom
 (45),43,2,0,0,0,0,Right,Right,Right
 (46),43,10,0,0,0,0,Left,Left,Left
 (46),47,-10,0,0,0,0,Top,Top,Top
 (47),43,-10,0,0,0,0,Bottom,Bottom,Bottom
 (47),43,10,0,0,0,0,Left,Left,Left
 (48),49,0,0,0,0,0,Top,Top,Top
 (48),49,-5,0,0,0,0,Right,Right,Left
 (49),50,-11,0,0,0,0,Right,Right,Left
 (65),64,0,0,0,0,0,Top,Top,Bottom
 (65),64,0,0,0,0,0,Left,Left,Left
 (64),63,0,0,0,0,0,Top,Top,Bottom
 (64),63,0,0,0,0,0,Left,Left,Left
 (63),62,2,0,0,0,0,Top,Top,Bottom
 (63),62,0,0,0,0,0,Left,Left,Left
 (62),61,0,0,0,0,0,Top,Top,Top
 (62),61,0,0,0,0,0,Left,Left,Left
 (71),70,5,0,0,0,0,Top,Top,Bottom
 (69),68,0,0,0,0,0,Left,Left,Left
 (71),70,-9,0,0,0,0,Left,Left,Left
 (70),68,0,0,0,0,0,Top,Top,Top
 (70),68,0,0,0,0,0,Left,Left,Left

Items=MPServConnectionStatus
 ColWind(,,,337,344,NULL,"MPServConnectionStatus","MPServConnectionStatus_onSetup() ;","MPServConnectionStatus_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =MPServConnectionStatus > -1
 Text(0,0,0,NULL,"Connection Status:",PNone)0xffffffff =txtConnectionStatus >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =hline1 >-1
 Edit(0,0,0,1,204,NULL,NULL,NULL,1,0,0)0xffffffff =Editor >-1
 Rectangle(0,0,0,1,65,"use TCGUILIB_status_footer;",2,NULL,PNone)0x400 =rctTCGUILIBStatusFooter >-1
 Line(0,10,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 Button(0,0,0,64,19,NULL,NULL,NULL,"Logging...",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnSetLogging() ;")0xffffffff =TCGUILIB_btnSetLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfLogMsg >-1
 Button(0,0,0,44,19,NULL,NULL,NULL,"Edit...",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnEdit() ;")0xffffffff =TCGUILIB_btnEdit >-1
 Button(0,0,0,46,19,NULL,NULL,NULL," Start ",0,1,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnStart() ;")0xffffffff =TCGUILIB_btnStart >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Stop",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnStop() ;")0xffffffff =TCGUILIB_btnStop >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,0,835,1,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatusDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,855,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckStartFunc:",NULL)0x400 =TCGUILIB_analyzestart_fn >-1
 TextField(0,-8,875,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckStopFunc:",NULL)0x400 =TCGUILIB_analyzestop_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckArgsFunc:",NULL)0x400 =TCGUILIB_statuswin_evalargs_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,0,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenIsStarted:",NULL)0x400 =TCGUILIB_started >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSanity:",NULL)0x400 =TCGUILIB_sane >-1
 Text(0,0,0,NULL,"StopOrStartFailureMsg:",PNone)0x400 =TCGUILIB_msg >-1
 TextField(0,0,795,300,17,NULL,NULL,NULL,0xc1acc10,0,"StopOrStartFailureMsg:",NULL)0x400 =TCGUILIB_msg_tf >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenTargetID:",NULL)0x400 =TCGUILIB_TID >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenUseMsgTextField:",NULL)0x400 =TCGUILIB_use_msgtf >-1
 Text(0,0,0,NULL,"TCGUILIB Status Footer Rct",PNone)0x400 =txtTCGUILIBStatusFooterRct >-1
MinSizes
Sizes
 4,(0),(),0,0,0,0,0,1,1,Horizontal
 3,(0),(),-20,0,0,0,0,1,1,Horizontal
 2,(0),(),-20,0,0,0,0,1,1,Horizontal
 1,(),(),0,0,0,0,0,1,1,Horizontal
 7,(4),(10,9,8,6),-36,0,0,0,0,1,1,Horizontal
 5,(4),(),-20,0,0,0,0,1,1,Horizontal
 4,(9),(),30,0,0,0,0,1,1,Vertical
 14,(4),(),-20,0,0,0,0,1,1,Horizontal
 10,(9),(),0,0,0,0,0,1,1,Horizontal
Positions
 (25),4,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (25),4,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (4),0,0,0,0,0,0,Bottom,Bottom,Bottom
 (4),0,0,0,0,0,0,Left,Left,Left
 (3),2,10,0,0,0,0,Top,Top,Bottom
 (3),0,10,0,0,0,0,Left,Left,Left
 (2),1,10,0,0,0,0,Top,Top,Bottom
 (2),0,10,0,0,0,0,Left,Left,Left
 (1),0,10,0,0,0,0,Top,Top,Top
 (1),0,10,0,0,0,0,Left,Left,Left
 (7),6,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (7),6,-2,0,0,0,0,Left,Left,Right
 (6),4,-10,0,0,0,0,Bottom,Bottom,Bottom
 (6),4,10,0,0,0,0,Left,Left,Left
 (5),4,10,0,0,0,0,Top,Top,Top
 (8),9,0,0,0,0,0,Top,Top,Top
 (8),9,-5,0,0,0,0,Right,Right,Left
 (9),10,0,0,0,0,0,Top,Top,Top
 (10),4,-10,0,0,0,0,Bottom,Bottom,Bottom
 (9),10,-2,0,0,0,0,Right,Right,Left
 (10),4,-10,0,0,0,0,Right,Right,Right

Items=OtherOptions
 Dialogue(,,,366,30,NULL,"OtherOptions","OtherOptions_onSetup() ;","OtherOptions_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =OtherOptions > -1
 Line(0,0,0,0,21,NULL,PNone)0x400 =lnVMax >-1
 Text(0,0,2,NULL,"Other Options:",PNone)0xffffffff =txtOtherOptions >-1
 TextField(0,87,0,289,21,NULL,NULL,NULL,256,1,"",NULL)0xffffffff =tfOtherOptions >-1
MinSizes
Sizes
 0,(1),(),0,0,0,0,0,1,1,Vertical
 1,(2),(),0,0,0,0,0,1,1,((3),(),0,0,0,0,0,1,1,)Vertical
 3,(0),(2),10,0,0,0,0,1,1,Horizontal
Positions
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),2,0,0,0,0,0,Left,Left,Right
 (2),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,0,0,0,0,0,Left,Left,Left
 (1),0,0,0,0,0,0,Top,Top,Top
 (1),0,0,0,0,0,0,Left,Left,Left

Items=SetupScript
 Dialogue(,,,352,41,NULL,"SetupScript","SetupScript_onSetup() ;","SetupScript_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =SetupScript > -1
 Line(0,0,0,0,1,NULL,PNone)0x400 =lnVMax >-1
 Text(0,0,0,NULL,"Target setup script:",PNone)0xffffffff =txtSetupScript >-1
 TextField(0,0,0,1,18,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =tfSetupScript >-1
 Button(0,0,0,80,20,NULL,NULL,NULL,"Choose...",0,0,0,0,"SetupScript_handle_btnChooseSetupScript() ;")0xffffffff =btnChooseSetupScript >-1
 Text(0,0,0,NULL,"Script type:",PNone)0xffffffff =txtSetupScriptType >-1
 ButtonSet(0,0,0,140,15,NULL,NULL,NULL,    (2,"MULTI","Legacy"),    (2,NULL,NULL),    -1,2,2,0,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =bsSetupScript >-1
 Line(0,0,0,0,1,NULL,PNone)0xffffffff =lnVMax1 >-1
MinSizes
Sizes
 7,(5),(),0,0,0,0,0,1,1,((6),(),0,0,0,0,0,1,1,)Vertical
 0,(6,1),(),6,0,0,0,0,1,1,Vertical
 1,(2),(),0,0,0,0,0,1,1,((3),(),0,0,0,0,0,1,1,((4),(),0,0,0,0,0,1,1,))Vertical
 3,(0),(4,2),0,0,0,0,0,1,1,Horizontal
Positions
 (5),0,0,0,0,0,0,Left,Left,Left
 (7),0,-2000,0,0,0,0,Left,Left,Left
 (7,6,5),1,5,0,0,0,0,TBCenter,Top,Bottom
 (6),5,8,0,0,0,0,Left,Left,Right
 (1),0,0,0,0,0,0,Top,Top,Top
 (1),0,-2000,0,0,0,0,Left,Left,Left
 (4),3,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (4),3,0,0,0,0,0,Left,Left,Right
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),2,0,0,0,0,0,Left,Left,Right
 (2),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,0,0,0,0,0,Left,Left,Left

Items=TCGUILIB_editor_footer
 Dialogue(,,,481,86,NULL,"TCGUILIB_editor_footer","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_editor_footer > -1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line3 >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfCommand >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line2 >-1
 Button(0,0,0,56,19,NULL,NULL,NULL,"Connect",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnConnect() ;")0xffffffff =TCGUILIB_btnConnect >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"OK",0,1,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnOK() ;")0xffffffff =TCGUILIB_btnOK >-1
 Button(0,0,0,48,19,NULL,NULL,NULL,"Cancel",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnCancel() ;")0xffffffff =TCGUILIB_btnCancel >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Revert",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnRevert() ;")0xffffffff =TCGUILIB_btnRevert >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Apply",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnApply() ;")0xffffffff =TCGUILIB_btnApply >-1
MinSizes
Sizes
 0,(2,5),(),50,0,0,0,0,1,1,Vertical
 7,(6),(),0,0,0,0,0,1,1,Horizontal
 8,(6),(),0,0,0,0,0,1,1,Horizontal
 2,(0),(),4,0,0,0,0,1,1,Horizontal
 1,(0),(),-20,0,0,0,0,1,1,Horizontal
 3,(0),(),-20,0,0,0,0,1,1,Horizontal
 5,(6),(),0,0,0,0,0,1,1,Horizontal
Positions
 (7),8,0,0,0,0,0,Top,Top,Top
 (7),8,-5,0,0,0,0,Right,Right,Left
 (6),7,0,0,0,0,0,Top,Top,Top
 (8),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (8),0,-10,0,0,0,0,Right,Right,Right
 (1),2,-10,0,0,0,0,Top,Top,Top
 (1),0,10,0,0,0,0,Left,Left,Left
 (2),3,-10,0,0,0,0,Bottom,Bottom,Bottom
 (2),0,2,0,0,0,0,Right,Right,Right
 (3),0,10,0,0,0,0,Left,Left,Left
 (3),4,-10,0,0,0,0,Top,Top,Top
 (4),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (4),0,10,0,0,0,0,Left,Left,Left
 (5),6,0,0,0,0,0,Top,Top,Top
 (5),6,-5,0,0,0,0,Right,Right,Left
 (6),7,-11,0,0,0,0,Right,Right,Left

Items=TCGUILIB_editor_header
 Dialogue(,,,474,155,NULL,"TCGUILIB_editor_header","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_editor_header > -1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz1 >-1
 Text(0,0,0,NULL,"Name:",PNone)0xffffffff =TCGUILIB_txtName >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfName >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz2 >-1
 Text(0,0,0,NULL,"Type:",PNone)0xffffffff =TCGUILIB_txtType >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfType >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz3 >-1
 Button(0,0,0,124,15,NULL,NULL,NULL,"Log Connection to file:",2,0,0,0,"TCGUILIB_editor_header_handle_TCGUILIB_btnLogging() ;")0xffffffff =TCGUILIB_btnLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfLogFilename >-1
 ButtonSet(0,0,0,23,22,NULL,NULL,NULL,    (1,"Choose..."),    (1,"TCGUILIB_editor_header_handle_choose_logfile()"),    -1,1,1,0,0,61,0,    (1,NULL),    (1,"open"),    (1,NULL),    (1,NULL),0,0)0xffffffff =TCGUILIB_btnsLogFileChooser >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,-8,1052,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatuswinDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,1072,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSaveArgsFunc:",NULL)0x400 =TCGUILIB_editor_saveargs_fn >-1
 TextField(0,-8,1092,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenReadArgsFunc:",NULL)0x400 =TCGUILIB_editor_readargs_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenConChangedFunc:",NULL)0x400 =TCGUILIB_statuswin_changed_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,-8,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgsSane:",NULL)0x400 =TCGUILIB_sane >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEvalArgsFunc:",NULL)0x400 =TCGUILIB_editor_evalargs_fn >-1
 TextField(0,-8,795,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenLegacyScripts:",NULL)0x400 =TCGUILIB_editor_legacyscripts >-1
 Text(0,0,0,NULL,"Target setup script:",PNone)0xffffffff =TCGUILIB_txtSetupScript >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =tfSetupScript >-1
 ButtonSet(0,0,0,46,22,NULL,NULL,NULL,    (2,"Edit","Choose..."),    (2,"TCGUILIB_editor_header_handle_edit_script()","TCGUILIB_editor_header_handle_choose_script()"),    -1,1,2,0,0,61,0,    (2,NULL,NULL),    (2,"editconnection","open"),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =TCGUILIB_btnsSetupScript >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz4 >-1
 ButtonSet(0,0,0,132,15,NULL,NULL,NULL,    (2,"MULTI","Legacy"),    (2,NULL,NULL),    -1,2,2,0,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =bsSetupScript >-1
 TextField(0,0,815,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSetupScript:",NULL)0x400 =TCGUILIB_SetupScript >-1
MinSizes
Sizes
 24,(9),(10),0,0,0,0,0,1,1,Horizontal
 26,(23),(),0,0,0,0,0,1,1,((24),(),0,0,0,0,0,1,1,((),(),0,0,0,0,0,1,1,))Vertical
 7,(8),(),0,0,0,0,0,1,1,((9),(),0,0,0,0,0,1,1,)Vertical
 4,(5),(),0,0,0,0,0,1,1,((6),(),0,0,0,0,0,1,1,)Vertical
 1,(2),(),0,0,0,0,0,1,1,((3),(),0,0,0,0,0,1,1,)Vertical
 9,(0),(8,10),-20,1,0,0,0,1,1,Horizontal
 0,(7,4,1,27),(),89,0,0,0,0,1,1,Vertical
 11,(0),(),-20,0,0,0,0,1,1,Horizontal
 6,(3),(),0,0,0,0,0,1,1,Horizontal
 3,(0),(2),-10,0,0,0,0,1,1,Horizontal
Positions
 (11),27,10,0,0,0,0,Top,Top,Bottom
 (25),24,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (10),0,-7,0,0,0,0,Right,Right,Right
 (10),9,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (27),24,8,0,0,0,0,Left,Left,Left
 (27),26,5,0,0,0,0,TBCenter,Top,Bottom
 (25),0,-7,0,0,0,0,Right,Right,Right
 (24),9,0,0,0,0,0,Left,Left,Left
 (23),0,10,0,0,0,0,Left,Left,Left
 (23,24,26),7,9,0,0,0,0,TBCenter,Top,Bottom
 (9),8,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (7),4,10,0,0,0,0,Top,Top,Bottom
 (4),1,10,0,0,0,0,Top,Top,Bottom
 (1),0,10,0,0,0,0,Top,Top,Top
 (9),8,0,0,0,0,0,Left,Left,Right
 (8),0,10,0,0,0,0,Left,Left,Left
 (8),7,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (11),0,10,0,0,0,0,Left,Left,Left
 (5),4,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (5),0,10,0,0,0,0,Left,Left,Left
 (2),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,10,0,0,0,0,Left,Left,Left
 (6),5,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (6),3,0,0,0,0,0,Left,Left,Left
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),0,2,0,0,0,0,Right,Right,Right

Items=TCGUILIB_editor_header_no_script
 Dialogue(,,,418,116,NULL,"TCGUILIB_editor_header_no_script","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_editor_header_no_script > -1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz1 >-1
 Text(0,0,0,NULL,"Name:",PNone)0xffffffff =TCGUILIB_txtName >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfName >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz2 >-1
 Text(0,0,0,NULL,"Type:",PNone)0xffffffff =TCGUILIB_txtType >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfType >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz3 >-1
 Button(0,0,0,124,15,NULL,NULL,NULL,"Log Connection to file:",2,0,0,0,"TCGUILIB_editor_header_no_script_handle_TCGUILIB_btnLogging() ;")0xffffffff =TCGUILIB_btnLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfLogFilename >-1
 ButtonSet(0,0,0,23,22,NULL,NULL,NULL,    (1,"Choose..."),    (1,"TCGUILIB_editor_header_handle_choose_logfile()"),    -1,1,1,0,0,61,0,    (1,NULL),    (1,"open"),    (1,NULL),    (1,NULL),0,0)0xffffffff =TCGUILIB_btnsLogFileChooser >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,-8,1052,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatuswinDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,1072,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSaveArgsFunc:",NULL)0x400 =TCGUILIB_editor_saveargs_fn >-1
 TextField(0,-8,1092,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenReadArgsFunc:",NULL)0x400 =TCGUILIB_editor_readargs_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenConChangedFunc:",NULL)0x400 =TCGUILIB_statuswin_changed_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,-8,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgsSane:",NULL)0x400 =TCGUILIB_sane >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEvalArgsFunc:",NULL)0x400 =TCGUILIB_editor_evalargs_fn >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSetupScript:",NULL)0x400 =TCGUILIB_SetupScript >-1
 ButtonSet(0,9992,9992,132,15,NULL,NULL,NULL,    (2,"MULTI","Legacy"),    (2,NULL,NULL),    -1,2,2,0,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0x400 =bsSetupScript >-1
 TextField(0,9992,9992,8,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0x400 =tfSetupScript >-1
 TextField(0,9992,9992,28,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenLegacyScripts:",NULL)0x400 =TCGUILIB_editor_legacyscripts >-1
MinSizes
Sizes
 7,(8),(),0,0,0,0,0,1,1,((9),(),0,0,0,0,0,1,1,)Vertical
 4,(5),(),0,0,0,0,0,1,1,((6),(),0,0,0,0,0,1,1,)Vertical
 1,(2),(),0,0,0,0,0,1,1,((3),(),0,0,0,0,0,1,1,)Vertical
 9,(0),(8,10),-10,0,0,0,0,1,1,Horizontal
 0,(7,4,1),(),65,0,0,0,0,1,1,Vertical
 11,(0),(),-20,0,0,0,0,1,1,Horizontal
 6,(3),(),0,0,0,0,0,1,1,Horizontal
 3,(0),(2),-10,0,0,0,0,1,1,Horizontal
Positions
 (10),9,0,0,0,0,0,Top,TBCenter,TBCenter
 (10),0,-7,0,0,0,0,Left,Right,Right
 (11),7,10,0,0,0,0,Top,Top,Bottom
 (9),8,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (7),4,10,0,0,0,0,Top,Top,Bottom
 (4),1,10,0,0,0,0,Top,Top,Bottom
 (1),0,10,0,0,0,0,Top,Top,Top
 (9),8,0,0,0,0,0,Left,Left,Right
 (8),0,10,0,0,0,0,Left,Left,Left
 (8),7,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (11),0,10,0,0,0,0,Left,Left,Left
 (5),4,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (5),0,10,0,0,0,0,Left,Left,Left
 (2),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,10,0,0,0,0,Left,Left,Left
 (6),5,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (6),3,0,0,0,0,0,Left,Left,Left
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),0,2,0,0,0,0,Right,Right,Right

Items=TCGUILIB_logging_dialog
 Dialogue(,,,286,101,NULL,"TCGUILIB_logging_dialog","TCGUILIB_logging_dialog_onSetup() ;","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_logging_dialog > -1
 Button(0,0,0,124,15,NULL,NULL,NULL,"Log Connection To File",2,0,0,0,"TCGUILIB_logging_dialog_handle_TCGUILIB_btnUseLog() ;")0xffffffff =TCGUILIB_btnUseLog >-1
 Text(0,0,0,NULL,"Log File:",PNone)0xffffffff =TCGUILIB_txtLogFilename >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfLogFilename >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"OK",0,1,0,0,"TCGUILIB_logging_dialog_handle_TCGUILIB_btnOK() ;")0xffffffff =TCGUILIB_btnOK >-1
 Button(0,0,0,48,19,NULL,NULL,NULL,"Cancel",0,0,0,0,"TCGUILIB_logging_dialog_handle_TCGUILIB_btnCancel() ;")0xffffffff =TCGUILIB_btnCancel >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenTargetID:",NULL)0x400 =TCGUILIB_TID >-1
MinSizes
 0,(1,4,5),(),0,0,0,0,0,1,1,Horizontal
 0,(1,3,4),(),40,0,0,0,0,1,1,Vertical
Sizes
 3,(0),(2),-6,0,0,0,0,1,1,Horizontal
 4,(5),(),0,0,0,0,0,1,1,Horizontal
Positions
 (4),5,1,0,0,0,0,Top,Top,Top
 (4),5,-5,0,0,0,0,Right,Right,Left
 (5),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (5),0,-10,0,0,0,0,Right,Right,Right
 (3),0,2,0,0,0,0,Right,Right,Right
 (3),1,10,0,0,0,0,Top,Top,Bottom
 (2),3,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,10,0,0,0,0,Left,Left,Left
 (1),0,11,0,0,0,0,Top,Top,Top
 (1),0,10,0,0,0,0,Left,Left,Left

Items=TCGUILIB_minsize_ref
 Dialogue(,,,336,227,NULL,NULL,"","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_minsize_ref > -1
 Text(0,10,13,NULL,"Connect for:",PNone)0x400 =TCGUILIB_minsize_txtConnectFor >-1
 Button(0,10,68,246,15,NULL,NULL,NULL,"Board Setup (Debug board initialization sequence)",1,0,0,0,"")0x400 =TCGUILIB_minsize_btnLogging >-1
MinSizes
Sizes
 0,(2,1),(),30,0,0,0,0,1,1,Horizontal
Positions

Items=TCGUILIB_runmode_partner
 Dialogue(,,,365,43,NULL,"TCGUILIB_runmode_partner","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_runmode_partner > -1
 Line(0,0,1,0,1,NULL,PNone)0x400 =lnVMax >-1
 Text(0,0,0,NULL,"Run-Mode Partner Connection:",PNone)0xffffffff =txtRunModePartner >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =tfRunModePartner >-1
MinSizes
Sizes
 0,(1),(),0,0,0,0,0,1,1,Vertical
 3,(0),(),10,0,0,0,0,1,1,Horizontal
 1,(2,3),(),5,0,0,0,0,1,1,Vertical
Positions
 (3),2,5,0,0,0,0,Top,Top,Bottom
 (1),0,0,0,0,0,0,Left,Left,Left
 (3),2,-9,0,0,0,0,Left,Left,Left
 (2),0,0,0,0,0,0,Top,Top,Top
 (2),0,0,0,0,0,0,Left,Left,Left

Items=TCGUILIB_status_footer
 ColWind(,,,610,49,NULL,"TCGUILIB_status_footer","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_status_footer > -1
 Line(0,10,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 Button(0,0,0,64,19,NULL,NULL,NULL,"Logging...",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnSetLogging() ;")0xffffffff =TCGUILIB_btnSetLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfLogMsg >-1
 Button(0,0,0,44,19,NULL,NULL,NULL,"Edit...",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnEdit() ;")0xffffffff =TCGUILIB_btnEdit >-1
 Button(0,0,0,46,19,NULL,NULL,NULL," Start ",0,1,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnStart() ;")0xffffffff =TCGUILIB_btnStart >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Stop",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnStop() ;")0xffffffff =TCGUILIB_btnStop >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,0,835,1,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatusDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,855,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckStartFunc:",NULL)0x400 =TCGUILIB_analyzestart_fn >-1
 TextField(0,-8,875,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckStopFunc:",NULL)0x400 =TCGUILIB_analyzestop_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckArgsFunc:",NULL)0x400 =TCGUILIB_statuswin_evalargs_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,0,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenIsStarted:",NULL)0x400 =TCGUILIB_started >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSanity:",NULL)0x400 =TCGUILIB_sane >-1
 Text(0,0,0,NULL,"StopOrStartFailureMsg:",PNone)0x400 =TCGUILIB_msg >-1
 TextField(0,0,795,300,17,NULL,NULL,NULL,0xc1acc10,0,"StopOrStartFailureMsg:",NULL)0x400 =TCGUILIB_msg_tf >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenTargetID:",NULL)0x400 =TCGUILIB_TID >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenUseMsgTextField:",NULL)0x400 =TCGUILIB_use_msgtf >-1
MinSizes
Sizes
 3,(0),(6,5,4,2),-36,0,0,0,0,1,1,Horizontal
 1,(0),(),-20,0,0,0,0,1,1,Horizontal
 0,(5),(),30,0,0,0,0,1,1,Vertical
 10,(0),(),-20,0,0,0,0,1,1,Horizontal
 6,(5),(),0,0,0,0,0,1,1,Horizontal
Positions
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),2,-2,0,0,0,0,Left,Left,Right
 (2),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (2),0,10,0,0,0,0,Left,Left,Left
 (1),0,10,0,0,0,0,Top,Top,Top
 (4),5,0,0,0,0,0,Top,Top,Top
 (4),5,-5,0,0,0,0,Right,Right,Left
 (5),6,0,0,0,0,0,Top,Top,Top
 (6),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (5),6,-2,0,0,0,0,Right,Right,Left
 (6),0,-10,0,0,0,0,Right,Right,Right

