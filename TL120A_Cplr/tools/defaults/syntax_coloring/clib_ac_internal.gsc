# The file is auto-grabbed on Tue Oct  6 18:05:25 2015, 
# please don't manually change it.

# It defines CLib API for auto-completion purpose only.

language {
    general {
        case_sensitive = true
    }
    autocomplete {
	# From file ../../../../src/ansi/alloca.h
	# From file ../../../../src/ansi/assert.h
	name += {"assert;void assert(int)"}
	name += {"abort;void abort(void)"}
	# From file ../../../../src/ansi/complex.h
	name += {"cacosf;float complex cacosf(float complex)"}
	name += {"casinf;float complex casinf(float complex)"}
	name += {"catanf;float complex catanf(float complex)"}
	name += {"ccosf;float complex ccosf(float complex)"}
	name += {"csinf;float complex csinf(float complex)"}
	name += {"ctanf;float complex ctanf(float complex)"}
	name += {"cacoshf;float complex cacoshf(float complex)"}
	name += {"casinhf;float complex casinhf(float complex)"}
	name += {"catanhf;float complex catanhf(float complex)"}
	name += {"ccoshf;float complex ccoshf(float complex)"}
	name += {"csinhf;float complex csinhf(float complex)"}
	name += {"ctanhf;float complex ctanhf(float complex)"}
	name += {"cexpf;float complex cexpf(float complex)"}
	name += {"clogf;float complex clogf(float complex)"}
	name += {"cabsf;float cabsf(float complex)"}
	name += {"cpowf;float complex cpowf(float complex, float complex)"}
	name += {"csqrtf;float complex csqrtf(float complex)"}
	name += {"cargf;float cargf(float complex)"}
	name += {"cimagf;float cimagf(float complex)"}
	name += {"conjf;float complex conjf(float complex)"}
	name += {"cprojf;float complex cprojf(float complex)"}
	name += {"crealf;float crealf(float complex)"}
	name += {"cacos;double complex cacos(double complex)"}
	name += {"casin;double complex casin(double complex)"}
	name += {"catan;double complex catan(double complex)"}
	name += {"ccos;double complex ccos(double complex)"}
	name += {"csin;double complex csin(double complex)"}
	name += {"ctan;double complex ctan(double complex)"}
	name += {"cacosh;double complex cacosh(double complex)"}
	name += {"casinh;double complex casinh(double complex)"}
	name += {"catanh;double complex catanh(double complex)"}
	name += {"ccosh;double complex ccosh(double complex)"}
	name += {"csinh;double complex csinh(double complex)"}
	name += {"ctanh;double complex ctanh(double complex)"}
	name += {"cexp;double complex cexp(double complex)"}
	name += {"clog;double complex clog(double complex)"}
	name += {"cabs;double cabs(double complex)"}
	name += {"cpow;double complex cpow(double complex, double complex)"}
	name += {"csqrt;double complex csqrt(double complex)"}
	name += {"carg;double carg(double complex)"}
	name += {"cimag;double cimag(double complex)"}
	name += {"conj;double complex conj(double complex)"}
	name += {"cproj;double complex cproj(double complex)"}
	name += {"creal;double creal(double complex)"}
	name += {"creall;long double creall(long double complex)"}
	name += {"cacosl;long double complex cacosl(long double complex)"}
	name += {"casinl;long double complex casinl(long double complex)"}
	name += {"catanl;long double complex catanl(long double complex)"}
	name += {"ccosl;long double complex ccosl(long double complex)"}
	name += {"csinl;long double complex csinl(long double complex)"}
	name += {"ctanl;long double complex ctanl(long double complex)"}
	name += {"cacoshl;long double complex cacoshl(long double complex)"}
	name += {"casinhl;long double complex casinhl(long double complex)"}
	name += {"catanhl;long double complex catanhl(long double complex)"}
	name += {"ccoshl;long double complex ccoshl(long double complex)"}
	name += {"csinhl;long double complex csinhl(long double complex)"}
	name += {"ctanhl;long double complex ctanhl(long double complex)"}
	name += {"cexpl;long double complex cexpl(long double complex)"}
	name += {"clogl;long double complex clogl(long double complex)"}
	name += {"cabsl;long double cabsl(long double complex)"}
	name += {"cpowl;long double complex cpowl(long double complex, long double complex)"}
	name += {"csqrtl;long double complex csqrtl(long double complex)"}
	name += {"cargl;long double cargl(long double complex)"}
	name += {"cimagl;long double cimagl(long double complex)"}
	name += {"conjl;long double complex conjl(long double complex)"}
	name += {"cprojl;long double complex cprojl(long double complex)"}
	# From file ../../../../src/ansi/ctype.h
	name += {"isalnum;int isalnum(__A0)"}
	name += {"isalpha;int isalpha(__A0)"}
	name += {"isblank;int isblank(__A0)"}
	name += {"iscntrl;int iscntrl(__A0)"}
	name += {"isdigit;int isdigit(__A0)"}
	name += {"isgraph;int isgraph(__A0)"}
	name += {"islower;int islower(__A0)"}
	name += {"isprint;int isprint(__A0)"}
	name += {"ispunct;int ispunct(__A0)"}
	name += {"isspace;int isspace(__A0)"}
	name += {"isupper;int isupper(__A0)"}
	name += {"isxdigit;int isxdigit(__A0)"}
	name += {"tolower;int tolower(__A0)"}
	name += {"toupper;int toupper(__A0)"}
	name += {"isascii;int isascii(__A0)"}
	name += {"toascii;int toascii(__A0)"}
	name += {"isalnum;int isalnum(int __Ch__)"}
	name += {"isalpha;int isalpha(int __Ch__)"}
	name += {"isblank;int isblank(int __Ch__)"}
	name += {"iscntrl;int iscntrl(int __Ch__)"}
	name += {"isdigit;int isdigit(int __Ch__)"}
	name += {"isgraph;int isgraph(int __Ch__)"}
	name += {"islower;int islower(int __Ch__)"}
	name += {"isprint;int isprint(int __Ch__)"}
	name += {"ispunct;int ispunct(int __Ch__)"}
	name += {"isspace;int isspace(int __Ch__)"}
	name += {"isupper;int isupper(int __Ch__)"}
	name += {"isxdigit;int isxdigit(int __Ch__)"}
	name += {"tolower;int tolower(int __Ch__)"}
	name += {"toupper;int toupper(int __Ch__)"}
	name += {"isascii;int isascii(int __Ch__)"}
	name += {"toascii;int toascii(int __Ch__)"}
	# From file ../../../../src/ansi/errno.h
	# From file ../../../../src/ansi/fenv.h
	name += {"feclearexcept;int feclearexcept(int)"}
	name += {"fegetexceptflag;int fegetexceptflag(fexcept_t *, int)"}
	name += {"feraiseexcept;int feraiseexcept(int)"}
	name += {"fesetexceptflag;int fesetexceptflag(const fexcept_t *, int)"}
	name += {"fetestexcept;int fetestexcept(int)"}
	name += {"fegetround;int fegetround(void)"}
	name += {"fesetround;int fesetround(int)"}
	name += {"fegetenv;int fegetenv(fenv_t *)"}
	name += {"feholdexcept;int feholdexcept(fenv_t *)"}
	name += {"fesetenv;int fesetenv(const fenv_t *)"}
	name += {"feupdateenv;int feupdateenv(const fenv_t *)"}
	# From file ../../../../src/ansi/float.h
	# From file ../../../../src/ansi/ghs_malloc.h
	name += {"calloc;void *calloc(size_t __CNT, size_t __SIZ)"}
	name += {"free;void free(void *)"}
	name += {"malloc;void *malloc(size_t __SIZ)"}
	name += {"realloc;void *realloc(void *, size_t)"}
	name += {"free_unlocked;void free_unlocked(void *)"}
	name += {"malloc_unlocked;void *malloc_unlocked(size_t __SIZ)"}
	name += {"malloc_usable_size;size_t malloc_usable_size(void *)"}
	name += {"cfree;void cfree(void *)"}
	name += {"memalign;void *memalign(size_t __SIZ, size_t __AMT)"}
	name += {"valloc;void *valloc(size_t __SIZ)"}
	name += {"pvalloc;void *pvalloc(size_t __SIZ)"}
	name += {"mallinfo;struct mallinfo mallinfo(void)"}
	name += {"mallopt;int mallopt(int, int)"}
	name += {"malloc_check_lib;void malloc_check_lib(int)"}
	name += {"malloc_set_debug_options;int malloc_set_debug_options(int)"}
	# From file ../../../../src/ansi/ghs_null.h
	# From file ../../../../src/ansi/ghs_rnerr.h
	# From file ../../../../src/ansi/ghs_wchar.h
	# From file ../../../../src/ansi/inline.h
	# From file ../../../../src/ansi/interrup.h
	# From file ../../../../src/ansi/interrupt.h
	# From file ../../../../src/ansi/inttypes.h
	name += {"imaxabs;intmax_t imaxabs(intmax_t)"}
	name += {"imaxdiv;imaxdiv_t imaxdiv(intmax_t, intmax_t)"}
	name += {"imaxabs;intmax_t imaxabs()"}
	name += {"imaxdiv;imaxdiv_t imaxdiv()"}
	name += {"strtoimax;intmax_t strtoimax(const char *__Restrict, char **__Restrict, int)"}
	name += {"strtoumax;uintmax_t strtoumax(const char *__Restrict, char **__Restrict, int)"}
	name += {"wcstoimax;intmax_t wcstoimax(const wchar_t *__Restrict, wchar_t **__Restrict, int)"}
	name += {"wcstoumax;uintmax_t wcstoumax(const wchar_t *__Restrict, wchar_t **__Restrict, int)"}
	# From file ../../../../src/ansi/iso646.h
	# From file ../../../../src/ansi/limits.h
	# From file ../../../../src/ansi/locale.h
	name += {"setlocale;char *setlocale(int , const char *)"}
	name += {"localeconv;struct lconv *localeconv(void)"}
	name += {"setlocale;char *setlocale()"}
	name += {"localeconv;struct lconv *localeconv()"}
	# From file ../../../../src/ansi/math.h
	name += {"atof;double atof(const char *)"}
	name += {"acos;double acos(double)"}
	name += {"asin;double asin(double)"}
	name += {"atan;double atan(double)"}
	name += {"atan2;double atan2(double, double)"}
	name += {"cos;double cos(double)"}
	name += {"sin;double sin(double)"}
	name += {"tan;double tan(double)"}
	name += {"cosh;double cosh(double)"}
	name += {"sinh;double sinh(double)"}
	name += {"tanh;double tanh(double)"}
	name += {"exp;double exp(double)"}
	name += {"exp2;double exp2(double)"}
	name += {"expm1;double expm1(double)"}
	name += {"frexp;double frexp(double, int *)"}
	name += {"ldexp;double ldexp(double, int)"}
	name += {"log;double log(double)"}
	name += {"log10;double log10(double)"}
	name += {"modf;double modf(double, double *)"}
	name += {"pow;double pow(double, double)"}
	name += {"sqrt;double sqrt(double)"}
	name += {"ceil;double ceil(double)"}
	name += {"floor;double floor(double)"}
	name += {"round;double round(double)"}
	name += {"lround;long lround(double)"}
	name += {"llround;long long llround(double)"}
	name += {"trunc;double trunc(double)"}
	name += {"fabs;double fabs(double)"}
	name += {"fmod;double fmod(double, double)"}
	name += {"remainder;double remainder(double, double)"}
	name += {"log2;double log2(double)"}
	name += {"logb;double logb(double)"}
	name += {"scalbln;double scalbln(double, long)"}
	name += {"cbrt;double cbrt(double)"}
	name += {"remquo;double remquo(double, double, int *)"}
	name += {"lgamma;double lgamma(double)"}
	name += {"tgamma;double tgamma(double)"}
	name += {"nearbyint;double nearbyint(double)"}
	name += {"rint;double rint(double)"}
	name += {"lrint;long lrint(double)"}
	name += {"llrint;long long llrint(double)"}
	name += {"nextafter;double nextafter(double, double)"}
	name += {"nexttoward;double nexttoward(double, long double)"}
	name += {"nexttowardf;float nexttowardf(float, long double)"}
	name += {"fma;double fma(double, double, double)"}
	name += {"copysign;double copysign(double, double)"}
	name += {"cosl;long double cosl(long double)"}
	name += {"sinl;long double sinl(long double)"}
	name += {"tanl;long double tanl(long double)"}
	name += {"coshl;long double coshl(long double)"}
	name += {"sinhl;long double sinhl(long double)"}
	name += {"tanhl;long double tanhl(long double)"}
	name += {"acosl;long double acosl(long double)"}
	name += {"asinl;long double asinl(long double)"}
	name += {"atanl;long double atanl(long double)"}
	name += {"atan2l;long double atan2l(long double, long double)"}
	name += {"acoshl;long double acoshl(long double)"}
	name += {"asinhl;long double asinhl(long double)"}
	name += {"atanhl;long double atanhl(long double)"}
	name += {"sqrtl;long double sqrtl(long double)"}
	name += {"ceill;long double ceill(long double)"}
	name += {"floorl;long double floorl(long double)"}
	name += {"lroundl;long lroundl(long double)"}
	name += {"llroundl;long long llroundl(long double)"}
	name += {"fabsl;long double fabsl(long double)"}
	name += {"frexpl;long double frexpl(long double, int *)"}
	name += {"ldexpl;long double ldexpl(long double, int)"}
	name += {"fmodl;long double fmodl(long double, long double)"}
	name += {"powl;long double powl(long double, long double)"}
	name += {"expl;long double expl(long double)"}
	name += {"exp2l;long double exp2l(long double)"}
	name += {"expm1l;long double expm1l(long double)"}
	name += {"ilogbl;int ilogbl(long double)"}
	name += {"logl;long double logl(long double)"}
	name += {"log10l;long double log10l(long double)"}
	name += {"log1pl;long double log1pl(long double)"}
	name += {"log2l;long double log2l(long double)"}
	name += {"logbl;long double logbl(long double)"}
	name += {"modfl;long double modfl(long double, long double *)"}
	name += {"scalbnl;long double scalbnl(long double, int)"}
	name += {"scalblnl;long double scalblnl(long double, long)"}
	name += {"hypotl;long double hypotl(long double, long double)"}
	name += {"erfl;long double erfl(long double)"}
	name += {"erfcl;long double erfcl(long double)"}
	name += {"remainderl;long double remainderl(long double, long double)"}
	name += {"copysignl;long double copysignl(long double, long double)"}
	name += {"fminl;long double fminl(long double, long double)"}
	name += {"fmaxl;long double fmaxl(long double, long double)"}
	name += {"cbrtl;long double cbrtl(long double)"}
	name += {"fdiml;long double fdiml(long double, long double)"}
	name += {"nanl;long double nanl(const char *)"}
	name += {"roundl;long double roundl(long double)"}
	name += {"truncl;long double truncl(long double)"}
	name += {"fmal;long double fmal(long double, long double, long double)"}
	name += {"remquol;long double remquol(long double, long double, int *)"}
	name += {"lgammal;long double lgammal(long double)"}
	name += {"tgammal;long double tgammal(long double)"}
	name += {"nearbyintl;long double nearbyintl(long double)"}
	name += {"nextafterl;long double nextafterl(long double, long double)"}
	name += {"nexttowardl;long double nexttowardl(long double, long double)"}
	name += {"rintl;long double rintl(long double)"}
	name += {"lrintl;long int lrintl(long double)"}
	name += {"llrintl;long long llrintl(long double)"}
	name += {"lroundf;long lroundf(float)"}
	name += {"llroundf;long long llroundf(float)"}
	name += {"remainderf;float remainderf(float, float)"}
	name += {"log2f;float log2f(float)"}
	name += {"logbf;float logbf(float)"}
	name += {"scalblnf;float scalblnf(float, long)"}
	name += {"erff;float erff(float)"}
	name += {"erfcf;float erfcf(float)"}
	name += {"cbrtf;float cbrtf(float)"}
	name += {"remquof;float remquof(float, float, int *)"}
	name += {"lgammaf;float lgammaf(float)"}
	name += {"tgammaf;float tgammaf(float)"}
	name += {"nearbyintf;float nearbyintf(float)"}
	name += {"rintf;float rintf(float)"}
	name += {"lrintf;long lrintf(float)"}
	name += {"llrintf;long long llrintf(float)"}
	name += {"nextafterf;float nextafterf(float, float)"}
	name += {"fmaf;float fmaf(float, float, float)"}
	name += {"copysignf;float copysignf(float, float)"}
	name += {"acosh;double acosh(double)"}
	name += {"asinh;double asinh(double)"}
	name += {"atanh;double atanh(double)"}
	name += {"hypot;double hypot(double, double)"}
	name += {"isnan;int isnan(double)"}
	name += {"isinf;int isinf(double)"}
	name += {"isfinite;int isfinite(double)"}
	name += {"isnormal;int isnormal(double)"}
	name += {"signbit;int signbit(double)"}
	name += {"ilogb;int ilogb(double)"}
	name += {"log1p;double log1p(double)"}
	name += {"scalbn;double scalbn(double, int)"}
	name += {"fdim;double fdim(double, double)"}
	name += {"fmax;double fmax(double, double)"}
	name += {"fmin;double fmin(double, double)"}
	name += {"nan;double nan(const char *)"}
	name += {"erf;double erf(double)"}
	name += {"erfc;double erfc(double)"}
	name += {"gamma;double gamma(double)"}
	name += {"ilogbf;int ilogbf(float)"}
	name += {"log1pf;float log1pf(float)"}
	name += {"scalbnf;float scalbnf(float, int)"}
	name += {"fdimf;float fdimf(float, float)"}
	name += {"fmaxf;float fmaxf(float, float)"}
	name += {"fminf;float fminf(float, float)"}
	name += {"nanf;float nanf(const char *)"}
	name += {"j0;double j0(double)"}
	name += {"j1;double j1(double)"}
	name += {"jn;double jn(int, double)"}
	name += {"y0;double y0(double)"}
	name += {"y1;double y1(double)"}
	name += {"yn;double yn(int, double)"}
	name += {"acoshf;float acoshf(float)"}
	name += {"asinhf;float asinhf(float)"}
	name += {"atanhf;float atanhf(float)"}
	name += {"acosf;float acosf(float)"}
	name += {"asinf;float asinf(float)"}
	name += {"atanf;float atanf(float)"}
	name += {"atan2f;float atan2f(float, float)"}
	name += {"cosf;float cosf(float)"}
	name += {"sinf;float sinf(float)"}
	name += {"tanf;float tanf(float)"}
	name += {"coshf;float coshf(float)"}
	name += {"sinhf;float sinhf(float)"}
	name += {"tanhf;float tanhf(float)"}
	name += {"expf;float expf(float)"}
	name += {"exp2f;float exp2f(float)"}
	name += {"expm1f;float expm1f(float)"}
	name += {"frexpf;float frexpf(float, int *)"}
	name += {"hypotf;float hypotf(float, float)"}
	name += {"ldexpf;float ldexpf(float, int)"}
	name += {"logf;float logf(float)"}
	name += {"log10f;float log10f(float)"}
	name += {"powf;float powf(float, float)"}
	name += {"sqrtf;float sqrtf(float)"}
	name += {"fabsf;float fabsf(float)"}
	name += {"ceilf;float ceilf(float)"}
	name += {"floorf;float floorf(float)"}
	name += {"roundf;float roundf(float)"}
	name += {"truncf;float truncf(float)"}
	name += {"fmodf;float fmodf(float, float)"}
	name += {"modff;float modff(float, float *)"}
	name += {"acosf;float acosf(float _X)"}
	name += {"asinf;float asinf(float _X)"}
	name += {"atanf;float atanf(float _X)"}
	name += {"atan2f;float atan2f(float _Y, float _X)"}
	name += {"cosf;float cosf(float _X)"}
	name += {"sinf;float sinf(float _X)"}
	name += {"tanf;float tanf(float _X)"}
	name += {"coshf;float coshf(float _X)"}
	name += {"sinhf;float sinhf(float _X)"}
	name += {"tanhf;float tanhf(float _X)"}
	name += {"expf;float expf(float _X)"}
	name += {"frexpf;float frexpf(float _X, int *_Y)"}
	name += {"ldexpf;float ldexpf(float _X, int _Y)"}
	name += {"logf;float logf(float _X)"}
	name += {"log10f;float log10f(float _X)"}
	name += {"sqrtf;float sqrtf(float _X)"}
	name += {"powf;float powf(float _X, float _Y)"}
	# From file ../../../../src/ansi/setjmp.h
	name += {"setjmp;int setjmp(jmp_buf __JBF)"}
	name += {"longjmp;void longjmp(jmp_buf __JBF, int __RET_VAL)"}
	# From file ../../../../src/ansi/signal.h
	name += {"void;void (*signal(int, void (*)(int)))(int)"}
	name += {"signal;__SIG_HANDLER signal(int, __SIG_HANDLER func)"}
	name += {"raise;int raise(int)"}
	name += {"kill;int kill(int, int)"}
	name += {"sigaction;int sigaction(int, const struct sigaction *, struct sigaction *)"}
	name += {"sigaddset;int sigaddset(sigset_t *, int)"}
	name += {"sigdelset;int sigdelset(sigset_t *, int)"}
	name += {"sigemptyset;int sigemptyset(sigset_t *)"}
	name += {"sigfillset;int sigfillset(sigset_t *)"}
	name += {"sigismember;int sigismember(sigset_t *, int)"}
	name += {"sigpending;int sigpending(sigset_t *)"}
	name += {"sigprocmask;int sigprocmask(int, const sigset_t *, sigset_t *)"}
	name += {"sigsuspend;int sigsuspend(const sigset_t *)"}
	# From file /home/multi/tools_50/latest/src/ansi/socket_emulation.h
	name += {"accept;int accept(int, struct sockaddr *, socklen_t *)"}
	name += {"bind;int bind(int, const struct sockaddr *, socklen_t)"}
	name += {"connect;int connect(int, const struct sockaddr *, socklen_t)"}
	name += {"getpeername;int getpeername(int, struct sockaddr *, socklen_t *)"}
	name += {"getsockname;int getsockname(int, struct sockaddr *, socklen_t *)"}
	name += {"getsockopt;int getsockopt(int, int, int, void *, socklen_t *)"}
	name += {"listen;int listen(int, int)"}
	name += {"recv;ssize_t recv(int, void *, size_t, int)"}
	name += {"recvfrom;ssize_t recvfrom(int, void *, size_t, int, struct sockaddr *, socklen_t *))"}
	name += {"recvmsg;ssize_t recvmsg(int, struct msghdr *, int)"}
	name += {"send;ssize_t send(int, const void *, size_t, int)"}
	name += {"sendto;ssize_t sendto(int, const void *, size_t, int, const struct sockaddr *, socklen_t))"}
	name += {"sendmsg;ssize_t sendmsg(int, const struct msghdr *, int)"}
	name += {"setsockopt;int setsockopt(int, int, int, const void *, socklen_t)"}
	name += {"shutdown;int shutdown(int, int)"}
	name += {"socket_close;int socket_close(int)"}
	name += {"socket;int socket(int, int, int)"}
	name += {"socketpair;int socketpair(int, int, int, int *)"}
	name += {"socket_select;int socket_select(int, fd_set *, fd_set *, fd_set *, struct timeval *))"}
	name += {"in_broadcast;int in_broadcast(struct in_addr, struct ifnet *)"}
	name += {"in_canforward;int in_canforward(struct in_addr)"}
	name += {"in_cksum;int in_cksum(struct mbuf *, int)"}
	name += {"in4_cksum;int in4_cksum(struct mbuf *, uint8_t, int, int)"}
	name += {"in_localaddr;int in_localaddr(struct in_addr)"}
	name += {"in_socktrim;void in_socktrim(struct sockaddr_in *)"}
	name += {"bcvtle16;static uint16_t bcvtle16(uint16_t in)"}
	name += {"bcvtle32;static uint32_t bcvtle32(uint32_t in)"}
	name += {"bcvtle64;static uint64_t bcvtle64(uint64_t in)"}
	name += {"bcvtbe16;static uint16_t bcvtbe16(uint16_t in)"}
	name += {"bcvtbe32;static uint32_t bcvtbe32(uint32_t in)"}
	name += {"bcvtbe64;static uint64_t bcvtbe64(uint64_t in)"}
	# From file ../../../../src/ansi/stdarg.h
	# From file ../../../../src/ansi/stdbool.h
	# From file ../../../../src/ansi/stddef.h
	# From file ../../../../src/ansi/stdint.h
	# From file ../../../../src/ansi/stdio.h
	name += {"remove;int remove(const char *)"}
	name += {"rename;int rename(const char *, const char *)"}
	name += {"tmpfile;FILE *tmpfile(void)"}
	name += {"tmpnam;char *tmpnam(char *)"}
	name += {"fclose;int fclose(FILE *)"}
	name += {"fflush;int fflush(FILE *)"}
	name += {"fopen;FILE *fopen(const char *__Restrict, const char *__Restrict)"}
	name += {"freopen;FILE *freopen(const char *__Restrict, const char *__Restrict, FILE *__Restrict)"}
	name += {"fdopen;FILE *fdopen(int, const char *__Restrict)"}
	name += {"setbuf;void setbuf(FILE *__Restrict, char *__Restrict)"}
	name += {"setvbuf;int setvbuf(FILE *__Restrict, char *__Restrict, int, size_t)"}
	name += {"fprintf;int fprintf(FILE *__Restrict, const char *__Restrict, ...)"}
	name += {"fscanf;int fscanf(FILE *__Restrict, const char *__Restrict, ...)"}
	name += {"printf;int printf(const char *__Restrict, ...)"}
	name += {"scanf;int scanf(const char *__Restrict, ...)"}
	name += {"snprintf;int snprintf(char *__Restrict, size_t, const char *__Restrict, ...)"}
	name += {"sprintf;int sprintf(char *__Restrict, const char *__Restrict, ...)"}
	name += {"sscanf;int sscanf(const char *__Restrict, const char *__Restrict, ...)"}
	name += {"fgetc;int fgetc(FILE *)"}
	name += {"fgets;char *fgets(char *__Restrict, int, FILE *__Restrict)"}
	name += {"fputc;int fputc(int, FILE *)"}
	name += {"fputs;int fputs(const char *__Restrict, FILE *__Restrict)"}
	name += {"getc;int getc(FILE *)"}
	name += {"getchar;int getchar(void)"}
	name += {"gets;char *gets(char *)"}
	name += {"putc;int putc(int, FILE *)"}
	name += {"putchar;int putchar(int)"}
	name += {"puts;int puts(const char *)"}
	name += {"ungetc;int ungetc(int, FILE *)"}
	name += {"getc_unlocked;int getc_unlocked(FILE *)"}
	name += {"getchar_unlocked;int getchar_unlocked(void)"}
	name += {"putc_unlocked;int putc_unlocked(int, FILE *)"}
	name += {"putchar_unlocked;int putchar_unlocked(int)"}
	name += {"fread;size_t fread(void *__Restrict, size_t, size_t, FILE *__Restrict)"}
	name += {"fwrite;size_t fwrite(const void *__Restrict, size_t, size_t, FILE *__Restrict)"}
	name += {"fgetpos;int fgetpos(FILE *__Restrict, fpos_t *__Restrict)"}
	name += {"fseek;int fseek(FILE *, long int, int)"}
	name += {"fsetpos;int fsetpos(FILE *, const fpos_t *)"}
	name += {"ftell;long int ftell(FILE *)"}
	name += {"rewind;void rewind(FILE *)"}
	name += {"clearerr;void clearerr(FILE *)"}
	name += {"fileno;int fileno(FILE *)"}
	name += {"feof;int feof(FILE *)"}
	name += {"ferror;int ferror(FILE *)"}
	name += {"perror;void perror(const char *)"}
	name += {"vfprintf;int vfprintf(FILE *__Restrict, const char *__Restrict, __gh_va_list)"}
	name += {"vprintf;int vprintf(const char *__Restrict, __gh_va_list)"}
	name += {"vsnprintf;int vsnprintf(char *__Restrict, size_t, const char *__Restrict, __gh_va_list)"}
	name += {"vsprintf;int vsprintf(char *__Restrict, const char *__Restrict, __gh_va_list)"}
	name += {"vfscanf;int vfscanf(FILE *__Restrict, const char *__Restrict, __gh_va_list)"}
	name += {"vscanf;int vscanf(const char *__Restrict, __gh_va_list)"}
	name += {"vsscanf;int vsscanf(const char *__Restrict, const char *__Restrict, __gh_va_list)"}
	name += {"flockfile;void flockfile(FILE *)"}
	name += {"ftrylockfile;int ftrylockfile(FILE *)"}
	name += {"funlockfile;void funlockfile(FILE *)"}
	name += {"flockcreate;void flockcreate(FILE *)"}
	name += {"flockdestroy;void flockdestroy(FILE *)"}
	name += {"ctermid;char *ctermid(char *)"}
	name += {"popen;FILE *popen(const char *, const char *)"}
	name += {"pclose;int pclose(FILE *)"}
	name += {"fseeko;int fseeko(FILE *, off_t, int)"}
	name += {"ftello;off_t ftello(FILE *)"}
	# From file ../../../../src/ansi/stdlib.h
	name += {"abs;int abs(int j)"}
	name += {"labs;long labs(long j)"}
	name += {"llabs;long long llabs(long long j)"}
	name += {"abs;int abs(int)"}
	name += {"labs;long int labs(long int)"}
	name += {"llabs;long long llabs(long long)"}
	name += {"atexit;int atexit(void (*__FNC)(void))"}
	name += {"atexit;int atexit(__ATEXIT_FNC __FNC)"}
	name += {"atof;double atof(const char *__STR)"}
	name += {"atoi;int atoi(const char *__STR)"}
	name += {"atol;long atol(const char *__STR)"}
	name += {"atoll;long long atoll(const char *__STR)"}
	name += {"bsearch;void *bsearch(const void *__KEY, const void *__BAS, size_t __CNT, size_t __SIZ, int (*__FNC)(const void *, const void *))"}
	name += {"bsearch;void *bsearch(const void *__KEY, const void *__BAS, size_t __CNT, size_t __SIZ, __BSRCH_CMP_FNC __FNC)"}
	name += {"free;void free(void *__MEM)"}
	name += {"realloc;void *realloc(void *__MEM, size_t __SIZ)"}
	name += {"div;div_t div(int __NUM, int __DENOM)"}
	name += {"ldiv;ldiv_t ldiv(long __NUM, long __DENOM)"}
	name += {"lldiv;lldiv_t lldiv(long long __NUM, long long __DENOM)"}
	name += {"mblen;int mblen(const char *__MBS, size_t __CNT)"}
	name += {"mbstowcs;size_t mbstowcs(wchar_t *__Restrict __MBS, const char *__Restrict __WCS, size_t __CNT)"}
	name += {"mbtowc;int mbtowc(wchar_t *__Restrict __MBS, const char *__Restrict __WCS, size_t __CNT)"}
	name += {"qsort;void qsort(void *__BAS, size_t __CNT, size_t __SIZ, int (*__FNC)(const void *, const void *))"}
	name += {"qsort;void qsort(void *__BAS, size_t __CNT, size_t __SIZ, __QSORT_CMP_FNC __FNC)"}
	name += {"rand;int rand(void)"}
	name += {"rand_r;int rand_r(unsigned __SEED[1])"}
	name += {"rand_r2;int rand_r2(long __SEED[2])"}
	name += {"srand;void srand(unsigned int __SEED)"}
	name += {"strtold;long double strtold(const char *__Restrict __STR, char **__Restrict __ENDP)"}
	name += {"strtod;double strtod(const char *__Restrict __STR, char **__Restrict __ENDP)"}
	name += {"strtof;float strtof(const char *__Restrict __STR, char **__Restrict __ENDP)"}
	name += {"strtol;long strtol(const char *__Restrict __STR, char **__Restrict __ENDP, int __BASE)"}
	name += {"strtoul;unsigned long strtoul(const char *__Restrict __STR, char **__Restrict __ENDP, int __BASE)"}
	name += {"strtoll;long long strtoll(const char *__Restrict __STR, char **__Restrict __ENDP, int __BASE)"}
	name += {"strtoull;unsigned long long strtoull(const char *__Restrict __STR, char **__Restrict __ENDP, int __BASE)"}
	name += {"exit;void exit(int __VAL)"}
	name += {"getenv;char *getenv(const char *__STR)"}
	name += {"putenv;int putenv(const char *__STR)"}
	name += {"setenv;int setenv(const char *__NAM, const char *__VAL, int __OVERWRITE)"}
	name += {"unsetenv;int unsetenv(const char *__NAM)"}
	name += {"system;int system(const char *__STR)"}
	name += {"wcstombs;size_t wcstombs(char *__Restrict __MBS, const wchar_t *__Restrict __WCS, size_t)"}
	name += {"wctomb;int wctomb(char *__MBS, wchar_t __WCH)"}
	name += {"swab;void swab(const char *__SRC, char *__DST, int __CNT)"}
	# From file ../../../../src/ansi/string.h
	name += {"memchr;const void *memchr(const void *__MEM, int __CH, size_t __n)"}
	name += {"strchr;const char *strchr(const char *__STR, int __CH)"}
	name += {"strpbrk;const char *strpbrk(const char *__STR, const char *__BRK)"}
	name += {"strrchr;const char *strrchr(const char *__STR, int __CH)"}
	name += {"strstr;const char *strstr(const char *__STR, const char *__PAT)"}
	name += {"memchr;void *memchr(void *_S, int _C, size_t _N)"}
	name += {"strchr;char *strchr(char *_S, int _C)"}
	name += {"strpbrk;char *strpbrk(char *_S, const char *_P)"}
	name += {"strrchr;char *strrchr(char *_S, int _C)"}
	name += {"strstr;char *strstr(char *_S, const char *_P)"}
	name += {"strpbrk;char *strpbrk(const char *__STR, const char *__BRK)"}
	name += {"strchr;char *strchr(const char *__STR, int __CH)"}
	name += {"strrchr;char *strrchr(const char *__STR, int __CH)"}
	name += {"strstr;char *strstr(const char *__STR, const char *__PAT)"}
	name += {"memchr;void *memchr(const void *__MEM, int __CH, size_t __LEN)"}
	name += {"memcpy;void *memcpy(void *__Restrict __DST, const void *__Restrict __SRC, size_t __LEN)"}
	name += {"memset;void *memset(void *, int, size_t __LEN)"}
	name += {"memmove;void *memmove(void *_DST, const void *__SRC, size_t __LEN)"}
	name += {"strcat;char *strcat(char *__Restrict __DST, const char *__Restrict __SRC)"}
	name += {"strncat;char *strncat(char *__Restrict __DST, const char *__Restrict __SRC, size_t __LEN)"}
	name += {"strcpy;char *strcpy(char *__Restrict __DST, const char *__Restrict __SRC)"}
	name += {"strncpy;char *strncpy(char *__Restrict __DST, const char *__Restrict __SRC, size_t __LEN)"}
	name += {"memcmp;int memcmp(const void *__M1, const void *__M2, size_t __LEN)"}
	name += {"strcmp;int strcmp(const char *__ST1, const char *__ST2)"}
	name += {"strncmp;int strncmp(const char *__ST1, const char *__ST2, size_t __LEN)"}
	name += {"strlen;size_t strlen(const char *__STR)"}
	name += {"strtok;char *strtok(char *__Restrict __STR, const char *__Restrict __TOK)"}
	name += {"strcoll;int strcoll(const char *__ST1, const char *__ST2)"}
	name += {"strcspn;size_t strcspn(const char *__STR, const char *__SET)"}
	name += {"strspn;size_t strspn(const char *__STR, const char *__SET)"}
	name += {"strxfrm;size_t strxfrm(char *__Restrict __STR, const char *__Restrict __SET, size_t __LEN)"}
	name += {"strerror;char *strerror(int)"}
	name += {"strtok_r;char *strtok_r(char *__Restrict __STR, const char *__Restrict __TOK, char **__Restrict)"}
	name += {"strdup;char *strdup(const char *)"}
	name += {"bcopy;void bcopy(const void *__Restrict __DST, void *__Restrict __SRC, size_t __LEN)"}
	name += {"bzero;void bzero(void *__MEM, size_t __LEN)"}
	name += {"bcmp;int bcmp(const void *__MEM, const void *, size_t __LEN)"}
	name += {"ffs;int ffs(int)"}
	name += {"strcasecmp;int strcasecmp(const char *__STR1, const char *__STR2)"}
	name += {"strncasecmp;int strncasecmp(const char *__STR1, const char *__STR2, size_t __LEN)"}
	name += {"memrchr;void *memrchr(const void *__MEM, int, size_t __LEN)"}
	name += {"strndup;char *strndup(const char *__STR, size_t __LEN)"}
	name += {"strnlen;size_t strnlen(const char *__STR, size_t __LEN)"}
	name += {"mempcpy;void *mempcpy(void *__Restrict __M1, const void *__Restrict __M2, size_t __LEN)"}
	name += {"index;char *index(const char *__STR, int __LEN)"}
	name += {"rindex;char *rindex(const char *__STR, int __LEN)"}
	name += {"strerror_r;char *strerror_r(int __ERR, char *__BUF, size_t __LEN)"}
	name += {"strsep;char *strsep(char *__Restrict *__Restrict __STP, const char *__Restrict __SET)"}
	name += {"memccpy;void *memccpy(void *__DST, const void *__SRC, int __CH, size_t __LEN)"}
	name += {"strfry;char *strfry(char *)"}
	name += {"memfrob;void *memfrob(void *__MEM, size_t __LEN)"}
	name += {"rawmemchr;void *rawmemchr(const void *__MEM, int __CH)"}
	name += {"strchrnul;char *strchrnul(const char *, int)"}
	name += {"strcasestr;char *strcasestr(const char *, const char *)"}
	name += {"memmem;void *memmem(const void *__M1, size_t __LN1 , const void *__M2, size_t __LN2)"}
	name += {"strverscmp;int strverscmp(const char *__STR1, const char *__STR2)"}
	name += {"strsignal;char *strsignal(int __SIG)"}
	name += {"stpcpy;char *stpcpy(char *__Restrict __DST, const char *__Restrict __SRC)"}
	name += {"stpncpy;char *stpncpy(char *__Restrict __DST, const char *__Restrict __SRC, size_t __LEN)"}
	# From file ../../../../src/ansi/strings.h
	name += {"bcmp;int bcmp(const void *__M1, const void *__M2, size_t __LEN)"}
	name += {"bcopy;void bcopy(const void *__SRC, void *__DST, size_t __LEN)"}
	name += {"bzero;void bzero(void *__PTR, size_t __LEN)"}
	name += {"ffs;int ffs(int __VAL)"}
	# From file ../../../../src/ansi/tgmath.h
	# From file ../../../../src/ansi/time.h
	name += {"difftime;double difftime(time_t __TIM1, time_t __TIM2)"}
	name += {"time;time_t time(time_t *)"}
	name += {"clock;clock_t clock(void)"}
	name += {"mktime;time_t mktime(struct tm *)"}
	name += {"asctime;char *asctime(const struct tm *)"}
	name += {"asctime_r;char *asctime_r(const struct tm *, char *)"}
	name += {"ctime;char *ctime(const time_t *)"}
	name += {"ctime_r;char *ctime_r(const time_t *, char *)"}
	name += {"gmtime;struct tm *gmtime(const time_t *)"}
	name += {"gmtime_r;struct tm *gmtime_r(const time_t *, struct tm *)"}
	name += {"localtime;struct tm *localtime(const time_t *)"}
	name += {"localtime_r;struct tm *localtime_r(const time_t *, struct tm *)"}
	name += {"strftime;size_t strftime(char *__Restrict, size_t, const char *__Restrict, const struct tm *__Restrict)"}
	name += {"clock_settime;int clock_settime(clockid_t __clock_id, const struct timespec *_tp)"}
	name += {"clock_gettime;int clock_gettime(clockid_t _clock_id, struct timespec *_tp)"}
	name += {"clock_getres;int clock_getres(clockid_t _clock_id, struct timespec *_res)"}
	name += {"nanosleep;int nanosleep(const struct timespec *_rqtp, struct timespec *_rmtp)"}
	name += {"timer_create;int timer_create(clockid_t _clock_id, sigevent_t *_evp, timer_t *_timerid)"}
	name += {"timer_delete;int timer_delete(timer_t _timerid)"}
	name += {"timer_settime;int timer_settime(timer_t _timerid, int _flags, const struct itimerspec *_value, struct itimerspec *_ovalue)"}
	name += {"timer_gettime;int timer_gettime(timer_t _timerid, struct itimerspec *_value)"}
	name += {"timer_getoverrun;int timer_getoverrun(timer_t _timerid)"}
	name += {"tzset;void tzset(void)"}
	# From file ../../../../src/ansi/varargs.h
	# From file ../../../../src/ansi/wchar.h
	name += {"fgetwc;wint_t fgetwc(__File_Type *)"}
	name += {"fputwc;wint_t fputwc(__Wchar_T, __File_Type *)"}
	name += {"ungetwc;wint_t ungetwc(__Wint_T, __File_Type *)"}
	name += {"fgetwc_unlocked;wint_t fgetwc_unlocked(__File_Type *)"}
	name += {"fputwc_unlocked;wint_t fputwc_unlocked(__Wchar_T, __File_Type *)"}
	name += {"fgetws;wchar_t *fgetws(__Wchar_T *__Restrict, int, __File_Type *__Restrict)"}
	name += {"fputws;int fputws(const wchar_t *__Restrict, __File_Type *__Restrict)"}
	name += {"fwprintf;int fwprintf(__File_Type *__Restrict, const wchar_t *__Restrict, ...)"}
	name += {"fwscanf;int fwscanf(__File_Type *__Restrict, const wchar_t *__Restrict, ...)"}
	name += {"fwide;int fwide(__File_Type *, int)"}
	name += {"vfwprintf;int vfwprintf(__File_Type *__Restrict, const wchar_t *__Restrict, __gh_va_list)"}
	name += {"vfwscanf;int vfwscanf(__File_Type *__Restrict, const wchar_t *__Restrict, __gh_va_list)"}
	name += {"wmemcmp;int wmemcmp(const wchar_t *__Restrict, const wchar_t *__Restrict, size_t)"}
	name += {"wmemcpy;wchar_t *wmemcpy(__Wchar_T *__Restrict, const wchar_t *__Restrict, size_t)"}
	name += {"wmemmove;wchar_t *wmemmove(__Wchar_T *, const wchar_t *, size_t)"}
	name += {"wmemset;wchar_t *wmemset(__Wchar_T *, wchar_t, size_t)"}
	name += {"swprintf;int swprintf(__Wchar_T *__Restrict, size_t, const wchar_t *__Restrict, ...)"}
	name += {"swscanf;int swscanf(const wchar_t *__Restrict, const wchar_t *__Restrict, ...)"}
	name += {"wprintf;int wprintf(const wchar_t *__Restrict, ...)"}
	name += {"wscanf;int wscanf(const wchar_t *__Restrict, ...)"}
	name += {"vswprintf;int vswprintf(__Wchar_T *__Restrict, size_t, const wchar_t *__Restrict, __gh_va_list)"}
	name += {"vswscanf;int vswscanf(const wchar_t *__Restrict, const wchar_t *__Restrict, __gh_va_list)"}
	name += {"vwprintf;int vwprintf(const wchar_t *__Restrict, __gh_va_list)"}
	name += {"vwscanf;int vwscanf(const wchar_t *__Restrict, __gh_va_list)"}
	name += {"wcstold;long double wcstold(const wchar_t *__Restrict, wchar_t **__Restrict)"}
	name += {"wcstod;double wcstod(const wchar_t *__Restrict, wchar_t **__Restrict)"}
	name += {"wcstof;float wcstof(const wchar_t *__Restrict, wchar_t **__Restrict)"}
	name += {"wcstol;long wcstol(const wchar_t *__Restrict, wchar_t **__Restrict, int)"}
	name += {"wcstoul;unsigned long wcstoul(const wchar_t *__Restrict, wchar_t **__Restrict, int)"}
	name += {"wcstoll;long long wcstoll(const wchar_t *__Restrict, wchar_t **__Restrict, int)"}
	name += {"wcstoull;unsigned long long wcstoull(const wchar_t *__Restrict, wchar_t **__Restrict, int)"}
	name += {"wcscpy;wchar_t *wcscpy(__Wchar_T *__Restrict, const wchar_t *__Restrict)"}
	name += {"wcsncpy;wchar_t *wcsncpy(__Wchar_T *__Restrict, const wchar_t *__Restrict, size_t)"}
	name += {"wcscat;wchar_t *wcscat(__Wchar_T *__Restrict, const wchar_t *__Restrict)"}
	name += {"wcsncat;wchar_t *wcsncat(__Wchar_T *__Restrict, const wchar_t *__Restrict, size_t)"}
	name += {"wcscmp;int wcscmp(const wchar_t *, const wchar_t *)"}
	name += {"wcscoll;int wcscoll(const wchar_t *, const wchar_t *)"}
	name += {"wcsncmp;int wcsncmp(const wchar_t *, const wchar_t *, size_t)"}
	name += {"wcsxfrm;size_t wcsxfrm(__Wchar_T *__Restrict, const wchar_t *__Restrict, size_t)"}
	name += {"wcscspn;size_t wcscspn(const wchar_t *, const wchar_t *)"}
	name += {"wcsspn;size_t wcsspn(const wchar_t *, const wchar_t *)"}
	name += {"wcstok;wchar_t *wcstok(__Wchar_T *__Restrict, const wchar_t *__Restrict, wchar_t **__Restrict)"}
	name += {"wcslen;size_t wcslen(const wchar_t *)"}
	name += {"wcsftime;size_t wcsftime(__Wchar_T *__Restrict, size_t, const wchar_t *__Restrict, const struct tm *__Restrict)"}
	name += {"btowc;wint_t btowc(int)"}
	name += {"wctob;int wctob(__Wint_T)"}
	name += {"mbsinit;int mbsinit(const mbstate_t *)"}
	name += {"mbrlen;size_t mbrlen(const char *__Restrict, size_t, mbstate_t *__Restrict)"}
	name += {"mbrtowc;size_t mbrtowc(__Wchar_T *__Restrict, const char *__Restrict, size_t, mbstate_t *__Restrict)"}
	name += {"wcrtomb;size_t wcrtomb(char *__Restrict, wchar_t, mbstate_t *__Restrict)"}
	name += {"mbsrtowcs;size_t mbsrtowcs(__Wchar_T *__Restrict, const char **__Restrict, size_t, mbstate_t *__Restrict)"}
	name += {"wcsrtombs;size_t wcsrtombs(char *__Restrict, const wchar_t **__Restrict, size_t, mbstate_t *__Restrict)"}
	name += {"getwc;wint_t getwc(__File_Type *)"}
	name += {"getwchar;wint_t getwchar(void)"}
	name += {"putwc;wint_t putwc(__Wchar_T, __File_Type *)"}
	name += {"putwchar;wint_t putwchar(__Wchar_T)"}
	name += {"getwc_unlocked;wint_t getwc_unlocked(__File_Type *)"}
	name += {"putwc_unlocked;wint_t putwc_unlocked(__Wchar_T, __File_Type *)"}
	name += {"getwchar_unlocked;wint_t getwchar_unlocked(void)"}
	name += {"putwchar_unlocked;wint_t putwchar_unlocked(__Wchar_T)"}
	name += {"wmemchr;wchar_t *wmemchr(const wchar_t *, wchar_t, size_t)"}
	name += {"wcschr;wchar_t *wcschr(const wchar_t *, wchar_t)"}
	name += {"wcspbrk;wchar_t *wcspbrk(const wchar_t *, const wchar_t *)"}
	name += {"wcsrchr;wchar_t *wcsrchr(const wchar_t *, wchar_t)"}
	name += {"wcsstr;wchar_t *wcsstr(const wchar_t *, const wchar_t *)"}
	name += {"wmemchr;const wchar_t *wmemchr(const wchar_t *, wchar_t, size_t)"}
	name += {"wcschr;const wchar_t *wcschr(const wchar_t *, wchar_t)"}
	name += {"wcspbrk;const wchar_t *wcspbrk(const wchar_t *, const wchar_t *)"}
	name += {"wcsrchr;const wchar_t *wcsrchr(const wchar_t *, wchar_t)"}
	name += {"wcsstr;const wchar_t *wcsstr(const wchar_t *, const wchar_t *)"}
	name += {"getwc;wint_t getwc(__File_Type *__Fi)"}
	name += {"putwc;wint_t putwc(wchar_t __WC, __File_Type *__Fi)"}
	name += {"getwc_unlocked;wint_t getwc_unlocked(__File_Type *__Fi)"}
	name += {"putwc_unlocked;wint_t putwc_unlocked(wchar_t __WC, __File_Type *__Fi)"}
	name += {"getwchar;wint_t getwchar()"}
	name += {"putwchar;wint_t putwchar(wchar_t __WC)"}
	name += {"getwchar_unlocked;wint_t getwchar_unlocked()"}
	name += {"putwchar_unlocked;wint_t putwchar_unlocked(wchar_t __WC)"}
	name += {"wmemchr;wchar_t *wmemchr(wchar_t *__GHS_S, wchar_t __GHS_C, size_t __GHS_N)"}
	name += {"wcschr;wchar_t *wcschr(wchar_t *__GHS_S, wchar_t __GHS_C)"}
	name += {"wcspbrk;wchar_t *wcspbrk(wchar_t *__GHS_S, const wchar_t *__GHS_P)"}
	name += {"wcsrchr;wchar_t *wcsrchr(wchar_t *__GHS_S, wchar_t __GHS_C)"}
	name += {"wcsstr;wchar_t *wcsstr(wchar_t *__GHS_S, const wchar_t *__GHS_P)"}
	# From file ../../../../src/ansi/wctype.h
	name += {"wctype;wctype_t wctype(const char *)"}
	name += {"iswctype;int iswctype(__Wint_T, wctype_t)"}
	name += {"iswcntrl;int iswcntrl(__Wint_T)"}
	name += {"iswspace;int iswspace(__Wint_T)"}
	name += {"iswblank;int iswblank(__Wint_T)"}
	name += {"iswgraph;int iswgraph(__Wint_T)"}
	name += {"iswprint;int iswprint(__Wint_T)"}
	name += {"iswdigit;int iswdigit(__Wint_T)"}
	name += {"iswxdigit;int iswxdigit(__Wint_T)"}
	name += {"iswalnum;int iswalnum(__Wint_T)"}
	name += {"iswalpha;int iswalpha(__Wint_T)"}
	name += {"iswupper;int iswupper(__Wint_T)"}
	name += {"iswlower;int iswlower(__Wint_T)"}
	name += {"iswpunct;int iswpunct(__Wint_T)"}
	name += {"towupper;wint_t towupper(__Wint_T)"}
	name += {"towlower;wint_t towlower(__Wint_T)"}
	name += {"wctrans;wctrans_t wctrans(const char *)"}
	name += {"towctrans;wint_t towctrans(__Wint_T, wctrans_t)"}
	# From file ../../../../src/ansi/ghs_barrier.h
	# From file ../../../../src/ansi/ghs_valist.h
	# From file ../../../../src/ansi/ghs_str.h
	name += {"strlen;size_t strlen(const char *__GHS_CS)"}
	name += {"strchr;char *strchr(const char *__GHS_CS, int __GHS_M)"}
	name += {"strrchr;char *strrchr(const char *__GHS_CS, int __GHS_M)"}
	name += {"strcpy;char *strcpy(char *__GHS_R, const char *__GHS_CS)"}
	name += {"strncpy;char *strncpy(char *__GHS_R, const char *__GHS_CS, size_t __GHS_n)"}
	name += {"strcmp;int strcmp(const char *__GHS_CS1, const char *__GHS_CS2)"}
	name += {"strncmp;int strncmp(const char *__GHS_CS1, const char *__GHS_CS2, size_t __GHS_n)"}
	name += {"strcat;char *strcat(char *__GHS_R, const char *__GHS_CS)"}
	name += {"strncat;char *strncat(char *__GHS_R, const char *__GHS_CS, size_t __GHS_n)"}
	name += {"strstr;char *strstr(const char *__GHS_CS1, const char *__GHS_CS2)"}
	# From file ../../../../src/ansi/ghs_mem.h
	name += {"memchr;void *memchr(const void *__GHS_CV, int __GHS_M, size_t __GHS_n)"}
	name += {"memcmp;int memcmp(const void *__GHS_CV1, const void *__GHS_CV2, size_t __GHS_n)"}
	name += {"memmove;void *memmove(void *__GHS_R, const void *__GHS_CV, size_t __GHS_n)"}
	# From file ../../../../src/ansi/ghs_valist.h
    }
}
