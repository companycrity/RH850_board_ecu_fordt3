General Information
===================

Like the standard Python interpreter, the Python pane can execute normal Python
statements and scripts.

The Python pane mimics the behavior of the standard Python interpreter
interface. For example, it:
 * Changes the standard prompt "Python> " into "......  " (incomplete mode) 
   when the inputted Python statement block is incomplete.
 * Goes into incomplete mode for various reasons when the inputted statement is
   a block statement such as "for", "while", or "if".
 * Goes into incomplete mode when parenthesis pairs, including "()", "[]",
   and "{}", are unbalanced.
 * Goes into incomplete mode when a syntax element, such as a string or a doc
   string, is incomplete.
 * Runs inputted statements whenever the user inputs an empty line.
 * Runs inputted statements whenever the user inputs a line without
   indentation (excludes the above cases where the statements are incomplete).
 * ......

In addition to these behaviors, the Python pane has the following functions:

1. The Python pane supports syntax coloring and automatic indentation.

    Here are some hints for using the auto-indentation mechanism in the
    Python pane:
    * "Ctrl-i" indents the defined number of spaces (4 by default)
    * "Ctrl-shift-i" un-indents the defined number of spaces (4 by default)
    * Statements requiring indentation, such as "if", "while", and "for", are
      automatically indented the defined number of spaces (4 by default).
    * Tabs are properly indented.
    * Statements requiring indentation are automatically nested.
    * Indentations are automatically inherited (excludes pending strings and
      parentheses).

2. The command prompt displays line numbers for compound statement blocks
   containing multiple lines. If an error occurs on one of these lines, the
   Python interpreter reports the line number.

3. The keystroke "Ctrl-[Return]" executes Python statements while the Python 
   pane continues to prompt you for Python statements.

4. Any inputted line beginning with "$" is treated as a Python pane command and
   is executed immediately.
