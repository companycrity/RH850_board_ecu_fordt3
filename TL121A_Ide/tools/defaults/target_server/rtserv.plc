Placer 1.5
State
DebugOutput_RestoreDefaults = "                                               \
    $btnstDebugOutputDest.set(1) = 1;                                         \
/* For some reason it is necessary to undim a textfield before changing it's  */ \
/* value */                                                                   \
    $tfDebugOutputFile.dim = 0;                                               \
    $tfDebugOutputFile = DebugOutputFile;                                     \
    $btnDebugOutput.set = 0;                                                  \
    DebugOutput_handle_btnDebugOutput();                                      \
                                                                              \
                                                                              \
                                                                              \
"
DebugOutput_handle_btnDebugOutput = "                                         \
                                                                              \
  if( $btnDebugOutput.set == 1 ) {                                            \
    $btnstDebugOutputDest.dim  = 0;                                           \
                                                                              \
    if( $btnstDebugOutputDest.set(2) == 1 ) {                                 \
      $tfDebugOutputFile.dim        = 0;                                      \
      $btnDebugOutputChooseFile.dim = 0;                                      \
    } else {                                                                  \
      $tfDebugOutputFile.dim        = 1;                                      \
      $btnDebugOutputChooseFile.dim = 1;                                      \
    }                                                                         \
  } else {                                                                    \
    $btnstDebugOutputDest.dim     = 1;                                        \
    $tfDebugOutputFile.dim        = 1;                                        \
    $btnDebugOutputChooseFile.dim = 1;                                        \
  }                                                                           \
                                                                              \
                                                                              \
                                                                              \
"
DebugOutput_handle_btnDebugOutputChooseFile = "                               \
                                                                              \
    DebugOutputFile =                                                         \
      clitext( \"filedialog \\\"Select\\\" \\\"Write debug output to what file?\\\"\" ); \
    if( strlen( DebugOutputFile ) > 0 ) {                                     \
/* They didn't cancel, so change the thing */                                 \
        $tfDebugOutputFile = DebugOutputFile;                                 \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
DebugOutput_handle_btnstDebugOutputDest = "                                   \
                                                                              \
  if( $btnstDebugOutputDest.set(1) == 1 ) {                                   \
    $tfDebugOutputFile.dim        = 1;                                        \
    $btnDebugOutputChooseFile.dim = 1;                                        \
  } else {                                                                    \
    $tfDebugOutputFile.dim        = 0;                                        \
    $btnDebugOutputChooseFile.dim = 0;                                        \
  }                                                                           \
                                                                              \
                                                                              \
                                                                              \
"
DebugOutput_onCleanup = "                                                     \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
DebugOutput_onSetup = "                                                       \
  $btnDebugOutput.set           = 0;                                          \
  $btnstDebugOutputDest.set(1)  = 1;                                          \
  $btnstDebugOutputDest.dim     = 1;                                          \
                                                                              \
  $tfDebugOutputFile.dim        = 1;                                          \
  $btnDebugOutputChooseFile.dim = 1;                                          \
                                                                              \
                                                                              \
                                                                              \
"
OtherOptions_addArgs = "                                                      \
                                                                              \
    if( strlen( $tfOtherOptions ) > 0 ) {                                     \
        argsAccum = argsAccum | \" \" | $tfOtherOptions;                      \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
OtherOptions_onCleanup = "                                                    \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
OtherOptions_onSetup = "                                                      \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionEditor_eval_connection = "                                    \
                                                                              \
    $TCGUILIB_sane = \"0\";                                                   \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_string = $tfTargetName;                                         \
                                                                              \
    if( $btnEthernet.set == 1 &&                                              \
        STRINGLIB_count_tokens () <= 0) {                                     \
        alert \"Please specify a Target Name on the 'Connection' tab\";       \
        return;                                                               \
    }                                                                         \
                                                                              \
/* Check that there are no spaces in the input */                             \
    STRINGLIB_init();                                                         \
    STRINGLIB_stop_chars = \" \";                                             \
    STRINGLIB_string = $tfTargetName;                                         \
                                                                              \
    if ($btnEthernet.set == 1 &&                                              \
            STRINGLIB_count_tokens() > 1) {                                   \
        alert \"No spaces are allowed in the Target Name or Address field on the 'Connection' tab\"; \
        return;                                                               \
    }                                                                         \
                                                                              \
/* Check that there are no commas in the input, this was used for rtnserv */  \
    STRINGLIB_init();                                                         \
    STRINGLIB_stop_chars = \",\";                                             \
    STRINGLIB_string = $tfTargetName;                                         \
                                                                              \
    if ($btnEthernet.set == 1 &&                                              \
            STRINGLIB_count_tokens() > 1) {                                   \
        alert \"No commas are allowed in the Target Name or Address field on \" | \
              \"the 'Connection' tab. \\012\\012You cannot connect to multiple \" | \
              \"run-mode targets with a single connection. Use multiple \" |  \
              \"connections instead.\";                                       \
        return;                                                               \
    }                                                                         \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_string = $tfDebugOutputFile;                                    \
                                                                              \
    if( $btnDebugOutput.set == 1 &&                                           \
        $btnstDebugOutputDest.set(2) == 1 &&                                  \
        STRINGLIB_count_tokens () <= 0) {                                     \
        alert \"Please specify a file for debug logging on the 'Debug' tab\"; \
        return;                                                               \
    }                                                                         \
                                                                              \
    if ($btnSerial.set == 1) {                                                \
        STRINGLIB_init();                                                     \
        if( index( hostName, \"windows\" ) != -1 ) {                          \
            STRINGLIB_string = $pdSerialPortWindows;                          \
        } else {                                                              \
            STRINGLIB_string = $pdSerialPortUnix;                             \
        }                                                                     \
        if (STRINGLIB_count_tokens () <= 0) {                                 \
            alert \"Please specify a serial port on the 'Connection' tab\";   \
            return;                                                           \
        }                                                                     \
                                                                              \
        STRINGLIB_init();                                                     \
        STRINGLIB_string = $pdBaud;                                           \
        if (STRINGLIB_count_tokens () <= 0) {                                 \
            alert \"Please specify a baud rate on the 'Connection' tab\";     \
            return;                                                           \
        }                                                                     \
    }                                                                         \
                                                                              \
    $TCGUILIB_sane = \"1\";                                                   \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionEditor_handle_btnChooseTFTPLoadDir = "                        \
                                                                              \
    TFTPLoadDir =                                                             \
      clitext( \"directorydialog \\\"TFTP load from which directory?\\\"\" ); \
    if( strlen( TFTPLoadDir ) > 0 ) {                                         \
/* They didn't cancel, so change the thing */                                 \
        $tfTFTPLoadDir = TFTPLoadDir;                                         \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionEditor_handle_btnEthernet = "                                 \
                                                                              \
    $btnEthernet.set = 1;                                                     \
    $btnSerial.set   = 0;                                                     \
                                                                              \
    $txtTargetName.dim        = 0;                                            \
    $tfTargetName.dim         = 0;                                            \
    $txtTFTPLoadDir.dim       = 0;                                            \
    $tfTFTPLoadDir.dim        = 0;                                            \
    $btnChooseTFTPLoadDir.dim = 0;                                            \
                                                                              \
    $txtSerialPort.dim        = 1;                                            \
    $pdSerialPortWindows.dim  = 1;                                            \
    $pdSerialPortUnix.dim     = 1;                                            \
    $txtBaudRate.dim          = 1;                                            \
    $pdBaud.dim               = 1;                                            \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionEditor_handle_btnSerial = "                                   \
                                                                              \
    $btnEthernet.set = 0;                                                     \
    $btnSerial.set   = 1;                                                     \
                                                                              \
    $txtTargetName.dim        = 1;                                            \
    $tfTargetName.dim         = 1;                                            \
    $txtTFTPLoadDir.dim       = 1;                                            \
    $tfTFTPLoadDir.dim        = 1;                                            \
    $btnChooseTFTPLoadDir.dim = 1;                                            \
                                                                              \
    $txtSerialPort.dim        = 0;                                            \
    $pdSerialPortWindows.dim  = 0;                                            \
    $pdSerialPortUnix.dim     = 0;                                            \
    $txtBaudRate.dim          = 0;                                            \
    $pdBaud.dim               = 0;                                            \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionEditor_onCleanup = "                                          \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionEditor_onSetup = "                                            \
                                                                              \
    clitext( \"setpswindowname \\\"INDRT (rtserv) Connection Editor\\\"\" );  \
                                                                              \
    serverName  = \"rtserv\";                                                 \
    serverName2 = \"rtnserv\";                                                \
    hostName    = clitext( \"__gethostname\" );                               \
                                                                              \
    if( index( hostName, \"windows\" ) != -1 ) {                              \
      activate( 1 );                                                          \
    } else {                                                                  \
      activate( 2 );                                                          \
    }                                                                         \
                                                                              \
    DebugOutput_onSetup();                                                    \
    OtherOptions_onSetup();                                                   \
    SelectSerialPort_onSetup();                                               \
                                                                              \
    $pdBaud = \"<default>\";                                                  \
    $tfDebugOutputFile = \"rtserv.log\";                                      \
                                                                              \
    RTServConnectionEditor_handle_btnEthernet();                              \
                                                                              \
/* set the callbacks and properties the TCGUILIB wants */                     \
    $TCGUILIB_editor_dlg_name      = \"RTServConnectionEditor\";              \
    $TCGUILIB_editor_saveargs_fn   = \"RTServConnectionEditor_save_connection\"; \
    $TCGUILIB_editor_readargs_fn   = \"RTServConnectionEditor_read_connection\"; \
    $TCGUILIB_editor_evalargs_fn   = \"RTServConnectionEditor_eval_connection\"; \
    $TCGUILIB_statuswin_dlg_name   = \"RTServConnectionStatus\";              \
                                                                              \
/*hide(TCGUILIB_txtConnectFor); */                                            \
                                                                              \
    TCGUILIB_editor_onSetup();                                                \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionEditor_read_connection = "                                    \
                                                                              \
/*    STRINGLIB_msg = \"Reading connection\"; STRINGLIB_show_msg(); */        \
                                                                              \
    allArgs = $TCGUILIB_conargs;                                              \
                                                                              \
/* Set some defaults */                                                       \
                                                                              \
    log_specified     = 0;                                                    \
    serial_port_found = 0;                                                    \
                                                                              \
    DebugOutputFile = serverName | \".log\";                                  \
    DebugOutput_RestoreDefaults();                                            \
    SelectSerialPort_onSetup();                                               \
                                                                              \
    $tfTargetName.dim = 0;                                                    \
    $tfTargetName   = \"\";                                                   \
    $tfTFTPLoadDir.dim = 0;                                                   \
    $tfTFTPLoadDir  = \"\";                                                   \
    $tfOtherOptions = \"\";                                                   \
                                                                              \
    $btnSerial.set = 0;                                                       \
    $btnExcl.set    = 1;                                                      \
    $btnForceTFTP.set = 0;                                                    \
                                                                              \
    RTServConnectionEditor_handle_btnSerial();                                \
    $pdBaud = \"<default>\";                                                  \
                                                                              \
/* Trim server name from args.  I'm making this logic a little more */        \
/* complicated than it seems like it needs to be because I need to */         \
/* handle the possibility that the word \"rtserv\" or \"rtnserv\" */          \
/* appears in the connection string itself (for example, the name */          \
/* of the log file might be \"rtserv.log\") */                                \
    serverName1Pos = index (allArgs, serverName);                             \
    serverName2Pos = index (allArgs, serverName2);                            \
                                                                              \
                                                                              \
    if (serverName1Pos != -1 && serverName2Pos != -1) {                       \
/* Both strings appear... we should assume that the one that */               \
/* appears first is the correct one. */                                       \
        if (serverName1Pos < serverName2Pos) {                                \
            serverName2Pos = -1;                                              \
        } else {                                                              \
            serverName1Pos = -1;                                              \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    if (serverName1Pos != -1) {                                               \
/* This must be an rtserv connection (not an rtnserv connection) */           \
        index_after_server_name = serverName1Pos + strlen (serverName);       \
        allArgs = substr (allArgs, index_after_server_name,                   \
                          strlen (allArgs) - index_after_server_name);        \
                                                                              \
                                                                              \
    } else if (serverName2Pos != -1) {                                        \
/* This must be an rtnserv connection (not an rtserv connection) */           \
        index_after_server_name = serverName2Pos + strlen (serverName2);      \
        allArgs = substr (allArgs, index_after_server_name,                   \
                          strlen (allArgs) - index_after_server_name);        \
                                                                              \
                                                                              \
    } else {                                                                  \
/* We don't have a server name yet, so we must not have hit apply yet */      \
/* In this case the default is Ethernet */                                    \
/* Otherwise it is serial */                                                  \
        RTServConnectionEditor_handle_btnEthernet();                          \
    }                                                                         \
                                                                              \
                                                                              \
/* Set argv to first token */                                                 \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_string = allArgs;                                               \
    argv = STRINGLIB_get_next_token();                                        \
                                                                              \
/* Parse args */                                                              \
                                                                              \
    while( strlen( argv ) > 0 ) {                                             \
                                                                              \
/*    STRINGLIB_msg = \"argv: \" | argv; STRINGLIB_show_msg(); */             \
                                                                              \
        if( argv == \"-port\" ) {                                             \
            RTServConnectionEditor_handle_btnEthernet();                      \
                                                                              \
            argv = STRINGLIB_get_next_token();                                \
            if( index( argv, \"udp@\" ) == 0 ) {                              \
                $tfTargetName = substr( argv, 4, strlen( argv ) - 4 );        \
/* If a number follows the udp@ argument, it's the port */                    \
/* number, so append it on with a : */                                        \
                argv_peek = STRINGLIB_get_next_token_peek();                  \
                if( argv_peek != \"\" ) {                                     \
                    STRINGLIB_digit_string = argv_peek;                       \
                    if( STRINGLIB_is_digit() == 1 ) {                         \
                        $tfTargetName = $tfTargetName | \":\" | argv_peek;    \
/* Dispose of token we peeked if we used it */                                \
                        argv = STRINGLIB_get_next_token();                    \
                    }                                                         \
                }                                                             \
            }                                                                 \
        }                                                                     \
                                                                              \
        else if( argv == \"-t\" ) {                                           \
            RTServConnectionEditor_handle_btnEthernet();                      \
                                                                              \
            argv = STRINGLIB_get_next_token();                                \
            argv_peek = STRINGLIB_get_next_token_peek();                      \
/* If a number follows the -t argument, it's the port */                      \
/* number, so append it on with a : */                                        \
            if( argv_peek != \"\" ) {                                         \
                STRINGLIB_digit_string = argv_peek;                           \
                if( STRINGLIB_is_digit() == 1 ) {                             \
                    argv = argv | \":\" | argv_peek;                          \
/* Dispose of token we peeked if we used it */                                \
                    argv_peek = STRINGLIB_get_next_token();                   \
                }                                                             \
            }                                                                 \
            if( strlen( $tfTargetName ) > 0 ) {                               \
                $tfTargetName = $tfTargetName | \", \";                       \
            }                                                                 \
            $tfTargetName = $tfTargetName | argv;                             \
        }                                                                     \
                                                                              \
        else if( argv == \"-loaddir\" ) {                                     \
            $tfTFTPLoadDir.dim = 0;                                           \
            STRING_token = STRINGLIB_get_next_token();                        \
            STRING_save = STRINGLIB_string;                                   \
            STRINGLIB_string = STRING_token;                                  \
            $tfTFTPLoadDir = STRINGLIB_copy_and_strip_outer_quotes();         \
            STRINGLIB_string = STRING_save;                                   \
        }                                                                     \
                                                                              \
        else if( argv == \"-d7\" ) {                                          \
            $btnDebugOutput.set           = 1;                                \
            if( log_specified == 0 ) {                                        \
                $btnstDebugOutputDest.dim       = 0;                          \
                $btnstDebugOutputDest.set(1)    = 1;                          \
                $tfDebugOutputFile.dim        = 1;                            \
                $btnDebugOutputChooseFile.dim = 1;                            \
            }                                                                 \
        }                                                                     \
                                                                              \
        else if( argv == \"-log\" ) {                                         \
            log_specified = 1;                                                \
                                                                              \
            $btnDebugOutput.set           = 1;                                \
            $btnstDebugOutputDest.dim       = 0;                              \
            $btnstDebugOutputDest.set(2)    = 1;                              \
            $tfDebugOutputFile.dim        = 0;                                \
            $btnDebugOutputChooseFile.dim = 0;                                \
            STRING_token = STRINGLIB_get_next_token();                        \
            STRING_save = STRINGLIB_string;                                   \
            STRINGLIB_string = STRING_token;                                  \
            $tfDebugOutputFile = STRINGLIB_copy_and_strip_outer_quotes();     \
            STRINGLIB_string = STRING_save;                                   \
        }                                                                     \
                                                                              \
        else if( argv == \"-baud\" ) {                                        \
            $pdBaud = STRINGLIB_get_next_token();                             \
        }                                                                     \
                                                                              \
        else if( argv == \"-noexcl\" ) {                                      \
            $btnExcl.set = 0;                                                 \
        }                                                                     \
                                                                              \
        else if( argv == \"-forcetftp\" ) {                                   \
            $btnForceTFTP.set = 1;                                            \
        }                                                                     \
                                                                              \
        else if( argv == \"-serialdev\" ) {                                   \
            RTServConnectionEditor_handle_btnSerial();                        \
                                                                              \
            if( index( hostName, \"windows\" ) != -1 ) {                      \
                $pdSerialPortWindows = STRINGLIB_get_next_token();            \
            } else {                                                          \
                $pdSerialPortUnix    = STRINGLIB_get_next_token();            \
            }                                                                 \
        }                                                                     \
                                                                              \
        else {                                                                \
            if( strlen( $tfOtherOptions ) == 0 ) {                            \
                $tfOtherOptions = argv;                                       \
            } else {                                                          \
                $tfOtherOptions = $tfOtherOptions | \" \" | argv;             \
            }                                                                 \
        }                                                                     \
                                                                              \
/* Advance argv to next token */                                              \
                                                                              \
        argv = STRINGLIB_get_next_token();                                    \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionEditor_save_connection = "                                    \
                                                                              \
/*    STRINGLIB_msg = \"Saving connection\"; STRINGLIB_show_msg(); */         \
                                                                              \
    if( $btnEthernet.set == 1 ) {                                             \
                                                                              \
        argsAccum = serverName;                                               \
                                                                              \
        STRINGLIB_init();                                                     \
        STRINGLIB_string = $tfTFTPLoadDir;                                    \
                                                                              \
        if (STRINGLIB_count_tokens () > 0) {                                  \
            argsAccum = argsAccum | \" -loaddir \\\"\" | $tfTFTPLoadDir | \"\\\"\"; \
        }                                                                     \
                                                                              \
/* only accept one token */                                                   \
        STRINGLIB_init();                                                     \
        STRINGLIB_string = $tfTargetName;                                     \
        STRINGLIB_stop_chars = \" ,\";                                        \
        $tfTargetName = STRINGLIB_get_next_token ();                          \
                                                                              \
/* Look for port number, if any */                                            \
        colon_index = index( $tfTargetName, \":\" );                          \
        if( colon_index != -1 ) {                                             \
/* Get the base hostname */                                                   \
            udpname = substr( $tfTargetName, 0, colon_index );                \
/* Get the port number */                                                     \
            portnum = substr( $tfTargetName, colon_index+1,                   \
                             strlen( $tfTargetName ) - (colon_index+1) );     \
            argsAccum = argsAccum | \" -port udp@\" | udpname | \" \" | portnum; \
        } else                                                                \
            argsAccum = argsAccum | \" -port udp@\" | $tfTargetName;          \
                                                                              \
    } else {                                                                  \
        argsAccum = serverName;                                               \
    }                                                                         \
                                                                              \
    if( $btnDebugOutput.set == 1 ) {                                          \
        argsAccum = argsAccum | \" -d7\";                                     \
        if( $btnstDebugOutputDest.set(2) == 1 ) {                             \
            argsAccum = argsAccum | \" -log=\\\"\" | $tfDebugOutputFile | \"\\\"\"; \
        }                                                                     \
    }                                                                         \
                                                                              \
    if( $btnSerial.set == 1 ) {                                               \
                                                                              \
        if( $pdSerialPortWindows != \"<default>\" ) {                         \
            argsAccum = argsAccum | \" -serialdev \" | $pdSerialPortWindows;  \
        } else if( $pdSerialPortUnix != \"<default>\" ) {                     \
            argsAccum = argsAccum | \" -serialdev \" | $pdSerialPortUnix;     \
        }                                                                     \
        if( $pdBaud != \"<default>\" ) {                                      \
            argsAccum = argsAccum | \" -baud \" | $pdBaud;                    \
        }                                                                     \
    }                                                                         \
                                                                              \
    if( $btnExcl.set == 0 ) {                                                 \
        argsAccum = argsAccum | \" -noexcl\";                                 \
    }                                                                         \
                                                                              \
    if( $btnForceTFTP.set == 1 ) {                                            \
        argsAccum = argsAccum | \" -forcetftp\";                              \
    }                                                                         \
                                                                              \
/* Add Other Options last */                                                  \
                                                                              \
    if( strlen( $tfOtherOptions ) > 0 ) {                                     \
        argsAccum = argsAccum | \" \" | $tfOtherOptions;                      \
    }                                                                         \
                                                                              \
    $TCGUILIB_conargs = argsAccum;                                            \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionStatus_eval_sane = "                                          \
                                                                              \
    TCGUILIB_edit_if_not_sane ();                                             \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionStatus_eval_start = "                                         \
                                                                              \
    TCGUILIB_report_messages_from_connect ();                                 \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionStatus_eval_stop = "                                          \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionStatus_onCleanup = "                                          \
                                                                              \
    TCGUILIB_statuswin_onCleanup();                                           \
                                                                              \
                                                                              \
                                                                              \
"
RTServConnectionStatus_onSetup = "                                            \
                                                                              \
/* set the callbacks and properties the TCGUILIB wants */                     \
    $TCGUILIB_editor_dlg_name       = \"RTServConnectionEditor\";             \
    $TCGUILIB_statuswin_dlg_name    = \"RTServConnectionStatus\";             \
    $TCGUILIB_analyzestop_fn        = \"RTServConnectionStatus_eval_stop\";   \
    $TCGUILIB_analyzestart_fn       = \"RTServConnectionStatus_eval_start\";  \
    $TCGUILIB_statuswin_evalargs_fn = \"RTServConnectionStatus_eval_sane\";   \
                                                                              \
    TCGUILIB_statuswin_onSetup();                                             \
                                                                              \
    dismiss (0);                                                              \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_copy_and_escape_string = "                                          \
                                                                              \
    STRINGLIB_index = 0;                                                      \
    STRINGLIB_length = strlen( STRINGLIB_string );                            \
    STRINGLIB_escaped_string = \"\";                                          \
                                                                              \
    while( STRINGLIB_index < STRINGLIB_length ) {                             \
                                                                              \
/* Get one character at index from string */                                  \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_string, STRINGLIB_index, 1 ); \
                                                                              \
/* If quote marks found, insert escaped quote mark in copied string */        \
/* Otherwise, just copy in character */                                       \
                                                                              \
      if( index( STRINGLIB_single_char, \"\\\"\" ) != -1 ) {                  \
                                                                              \
        STRINGLIB_escaped_string = STRINGLIB_escaped_string | \"\\\\\\\"\";   \
      } else {                                                                \
                                                                              \
        STRINGLIB_escaped_string =                                            \
          STRINGLIB_escaped_string | STRINGLIB_single_char;                   \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_index = STRINGLIB_index + 1;                                  \
    }                                                                         \
                                                                              \
    return STRINGLIB_escaped_string;                                          \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_copy_and_strip_outer_quotes = "                                     \
    STRINGLIB_stripped_string = STRINGLIB_string;                             \
    STRING_len = strlen(STRINGLIB_stripped_string);                           \
    STRING_first = substr(STRINGLIB_stripped_string, 0, 1);                   \
    STRING_last  = substr(STRINGLIB_stripped_string, STRING_len - 1, 1);      \
                                                                              \
    if ( index(STRING_first, \"\\\"\") != -1 ) {                              \
        STRINGLIB_stripped_string =                                           \
            substr(STRINGLIB_stripped_string, 1, STRING_len - 1);             \
        STRING_len = strlen(STRINGLIB_stripped_string);                       \
    }                                                                         \
    if ( index(STRING_last, \"\\\"\") != -1 ) {                               \
        STRINGLIB_stripped_string =                                           \
            substr(STRINGLIB_stripped_string, 0, STRING_len - 1);             \
    }                                                                         \
                                                                              \
    return STRINGLIB_stripped_string;                                         \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_count_tokens = "                                                    \
                                                                              \
    STRINGLIB_temp_string = \" \" | STRINGLIB_string;                         \
    STRINGLIB_string = STRINGLIB_temp_string;                                 \
    STRINGLIB_get_next_token();                                               \
    STRINGLIB_num_tokens = 0;                                                 \
                                                                              \
    while( strlen( STRINGLIB_token ) > 0 ) {                                  \
                                                                              \
      STRINGLIB_num_tokens = STRINGLIB_num_tokens + 1;                        \
      STRINGLIB_get_next_token();                                             \
    }                                                                         \
                                                                              \
    return STRINGLIB_num_tokens;                                              \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_next_token = "                                                  \
                                                                              \
    STRINGLIB_get_next_token_start();                                         \
    STRINGLIB_get_next_token_stop();                                          \
                                                                              \
    STRINGLIB_token_length = STRINGLIB_token_stop - STRINGLIB_token_start;    \
                                                                              \
    if( STRINGLIB_token_length > 0 ) {                                        \
                                                                              \
      STRINGLIB_token = substr( STRINGLIB_string, STRINGLIB_token_start,      \
                                STRINGLIB_token_length );                     \
      STRINGLIB_string_after_token = substr( STRINGLIB_string,                \
                                             STRINGLIB_token_stop + 1,        \
                                             strlen( STRINGLIB_string ) -     \
                                             STRINGLIB_token_stop );          \
      STRINGLIB_string = STRINGLIB_string_after_token;                        \
    } else {                                                                  \
                                                                              \
      STRINGLIB_token = \"\";                                                 \
      STRINGLIB_string_after_token = \"\";                                    \
    }                                                                         \
                                                                              \
    return STRINGLIB_token;                                                   \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_next_token_peek = "                                             \
                                                                              \
    STRINGLIB_get_next_token_start();                                         \
    STRINGLIB_get_next_token_stop();                                          \
                                                                              \
    STRINGLIB_token_length_peek = STRINGLIB_token_stop - STRINGLIB_token_start; \
                                                                              \
    if( STRINGLIB_token_length_peek > 0 ) {                                   \
        STRINGLIB_token_peek = substr( STRINGLIB_string, STRINGLIB_token_start, \
                                STRINGLIB_token_length_peek );                \
    } else {                                                                  \
        STRINGLIB_token_peek = \"\";                                          \
    }                                                                         \
                                                                              \
    return STRINGLIB_token_peek;                                              \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_next_token_start = "                                            \
                                                                              \
    STRINGLIB_quote_open = 0;                                                 \
    STRINGLIB_accepted_char_found = 0;                                        \
    STRINGLIB_length = strlen( STRINGLIB_string );                            \
    STRINGLIB_index  = 0;                                                     \
                                                                              \
    while( STRINGLIB_index < STRINGLIB_length ) {                             \
                                                                              \
/* Get one character at index from string */                                  \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_string, STRINGLIB_index, 1 ); \
                                                                              \
/* Check for quote marks */                                                   \
                                                                              \
      if( index( STRINGLIB_single_char, \"\\\"\" ) != -1 ) {                  \
                                                                              \
          STRINGLIB_quote_open = 1;                                           \
          STRINGLIB_accepted_char_found = 1;                                  \
          break;                                                              \
      }                                                                       \
                                                                              \
/* Check if it is not in the stop char string */                              \
                                                                              \
      if( index( STRINGLIB_stop_chars,                                        \
                 text( STRINGLIB_single_char ) ) == -1 ) {                    \
                                                                              \
        STRINGLIB_accepted_char_found = 1;                                    \
        break;                                                                \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_index = STRINGLIB_index + 1;                                  \
    }                                                                         \
                                                                              \
    if( STRINGLIB_accepted_char_found == 1 ) {                                \
                                                                              \
      STRINGLIB_token_start = STRINGLIB_index;                                \
    } else {                                                                  \
                                                                              \
      STRINGLIB_token_start = -1;                                             \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_next_token_stop = "                                             \
                                                                              \
    STRINGLIB_stop_char_found = 0;                                            \
    STRINGLIB_accepted_char_found = 0;                                        \
    STRINGLIB_length = strlen( STRINGLIB_string );                            \
                                                                              \
    if( STRINGLIB_token_start == -1 ) {                                       \
                                                                              \
      STRINGLIB_token_stop = -1;                                              \
      return;                                                                 \
    }                                                                         \
                                                                              \
    STRINGLIB_index  = STRINGLIB_token_start + 1;                             \
    while( STRINGLIB_index < STRINGLIB_length ) {                             \
                                                                              \
/* Get one character at index from string */                                  \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_string, STRINGLIB_index, 1 ); \
                                                                              \
/* If quote marks found, toggle quote open */                                 \
                                                                              \
      if( index( STRINGLIB_single_char, \"\\\"\" ) != -1 ) {                  \
                                                                              \
        if( STRINGLIB_quote_open == 0 ) {                                     \
                                                                              \
          STRINGLIB_quote_open = 1;                                           \
        } else {                                                              \
                                                                              \
          STRINGLIB_quote_open = 0;                                           \
        }                                                                     \
      }                                                                       \
                                                                              \
/* Check character against stop char string */                                \
                                                                              \
      if( index( STRINGLIB_stop_chars,                                        \
                 text( STRINGLIB_single_char ) ) != -1 ) {                    \
                                                                              \
        STRINGLIB_stop_char_found = 1;                                        \
                                                                              \
        if( STRINGLIB_quote_open == 0 ) {                                     \
                                                                              \
          break;                                                              \
        }                                                                     \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_index = STRINGLIB_index + 1;                                  \
    }                                                                         \
                                                                              \
    STRINGLIB_token_stop = STRINGLIB_index;                                   \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_get_number = "                                                      \
    STRINGLIB_number = 0;                                                     \
    STRINGLIB_digit_index = 0;                                                \
    STRINGLIB_digit_length = strlen( STRINGLIB_digit_string );                \
                                                                              \
    while( STRINGLIB_digit_index < STRINGLIB_digit_length ) {                 \
                                                                              \
/* Get one character at index from digit string */                            \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_digit_string,                 \
                                      STRINGLIB_digit_index, 1 );             \
                                                                              \
/* This is painful. */                                                        \
                                                                              \
      if( index(STRINGLIB_single_char, \"0\" ) != -1 ) {                      \
        STRINGLIB_temp_number = 0;                                            \
      } else if( index(STRINGLIB_single_char, \"1\" ) != -1 ) {               \
        STRINGLIB_temp_number = 1;                                            \
      } else if( index(STRINGLIB_single_char, \"2\" ) != -1 ) {               \
        STRINGLIB_temp_number = 2;                                            \
      } else if( index(STRINGLIB_single_char, \"3\" ) != -1 ) {               \
        STRINGLIB_temp_number = 3;                                            \
      } else if( index(STRINGLIB_single_char, \"4\" ) != -1 ) {               \
        STRINGLIB_temp_number = 4;                                            \
      } else if( index(STRINGLIB_single_char, \"5\" ) != -1 ) {               \
        STRINGLIB_temp_number = 5;                                            \
      } else if( index(STRINGLIB_single_char, \"6\" ) != -1 ) {               \
        STRINGLIB_temp_number = 6;                                            \
      } else if( index(STRINGLIB_single_char, \"7\" ) != -1 ) {               \
        STRINGLIB_temp_number = 7;                                            \
      } else if( index(STRINGLIB_single_char, \"8\" ) != -1 ) {               \
        STRINGLIB_temp_number = 8;                                            \
      } else if( index(STRINGLIB_single_char, \"9\" ) != -1 ) {               \
        STRINGLIB_temp_number = 9;                                            \
      } else {                                                                \
        return -1;                                                            \
      }                                                                       \
                                                                              \
      STRINGLIB_number = (STRINGLIB_number * 10) + STRINGLIB_temp_number;     \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_digit_index = STRINGLIB_digit_index + 1;                      \
    }                                                                         \
    return STRINGLIB_number;                                                  \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_init = "                                                            \
                                                                              \
    STRINGLIB_string = \"Empty STRINGLIB_string\";                            \
    STRINGLIB_string_after_token = \"Empty STRINGLIB_string_after_token\";    \
    STRINGLIB_escaped_string = \"Empty STRINGLIB_escaped_string\";            \
    STRINGLIB_stripped_string = \"Empty STRINGLIB_stripped_string\";          \
    STRINGLIB_token = \"Empty STRINGLIB_token\";                              \
    STRINGLIB_token_peek = \"Empty STRINGLIB_token_peek\";                    \
    STRINGLIB_single_char = \"Empty STRINGLIB_single_char\";                  \
    STRINGLIB_digit_string = \"Empty STRINGLIB_digit_string\";                \
    STRINGLIB_stop_chars = \" \";                                             \
    STRINGLIB_token_start = 0;                                                \
    STRINGLIB_token_stop = 0;                                                 \
    STRINGLIB_quote_open = 0;                                                 \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_is_digit = "                                                        \
                                                                              \
    STRINGLIB_digit_index = 0;                                                \
    STRINGLIB_digit_length = strlen( STRINGLIB_digit_string );                \
                                                                              \
    while( STRINGLIB_digit_index < STRINGLIB_digit_length ) {                 \
                                                                              \
/* Get one character at index from digit string */                            \
                                                                              \
      STRINGLIB_single_char = substr( STRINGLIB_digit_string,                 \
                                      STRINGLIB_digit_index, 1 );             \
                                                                              \
/* If character is not a digit, return 0 */                                   \
                                                                              \
      if( index( STRINGLIB_single_char, \"x\" ) != -1 ||                      \
          index( STRINGLIB_single_char, \"X\" ) != -1 ) {                     \
                                                                              \
        if( STRINGLIB_digit_index != 1 ) {                                    \
                                                                              \
          return 0;                                                           \
        } else if( substr( STRINGLIB_digit_string, 0, 1 ) != \"0\" ) {        \
                                                                              \
          return 0;                                                           \
        }                                                                     \
      } else if( index( STRINGLIB_single_char, \"0\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"1\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"2\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"3\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"4\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"5\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"6\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"7\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"8\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"9\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"+\" ) == -1 &&               \
                 index( STRINGLIB_single_char, \"-\" ) == -1 ) {              \
                                                                              \
        return 0;                                                             \
      }                                                                       \
                                                                              \
/* Increment index */                                                         \
                                                                              \
      STRINGLIB_digit_index = STRINGLIB_digit_index + 1;                      \
    }                                                                         \
                                                                              \
/* If we got here, all characters in digit_string are digits */               \
                                                                              \
    return 1;                                                                 \
                                                                              \
                                                                              \
                                                                              \
"
STRINGLIB_show_msg = "                                                        \
                                                                              \
    cli( \"echo \" | STRINGLIB_msg );                                         \
                                                                              \
                                                                              \
                                                                              \
"
SelectSerialPort_onCleanup = "                                                \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
SelectSerialPort_onSetup = "                                                  \
  $pdSerialPortWindows.dim = 0;                                               \
  $pdSerialPortWindows = \"<default>\";                                       \
  $pdSerialPortUnix.dim = 0;                                                  \
  $pdSerialPortUnix    = \"<default>\";                                       \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_edit_if_not_sane = "                                                 \
                                                                              \
    if (index ($TCGUILIB_mode, \"goifok\") != -1) {                           \
        theMode = \" \\\"noconnect show_sanity_errors\\\" \";                 \
    } else {                                                                  \
        theMode = \" noconnect \";                                            \
    }                                                                         \
                                                                              \
    if ($TCGUILIB_sane == \"0\") {                                            \
/* we should force the user to edit the thing */                              \
        clitext (\"dialog \" | $TCGUILIB_editor_dlg_name |                    \
                 theMode | $TCGUILIB_CID | \"\");                             \
        TCGUILIB_read_sane ();                                                \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnApply = "                           \
                                                                              \
/* Ignore blank names */                                                      \
    if (strlen($TCGUILIB_tfName) <= 0) {                                      \
        alert (\"You must specify a name for the Connection Method.\");       \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_sane = \"0\";                                               \
                                                                              \
/* Let the client choose whether or not you can save */                       \
        cli (\"callpsfunction \" | $TCGUILIB_editor_evalargs_fn);             \
        if ($TCGUILIB_sane == \"1\") {                                        \
                                                                              \
            TCGUILIB_editor_save_connection ();                               \
            TCGUILIB_editor_read_connection ();                               \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnCancel = "                          \
                                                                              \
    dismiss (0);                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnConnect = "                         \
                                                                              \
                                                                              \
/* Ignore blank names */                                                      \
    if (strlen($TCGUILIB_tfName) <= 0) {                                      \
        alert (\"You must specify a name for the Connection Method.\");       \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_sane = \"0\";                                               \
                                                                              \
/* Let the client choose whether or not you can save */                       \
        cli (\"callpsfunction \" | $TCGUILIB_editor_evalargs_fn);             \
        if ($TCGUILIB_sane == \"1\") {                                        \
                                                                              \
/* only dismiss if the client thinks the arguments are OK */                  \
            TCGUILIB_editor_save_connection () ;                              \
            clitext (\"connection statuswin \" | $TCGUILIB_CID |              \
                     \" 0 \\\"goifok closeifstarted\\\"\") ;                  \
            dismiss (0);                                                      \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnOK = "                              \
                                                                              \
/* Ignore blank names */                                                      \
    if (strlen($TCGUILIB_tfName) <= 0) {                                      \
        alert (\"You must specify a name for the Connection Method.\");       \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_sane = \"0\";                                               \
                                                                              \
/* Let the client choose whether or not you can save */                       \
        cli (\"callpsfunction \" | $TCGUILIB_editor_evalargs_fn);             \
        if ($TCGUILIB_sane == \"1\") {                                        \
                                                                              \
            TCGUILIB_editor_save_connection ();                               \
            dismiss(0);                                                       \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_footer_handle_TCGUILIB_btnRevert = "                          \
                                                                              \
    TCGUILIB_editor_read_connection ();                                       \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_handle_TCGUILIB_btnLogging = "                         \
                                                                              \
    $TCGUILIB_tfLogFilename.dim = !($TCGUILIB_btnLogging.set);                \
    $TCGUILIB_btnsLogFileChooser.dim(1) = !($TCGUILIB_btnLogging.set);        \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_handle_choose_logfile = "                              \
                                                                              \
    LogFile =                                                                 \
      clitext( \"filedialog \\\"Select\\\" \\\"Use which log file?\\\"\" );   \
    if( strlen( LogFile ) > 0 ) {                                             \
/* They didn't cancel, so change the thing */                                 \
        $TCGUILIB_tfLogFilename = LogFile;                                    \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_handle_choose_script = "                               \
                                                                              \
    SetupScriptFile =                                                         \
      clitext( \"filedialog \\\"Select\\\" \\\"Use which setup script?\\\" -preset \\\"ScriptFiles\\\"\" ); \
    if( strlen( SetupScriptFile ) > 0 ) {                                     \
/* They didn't cancel, so change the thing */                                 \
        $tfSetupScript = SetupScriptFile;                                     \
                                                                              \
/* [patmac] Mon Mar 26 15:24:20 2007 Fix for J#MULTI-20927 */                 \
/* Automatically adjust the setup script type to the appropriate format */    \
/* based on the setup script file's suffix. */                                \
            if (strlen($tfSetupScript) >= 4 &&                                \
                substr($tfSetupScript, strlen($tfSetupScript)-4, 4) == \".mbs\") { \
            $bsSetupScript.set(1) = 1;                                        \
        } else if (strlen($tfSetupScript) >= 4 &&                             \
                substr($tfSetupScript, strlen($tfSetupScript)-4, 4) == \".dbs\") { \
            $bsSetupScript.set(2) = 1;                                        \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_handle_edit_script = "                                 \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MAJOR_VERSION)\"); \
    major_ver = STRINGLIB_get_number();                                       \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MINOR_VERSION)\"); \
    minor_ver = STRINGLIB_get_number();                                       \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MICRO_VERSION)\"); \
    micro_ver = STRINGLIB_get_number();                                       \
                                                                              \
    useScriptPathCmd = \"0\";                                                 \
                                                                              \
                                                                              \
    if (major_ver == -1 && minor_ver == -1 && micro_ver == -1) {              \
/* Unable to determine any version information.  Fallback to checking if */   \
/* the rominithbp command, added after 5.0.5, exists. */                      \
        STRINGLIB_init();                                                     \
        STRINGLIB_string = clitext(\"rominithbp\");                           \
        if (index (STRINGLIB_string, \"-setup\") != -1) {                     \
/* The command exists. */                                                     \
            useScriptPathCmd = \"1\";                                         \
            major_ver = 5;                                                    \
        } else {                                                              \
/* The command didn't exist.  Look for the __editnewprocess command. */       \
/* It was added for MULTI 5. */                                               \
            STRINGLIB_init();                                                 \
            STRINGLIB_string = clitext(\"__editnewprocess\");                 \
            if (index (STRINGLIB_string, \"filename\") != -1) {               \
/* The command exists. */                                                     \
                 major_ver = 5;                                               \
            }                                                                 \
        }                                                                     \
    } else if (major_ver >= 6 || (major_ver == 5 && (minor_ver > 0 || micro_ver > 5  || (minor_ver == 0 && micro_ver == 0)))) { \
        useScriptPathCmd = \"1\";                                             \
    }                                                                         \
                                                                              \
    if( $tfSetupScript != \"\" && index( $tfSetupScript, \"\\\"\" ) != -1 ) { \
/* Limitation: can't edit setup scripts containing a double-quote */          \
/* character */                                                               \
        alert(\"Cannot edit a setup script file from a path containing a \\\" character.\"); \
        return;                                                               \
    }                                                                         \
                                                                              \
    if (major_ver < 5) {                                                      \
        alert (\"Editing the target setup script from this window is not supported by this version of MULTI.\"); \
        $TCGUILIB_btnsSetupScript.dim(1) = 1;                                 \
    } else if ($tfSetupScript != \"\" && useScriptPathCmd == \"1\") {         \
        scriptFile = clitext (\"connection report \" | $TCGUILIB_CID | \" scriptpath \\\"\" | $tfSetupScript | \"\\\"\"); \
        clitext( \"__editnewprocess \\\"\" | scriptFile | \"\\\"\");          \
    } else if ($tfSetupScript != \"\") {                                      \
        ConFile = clitext (\"connection report \" | $TCGUILIB_CID | \" dir\"); \
           clitext( \"__editnewprocess \\\"\" | $tfSetupScript | \"\\\" \\\"\" | ConFile | \"\\\"\" ); \
    } else {                                                                  \
        clitext( \"__editnewprocess untitled.mbs\" );                         \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_header_no_script_handle_TCGUILIB_btnLogging = "               \
                                                                              \
    $TCGUILIB_tfLogFilename.dim = !($TCGUILIB_btnLogging.set);                \
    $TCGUILIB_btnsLogFileChooser.dim(1) = !($TCGUILIB_btnLogging.set);        \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_onCleanup = "                                                 \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_onSetup = "                                                   \
                                                                              \
    $TCGUILIB_mode = %1;                                                      \
    $TCGUILIB_CID  = %2;                                                      \
                                                                              \
    if (index ($TCGUILIB_mode, \"allowconnect\") != -1 ||                     \
        index ($TCGUILIB_mode, \"allowConnect\") != -1) {                     \
        $TCGUILIB_btnConnect.dim = 0;                                         \
    } else {                                                                  \
        $TCGUILIB_btnConnect.dim = 1;                                         \
    }                                                                         \
                                                                              \
    if (strlen($TCGUILIB_editor_legacyscripts) <= 0 ||                        \
        ($TCGUILIB_editor_legacyscripts == \"0\")) {                          \
        $bsSetupScript.set(1) = 1;                                            \
        $bsSetupScript.dim(2) = 1;                                            \
    }                                                                         \
                                                                              \
    TCGUILIB_editor_read_connection ();                                       \
                                                                              \
    if (index ($TCGUILIB_mode, \"show_sanity_errors\") != -1 ||               \
        index ($TCGUILIB_mode, \"eval_sanity\") != -1) {                      \
        cli (\"callpsfunction \" | $TCGUILIB_editor_evalargs_fn);             \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_read_connection = "                                           \
                                                                              \
    $TCGUILIB_tfType.dim    = 0;                                              \
    $TCGUILIB_tfCommand.dim = 0;                                              \
    $TCGUILIB_tfCommand = clitext (\"connection report \" |                   \
                                   $TCGUILIB_CID | \" fullcmd\");             \
    $TCGUILIB_tfType    = clitext (\"connection report \" |                   \
                                   $TCGUILIB_CID | \" type\");                \
    $TCGUILIB_tfType.dim    = 1;                                              \
    $TCGUILIB_tfCommand.dim = 1;                                              \
                                                                              \
                                                                              \
    $TCGUILIB_tfName    = clitext (\"connection report \" |                   \
                                   $TCGUILIB_CID | \" name\");                \
    $TCGUILIB_conargs   = clitext (\"connection report \" |                   \
                                   $TCGUILIB_CID | \" args\");                \
    $TCGUILIB_SetupScript = clitext (\"connection report \" |                 \
                                   $TCGUILIB_CID | \" setupscript\");         \
                                                                              \
/* read logging information */                                                \
    logging = clitext (\"connection report \" |                               \
                       $TCGUILIB_CID | \" logging\");                         \
    if (index (logging, \"yes\") != -1) {                                     \
        $TCGUILIB_btnLogging.set = 1;                                         \
        $TCGUILIB_tfLogFilename.dim = 0;                                      \
                                                                              \
        $TCGUILIB_tfLogFilename = clitext (\"connection report \" |           \
                                           $TCGUILIB_CID | \" logfile\");     \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_btnLogging.set    = 0;                                      \
        $TCGUILIB_tfLogFilename.dim = 0;                                      \
        $TCGUILIB_tfLogFilename     = \"\";                                   \
        $TCGUILIB_tfLogFilename.dim = 1;                                      \
    }                                                                         \
                                                                              \
    $TCGUILIB_btnsLogFileChooser.dim(1) = !($TCGUILIB_btnLogging.set);        \
                                                                              \
/* Read setup script information */                                           \
    $tfSetupScript = \"\";                                                    \
    if (strlen($TCGUILIB_SetupScript) > 0) {                                  \
        $tfSetupScript = $TCGUILIB_SetupScript;                               \
        $bsSetupScript.set(1) = 1;                                            \
    }                                                                         \
                                                                              \
/* Call the client dialog's read function so that all of the */               \
/* target-specific widgets will get set correctly from _conargs. */           \
                                                                              \
    cli (\"callpsfunction \" | $TCGUILIB_editor_readargs_fn);                 \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_editor_save_connection = "                                           \
                                                                              \
    clitext (\"connection change \" | $TCGUILIB_CID | \" name \\\"\" |        \
             $TCGUILIB_tfName | \"\\\"\");                                    \
                                                                              \
/* save the logging state */                                                  \
    if ($TCGUILIB_btnLogging.set) {                                           \
        clitext (\"connection change \" | $TCGUILIB_CID | \" log yes \\\"\" | \
                 $TCGUILIB_tfLogFilename | \"\\\"\");                         \
                                                                              \
    } else {                                                                  \
        clitext (\"connection change \" | $TCGUILIB_CID | \" log no \\\"\" |  \
                 $TCGUILIB_tfLogFilename | \"\\\"\");                         \
    }                                                                         \
                                                                              \
/* Call the client dialog's save function so that _conargs will get */        \
/* the argument line that I want to save. */                                  \
                                                                              \
    $TCGUILIB_SetupScript = \"\";                                             \
    cli (\"callpsfunction \" | $TCGUILIB_editor_saveargs_fn);                 \
                                                                              \
    if ($bsSetupScript.set(1) == 1 &&                                         \
        strlen( $tfSetupScript ) > 0) {                                       \
        STRINGLIB_init();                                                     \
        STRINGLIB_string = $tfSetupScript;                                    \
                                                                              \
        if (STRINGLIB_count_tokens () > 0) {                                  \
            $TCGUILIB_SetupScript = $tfSetupScript;                           \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    clitext (\"connection change \" | $TCGUILIB_CID | \" args \\\"\" |        \
             escapify($TCGUILIB_conargs) | \"\\\"\");                         \
                                                                              \
/* save the multi language setup script name */                               \
    if (strlen($TCGUILIB_SetupScript) > 0) {                                  \
        clitext (\"connection change \" | $TCGUILIB_CID | \" setupscript \\\"\" | \
                 escapify($TCGUILIB_SetupScript) | \"\\\"\");                 \
    } else {                                                                  \
        clitext (\"connection change \" | $TCGUILIB_CID | \" setupscript \\\"\\\"\"); \
    }                                                                         \
                                                                              \
                                                                              \
/* MULTI 5 ignores the mode, so clear it. */                                  \
    STRINGLIB_init();                                                         \
    STRINGLIB_string = clitext(\"__debugFlag 2088\");                         \
    if (index (STRINGLIB_string, \"= on\") != -1) {                           \
        clitext (\"connection change \" | $TCGUILIB_CID | \" mode \\\"\\\"\"); \
    }                                                                         \
                                                                              \
    clitext (\"connection change \" | $TCGUILIB_CID | \" sane yes\");         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_eval_sane = "                                                        \
                                                                              \
    $TCGUILIB_conargs = clitext (\"connection report \" |                     \
                                 $TCGUILIB_CID | \" args\");                  \
                                                                              \
/* call the user's evaluation function and see what they said */              \
    cli (\"callpsfunction \" | $TCGUILIB_statuswin_evalargs_fn | \"\");       \
                                                                              \
                                                                              \
    if ($TCGUILIB_sane == \"1\") {                                            \
        clitext (\"connection change \" | $TCGUILIB_CID | \" sane yes\");     \
    } else {                                                                  \
        clitext (\"connection change \" | $TCGUILIB_CID | \" sane no\");      \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_handle_connectionChange = "                                          \
    TCGUILIB_read_sane ();                                                    \
    TCGUILIB_read_started ();                                                 \
                                                                              \
    TCGUILIB_eval_sane ();                                                    \
                                                                              \
    TCGUILIB_read_sane ();                                                    \
    TCGUILIB_read_started ();                                                 \
    TCGUILIB_read_logged ();                                                  \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_logging_dialog_handle_TCGUILIB_btnCancel = "                         \
    dismiss (0);                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_logging_dialog_handle_TCGUILIB_btnOK = "                             \
                                                                              \
    if ($TCGUILIB_btnUseLog.set == 1) {                                       \
        clitext (\"connection targetlogstart \" | $TCGUILIB_TID | \" \\\"\" | \
                 $TCGUILIB_tfLogFilename | \"\\\"\");                         \
    } else {                                                                  \
        clitext (\"connection targetlogstop \" | $TCGUILIB_TID | \" \");      \
    }                                                                         \
                                                                              \
    dismiss (0);                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_logging_dialog_handle_TCGUILIB_btnUseLog = "                         \
                                                                              \
    if ($TCGUILIB_btnUseLog.set == 1) {                                       \
        $TCGUILIB_tfLogFilename.dim = 0;                                      \
    } else {                                                                  \
        $TCGUILIB_tfLogFilename.dim = 1;                                      \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_logging_dialog_onSetup = "                                           \
/* get the target ID from my caller */                                        \
    $TCGUILIB_TID = %1;                                                       \
                                                                              \
                                                                              \
/* configure the widgets based on the current logging state */                \
    logged = clitext (\"connection targetislogged  \" | $TCGUILIB_TID | \"\") ; \
                                                                              \
    if (index (logged, \"yes\") != -1) {                                      \
        $TCGUILIB_tfLogFilename =                                             \
            clitext (\"connection targetlogfile  \" | $TCGUILIB_TID | \"\") ; \
        $TCGUILIB_btnUseLog.set = 1;                                          \
        $TCGUILIB_tfLogFilename.dim = 0;                                      \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_tfLogFilename = \"\";                                       \
        $TCGUILIB_btnUseLog.set = 0;                                          \
        $TCGUILIB_tfLogFilename.dim = 1;                                      \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_read_logged = "                                                      \
    logged = clitext (\"connection targetislogged  \" | $TCGUILIB_TID | \"\") ; \
                                                                              \
    if (index (logged, \"yes\") != -1) {                                      \
        logfile = clitext (\"connection targetlogfile  \" | $TCGUILIB_TID | \"\") ; \
                                                                              \
        if (strlen (logfile) < 1) {                                           \
            $TCGUILIB_tfLogMsg.dim = 0;                                       \
            $TCGUILIB_tfLogMsg = \"Logging to sterr\";                        \
            $TCGUILIB_tfLogMsg.dim = 1;                                       \
                                                                              \
        } else {                                                              \
            $TCGUILIB_tfLogMsg.dim = 0;                                       \
            $TCGUILIB_tfLogMsg = \"Logging to \" | logfile | \"\";            \
            $TCGUILIB_tfLogMsg.dim = 1;                                       \
        }                                                                     \
                                                                              \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_tfLogMsg.dim = 0;                                           \
        $TCGUILIB_tfLogMsg = \"Connection logging is off.\";                  \
        $TCGUILIB_tfLogMsg.dim = 1;                                           \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_read_runmode_partner = "                                             \
/* Read in the run-mode connection partner, if present */                     \
    $tfRunModePartner =                                                       \
        clitext (\"connection report \" | $TCGUILIB_CID | \" partner\");      \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_read_sane = "                                                        \
    sane = clitext (\"connection report \" | $TCGUILIB_CID | \" sane\") ;     \
                                                                              \
    if (index (sane, \"yes\") != -1) {                                        \
        $TCGUILIB_sane = \"1\";                                               \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_sane = \"0\";                                               \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_read_started = "                                                     \
    started = clitext (\"connection targetisstarted \" | $TCGUILIB_TID);      \
                                                                              \
    if (index (started, \"yes\") != -1) {                                     \
        $TCGUILIB_btnStart.dim       = 1;                                     \
        $TCGUILIB_btnEdit.dim        = 1;                                     \
        $TCGUILIB_btnStop.dim        = 0;                                     \
        $TCGUILIB_btnSetLogging.dim  = 0;                                     \
        $TCGUILIB_started            = \"1\";                                 \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_btnStart.dim       = 0;                                     \
        $TCGUILIB_btnEdit.dim        = 0;                                     \
        $TCGUILIB_btnStop.dim        = 1;                                     \
        $TCGUILIB_btnSetLogging.dim  = 1;                                     \
        $TCGUILIB_started      = \"0\";                                       \
        $TCGUILIB_TID          = \"0\";                                       \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_report_messages_from_connect = "                                     \
                                                                              \
    theString = \"\";                                                         \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
        theString = $TCGUILIB_msg_tf;                                         \
    } else {                                                                  \
        theString = $TCGUILIB_msg;                                            \
    }                                                                         \
                                                                              \
    if (rindex (theString, \"SUCCESS\") == -1) {                              \
        if (rindex (theString, \"FAILURE\") != -1) {                          \
                                                                              \
/* only display a message if the connection failed */                         \
            msgEnd = rindex (theString, \"FAILURE\");                         \
            theMsg = substr (theString, 0, msgEnd);                           \
                                                                              \
            alert (theMsg);                                                   \
        }                                                                     \
    } else {                                                                  \
        msgEnd = rindex (theString, \"SUCCESS\");                             \
        theMsg = substr (theString, 0, msgEnd);                               \
                                                                              \
        cli (\"echo \" | theMsg);                                             \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_save_runmode_partner = "                                             \
/* Save the run-mode connection partner, if present */                        \
    clitext (\"connection change \" | $TCGUILIB_CID | \" partner \\\"\" |     \
                 escapify($tfRunModePartner) | \"\\\"\");                     \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_start = "                                                            \
                                                                              \
    if (index ($TCGUILIB_mode, \"useprocess\") != -1) {                       \
/* They want us to connect to a particular process window, */                 \
/* which is already open.  MULTI knows which window to use and */             \
/* how to hook it up. */                                                      \
        if ($TCGUILIB_use_msgtf == \"1\") {                                   \
               $TCGUILIB_msg_tf = clitext (\"connection startonprocess \" |   \
                                          $TCGUILIB_CID | \"\");              \
        } else {                                                              \
               $TCGUILIB_msg = clitext (\"connection startonprocess \" |      \
                                       $TCGUILIB_CID | \"\");                 \
        }                                                                     \
                                                                              \
    } else {                                                                  \
/* Just start the server; don't try to hook it up to a certain */             \
/* process */                                                                 \
        if ($TCGUILIB_use_msgtf == \"1\") {                                   \
            $TCGUILIB_msg_tf = clitext (\"connection start \" | $TCGUILIB_CID | \"\"); \
        } else {                                                              \
            $TCGUILIB_msg = clitext (\"connection start \" | $TCGUILIB_CID | \"\"); \
        }                                                                     \
    }                                                                         \
                                                                              \
/* process the output message and find the TID */                             \
    the_msg = \"\";                                                           \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
            the_msg = $TCGUILIB_msg_tf;                                       \
    } else {                                                                  \
            the_msg = $TCGUILIB_msg;                                          \
    }                                                                         \
    successmsg = rindex (the_msg, \"SUCCESS : \");                            \
    if (successmsg != -1) {                                                   \
/* found a TID */                                                             \
        $TCGUILIB_TID = substr (the_msg, successmsg + 10,                     \
                                strlen (the_msg) - successmsg - 10);          \
                                                                              \
    } else {                                                                  \
        $TCGUILIB_TID = \"0\";                                                \
    }                                                                         \
                                                                              \
    TCGUILIB_read_started ();                                                 \
                                                                              \
/* Give the client an opportunity to look at the start */                     \
    cli (\"callpsfunction \" | $TCGUILIB_analyzestart_fn | \"\");             \
                                                                              \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
        $TCGUILIB_msg_tf = \"\";                                              \
    } else {                                                                  \
        $TCGUILIB_msg = \"\";                                                 \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_status_footer_handle_TCGUILIB_btnEdit = "                            \
    clitext (\"dialog \" | $TCGUILIB_editor_dlg_name |                        \
             \" noconnect \" | $TCGUILIB_CID | \"\");                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_status_footer_handle_TCGUILIB_btnSetLogging = "                      \
    clitext (\"dialog TCGUILIB_logging_dialog \" |                            \
             \" \" | $TCGUILIB_TID | \"\");                                   \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_status_footer_handle_TCGUILIB_btnStart = "                           \
    TCGUILIB_start ();                                                        \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_status_footer_handle_TCGUILIB_btnStop = "                            \
    TCGUILIB_stop ();                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_statuswin_onCleanup = "                                              \
/* unregister this window with the connection manager now */                  \
    clitext (\"connection plcunlisten TCGUILIB_handle_connectionChange\");    \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_statuswin_onSetup = "                                                \
                                                                              \
    $TCGUILIB_mode = %1;                                                      \
    $TCGUILIB_CID  = %2;                                                      \
    $TCGUILIB_TID  = %3;                                                      \
                                                                              \
    TCGUILIB_read_sane ();                                                    \
    TCGUILIB_read_started ();                                                 \
    TCGUILIB_read_logged ();                                                  \
                                                                              \
                                                                              \
    if ($TCGUILIB_sane == \"0\") {                                            \
/* not sane yet, sanify. */                                                   \
        TCGUILIB_eval_sane ();                                                \
    }                                                                         \
                                                                              \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MAJOR_VERSION)\"); \
    major_ver = STRINGLIB_get_number();                                       \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MINOR_VERSION)\"); \
    minor_ver = STRINGLIB_get_number();                                       \
                                                                              \
    STRINGLIB_init();                                                         \
    STRINGLIB_digit_string = clitext(\"mprintf(\\\"%d\\\", $_MULTI_MICRO_VERSION)\"); \
    micro_ver = STRINGLIB_get_number();                                       \
                                                                              \
                                                                              \
    if (major_ver == -1 && minor_ver == -1 && micro_ver == -1) {              \
/* Unable to determine any version information.  Fallback to checking if */   \
/* the rominithbp command, added after 5.0.5, exists. */                      \
        STRINGLIB_init();                                                     \
                                                                              \
        STRINGLIB_string = clitext(\"rominithbp\");                           \
        if (index (STRINGLIB_string, \"-setup\") != -1) {                     \
/* The command exists. */                                                     \
            $TCGUILIB_use_msgtf = \"0\";                                      \
        } else {                                                              \
            $TCGUILIB_use_msgtf = \"1\";                                      \
        }                                                                     \
    } else if (major_ver >= 6 || (major_ver == 5 && (minor_ver > 0 || micro_ver > 5  || (minor_ver == 0 && micro_ver == 0)))) { \
        $TCGUILIB_use_msgtf = \"0\";                                          \
    } else {                                                                  \
        $TCGUILIB_use_msgtf = \"1\";                                          \
    }                                                                         \
                                                                              \
/* register this window with the connection manager, so that it */            \
/* will get updated when the connection changes */                            \
    clitext (\"connection plclisten TCGUILIB_handle_connectionChange\");      \
                                                                              \
                                                                              \
/* We may need to do various things if the connection is or is not started */ \
    if ($TCGUILIB_started == \"0\") {                                         \
/* not started yet.  Start as desired.  */                                    \
                                                                              \
        if (index ($TCGUILIB_mode, \"forcego\") != -1) {                      \
            TCGUILIB_start ();                                                \
                                                                              \
        } else if (index ($TCGUILIB_mode, \"goifok\") != -1) {                \
            if ($TCGUILIB_sane == \"1\") {                                    \
                TCGUILIB_start ();                                            \
            }                                                                 \
        }                                                                     \
                                                                              \
    } else {                                                                  \
/* started.  Are we being asked to stop it? */                                \
        if (index ($TCGUILIB_mode, \"trystop\") != -1) {                      \
            TCGUILIB_stop ();                                                 \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    if (index ($TCGUILIB_mode, \"forceclose\") != -1) {                       \
/* We must always close the window */                                         \
        dismiss (0);                                                          \
    }                                                                         \
                                                                              \
                                                                              \
    if (index ($TCGUILIB_mode, \"closeifok\") != -1) {                        \
/* we should close the window if the connection is sane */                    \
        if ($TCGUILIB_sane == \"1\") {                                        \
            dismiss (0);                                                      \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    if (index ($TCGUILIB_mode, \"closeifstarted\") != -1) {                   \
/* we should close the window if the connection is started */                 \
        if ($TCGUILIB_started == \"1\") {                                     \
            dismiss (0);                                                      \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
    if (index ($TCGUILIB_mode, \"closeifstopped\") != -1) {                   \
/* we should close the window if the connection is stopped */                 \
        if ($TCGUILIB_started == \"0\") {                                     \
            dismiss (0);                                                      \
        }                                                                     \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
TCGUILIB_stop = "                                                             \
                                                                              \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
        $TCGUILIB_msg_tf = clitext (\"connection targetstop \" | $TCGUILIB_TID | \"\"); \
    } else {                                                                  \
        $TCGUILIB_msg = clitext (\"connection targetstop \" | $TCGUILIB_TID | \"\"); \
    }                                                                         \
                                                                              \
    TCGUILIB_read_started ();                                                 \
                                                                              \
/* Give the client an opportunity to look at the start */                     \
    cli (\"callpsfunction \" | $TCGUILIB_analyzestop_fn | \"\");              \
                                                                              \
    if ($TCGUILIB_use_msgtf == \"1\") {                                       \
        $TCGUILIB_msg_tf = \"\";                                              \
    } else {                                                                  \
        $TCGUILIB_msg = \"\";                                                 \
    }                                                                         \
                                                                              \
                                                                              \
                                                                              \
"
Items=DebugOutput
 Dialogue(,,,348,84,NULL,"DebugOutput","DebugOutput_onSetup() ;","DebugOutput_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =DebugOutput > -1
 Button(0,0,0,202,17,NULL,NULL,NULL,"Log Host-Target Debug Output",2,0,0,0,"DebugOutput_handle_btnDebugOutput() ;")0xffffffff =btnDebugOutput >-1
 ButtonSet(0,20,22,118,34,NULL,NULL,NULL,    (2,"StdErr / StdOut","File"),    (2,"DebugOutput_handle_btnstDebugOutputDest","DebugOutput_handle_btnstDebugOutputDest"),    -1,2,2,1,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =btnstDebugOutputDest >-1
 Line(0,0,61,0,84,NULL,PNone)0x400 =lnSz1 >-1
 TextField(0,40,62,234,21,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =tfDebugOutputFile >-1
 Button(0,274,61,74,23,NULL,NULL,NULL,"Choose...",0,0,0,0,"DebugOutput_handle_btnDebugOutputChooseFile() ;")0xffffffff =btnDebugOutputChooseFile >-1
MinSizes
Sizes
 0,(1,2,3),(),10,0,0,0,0,1,1,Vertical
 3,(4),(),0,0,0,0,0,1,1,((5),(),0,0,0,0,0,1,1,)Vertical
 4,(0),(5),-40,0,0,0,0,1,1,Horizontal
Positions
 (3),2,5,0,0,0,0,Top,Top,Bottom
 (3),0,0,0,0,0,0,Left,Left,Left
 (4),3,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (4),2,20,0,0,0,0,Left,Left,Left
 (2),1,20,0,0,0,0,Left,Left,Left
 (2),1,5,0,0,0,0,Top,Top,Bottom
 (5),4,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (5),4,0,0,0,0,0,Left,Left,Right
 (1),0,0,0,0,0,0,Top,Top,Top
 (1),0,0,0,0,0,0,Left,Left,Left

Items=OtherOptions
 Dialogue(,,,366,30,NULL,"OtherOptions","OtherOptions_onSetup() ;","OtherOptions_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =OtherOptions > -1
 Line(0,0,0,0,21,NULL,PNone)0x400 =lnVMax >-1
 Text(0,0,2,NULL,"Other Options:",PNone)0xffffffff =txtOtherOptions >-1
 TextField(0,87,0,289,21,NULL,NULL,NULL,256,1,"",NULL)0xffffffff =tfOtherOptions >-1
MinSizes
Sizes
 0,(1),(),0,0,0,0,0,1,1,Vertical
 1,(2),(),0,0,0,0,0,1,1,((3),(),0,0,0,0,0,1,1,)Vertical
 3,(0),(2),10,0,0,0,0,1,1,Horizontal
Positions
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),2,0,0,0,0,0,Left,Left,Right
 (2),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,0,0,0,0,0,Left,Left,Left
 (1),0,0,0,0,0,0,Top,Top,Top
 (1),0,0,0,0,0,0,Left,Left,Left

Items=RTServConnectionEditor
 Dialogue(,,,508,366,"$MULTI.rtserv_connection_editor","RTServConnectionEditor","RTServConnectionEditor_onSetup() ;","RTServConnectionEditor_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =RTServConnectionEditor > -1
 Rectangle(0,0,0,508,54,"use TCGUILIB_editor_header_no_script;",2,NULL,PNone)0x400 =rctTCGUILIBHeader >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz1 >-1
 Text(0,0,0,NULL,"Name:",PNone)0xffffffff =TCGUILIB_txtName >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfName >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz2 >-1
 Text(0,0,0,NULL,"Type:",PNone)0xffffffff =TCGUILIB_txtType >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfType >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz3 >-1
 Button(0,0,0,124,15,NULL,NULL,NULL,"Log Connection to file:",2,0,0,0,"TCGUILIB_editor_header_no_script_handle_TCGUILIB_btnLogging() ;")0xffffffff =TCGUILIB_btnLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfLogFilename >-1
 ButtonSet(0,0,0,23,22,NULL,NULL,NULL,    (1,"Choose..."),    (1,"TCGUILIB_editor_header_handle_choose_logfile()"),    -1,1,1,0,0,61,0,    (1,NULL),    (1,"open"),    (1,NULL),    (1,NULL),0,0)0xffffffff =TCGUILIB_btnsLogFileChooser >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,-8,1052,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatuswinDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,1072,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSaveArgsFunc:",NULL)0x400 =TCGUILIB_editor_saveargs_fn >-1
 TextField(0,-8,1092,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenReadArgsFunc:",NULL)0x400 =TCGUILIB_editor_readargs_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenConChangedFunc:",NULL)0x400 =TCGUILIB_statuswin_changed_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,-8,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgsSane:",NULL)0x400 =TCGUILIB_sane >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEvalArgsFunc:",NULL)0x400 =TCGUILIB_editor_evalargs_fn >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSetupScript:",NULL)0x400 =TCGUILIB_SetupScript >-1
 ButtonSet(0,9992,9992,132,15,NULL,NULL,NULL,    (2,"MULTI","Legacy"),    (2,NULL,NULL),    -1,2,2,0,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0x400 =bsSetupScript >-1
 TextField(0,9992,9992,8,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0x400 =tfSetupScript >-1
 TextField(0,9992,9992,28,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenLegacyScripts:",NULL)0x400 =TCGUILIB_editor_legacyscripts >-1
 Text(0,188,21,NULL,"TCGUILIB Header Rct",PNone)0x400 =txtTCGUILIBHeaderRct >-1
 TabControl(0,10,54,488,252,NULL,NULL,NULL,NULL,NULL,(3,"Connection","Advanced","Debug")())0xffffffff =tcTabs >-1
 Rectangle(28.0,24,98,468,116,NULL,2,NULL,PNone)0xffffffff =rctEthernet >-1
 Button(28.0,34,108,184,15,NULL,NULL,NULL,"Ethernet / IP Connection",1,0,0,0,"RTServConnectionEditor_handle_btnEthernet() ;")0xffffffff =btnEthernet >-1
 Button(28.0,34,234,136,15,NULL,NULL,NULL,"Serial Connection",1,0,0,0,"RTServConnectionEditor_handle_btnSerial() ;")0xffffffff =btnSerial >-1
 Text(28.0,34,133,NULL,"Target Name or Address:",PNone)0xffffffff =txtTargetName >-1
 TextField(28.0,44,156,448,18,NULL,NULL,NULL,256,0,"",NULL)0xffffffff =tfTargetName >-1
 Line(28.0,27,184,27,204,NULL,PNone)0x400 =lnSz2 >-1
 Text(28.0,34,188,NULL,"TFTP Load Directory:",PNone)0xffffffff =txtTFTPLoadDir >-1
 TextField(28.0,184,185,218,18,NULL,NULL,NULL,256,0,"",NULL)0xffffffff =tfTFTPLoadDir >-1
 Button(28.0,402,184,80,20,NULL,NULL,NULL,"Choose...",0,0,0,0,"RTServConnectionEditor_handle_btnChooseTFTPLoadDir() ;")0xffffffff =btnChooseTFTPLoadDir >-1
 Rectangle(28.0,24,224,468,66,NULL,2,NULL,PNone)0xffffffff =rctSerial >-1
 Line(28.0,30,259,30,280,NULL,PNone)0x400 =lnSz3 >-1
 Rectangle(28.0,44,259,214,21,"use SelectSerialPort;",2,NULL,PNone)0x400 =rctSerialPort >-1
 Line(28.0,0,0,0,21,NULL,PNone)0x400 =lnVMax >-1
 Text(28.0,0,2,NULL,"Serial Port:",PNone)0xffffffff =txtSerialPort >-1
 PullDown(28.0,75,0,88,21,NULL,NULL,NULL,NULL,NULL,"<default>",0,(4,NULL,("<default>",NULL,,NULL,())("COM1",NULL,,NULL,())("COM2",NULL,,NULL,())("COM3",NULL,,NULL,()),0))0x2 =pdSerialPortWindows >-1
 PullDown(28.0,75,0,88,21,NULL,NULL,NULL,NULL,NULL,"<default>",0,(2,NULL,("<default>",NULL,,NULL,())("/dev/tty",NULL,,NULL,()),0))0x4 =pdSerialPortUnix >-1
 Text(28.0,99,263,NULL,"Serial Port Rct",PNone)0x400 =txtSerialPortRct >-1
 Text(28.0,268,263,NULL,"Baud Rate:",PNone)0xffffffff =txtBaudRate >-1
 PullDown(28.0,348,260,124,18,NULL,NULL,NULL,NULL,NULL,"<default>",0,(6,NULL,("<default>",NULL,,NULL,())("9600",NULL,,NULL,())("19200",NULL,,NULL,())("38400",NULL,,NULL,())("57600",NULL,,NULL,())("115200",NULL,,NULL,()),0))0xffffffff =pdBaud >-1
 Button(28.1,24,98,240,15,NULL,NULL,NULL,"BSD Exclusive Serial Port Access",2,0,0,0,"")0xffffffff =btnExcl >-1
 Button(28.1,24,118,184,15,NULL,NULL,NULL,"Always Use TFTP for Load",2,0,0,0,"")0xffffffff =btnForceTFTP >-1
 Rectangle(28.2,24,98,468,140,"use DebugOutput;",2,NULL,PNone)0x400 =rctDebugOutput >-1
 Button(28.2,0,0,202,17,NULL,NULL,NULL,"Log Host-Target Debug Output",2,0,0,0,"DebugOutput_handle_btnDebugOutput() ;")0xffffffff =btnDebugOutput >-1
 ButtonSet(28.2,20,22,118,34,NULL,NULL,NULL,    (2,"StdErr / StdOut","File"),    (2,"DebugOutput_handle_btnstDebugOutputDest","DebugOutput_handle_btnstDebugOutputDest"),    -1,2,2,1,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =btnstDebugOutputDest >-1
 Line(28.2,0,61,0,84,NULL,PNone)0x400 =lnSz1 >-1
 TextField(28.2,40,62,234,21,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =tfDebugOutputFile >-1
 Button(28.2,274,61,74,23,NULL,NULL,NULL,"Choose...",0,0,0,0,"DebugOutput_handle_btnDebugOutputChooseFile() ;")0xffffffff =btnDebugOutputChooseFile >-1
 Text(28.2,202,162,NULL,"Debug Output Rct",PNone)0x400 =txtDebugOutputRct >-1
 Rectangle(28.2,24,269,468,31,"use OtherOptions;",2,NULL,PNone)0x400 =rctOtherOptions >-1
 Line(28.2,0,0,0,21,NULL,PNone)0x400 =lnVMax >-1
 Text(28.2,0,2,NULL,"Other Options:",PNone)0xffffffff =txtOtherOptions >-1
 TextField(28.2,87,0,289,21,NULL,NULL,NULL,256,1,"",NULL)0xffffffff =tfOtherOptions >-1
 Text(28.2,199,278,NULL,"Other Options Rct",PNone)0x400 =txtOtherOptionsRct >-1
 Rectangle(0,0,306,508,60,"use TCGUILIB_editor_footer;",2,NULL,PNone)0x400 =rctTCGUILIBFooter >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line3 >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfCommand >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line2 >-1
 Button(0,0,0,56,19,NULL,NULL,NULL,"Connect",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnConnect() ;")0xffffffff =TCGUILIB_btnConnect >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"OK",0,1,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnOK() ;")0xffffffff =TCGUILIB_btnOK >-1
 Button(0,0,0,48,19,NULL,NULL,NULL,"Cancel",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnCancel() ;")0xffffffff =TCGUILIB_btnCancel >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Revert",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnRevert() ;")0xffffffff =TCGUILIB_btnRevert >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Apply",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnApply() ;")0xffffffff =TCGUILIB_btnApply >-1
 Text(0,188,330,NULL,"TCGUILIB Footer Rct",PNone)0x400 =txtTCGUILIBFooterRct >-1
 Line(28.0,29,98,29,310,NULL,PNone)0x400 =lnVMax >-1
 Line(28.0,24,521,492,521,NULL,PNone)0x400 =lnHMax >-1
 Rectangle(0,-108,-108,70,36,"use TCGUILIB_minsize_ref;",1,NULL,PNone)0x400 =rctMinsizeRef >-1
 Text(0,10,13,NULL,"Connect for:",PNone)0x400 =TCGUILIB_minsize_txtConnectFor >-1
 Button(0,10,68,246,15,NULL,NULL,NULL,"Board Setup (Debug board initialization sequence)",1,0,0,0,"")0x400 =TCGUILIB_minsize_btnLogging >-1
MinSizes
 0,(74),(),0,0,0,0,0,1,1,Horizontal
 0,(62,1,72),(),40,0,0,0,0,1,1,Vertical
Sizes
 72,(29,38),(),30,0,0,0,0,1,1,((57,50),(),40,0,0,0,0,1,1,)Vertical
 57,(50),(),0,0,0,0,0,1,1,Horizontal
 0,(73),(),40,0,0,0,0,1,1,Horizontal
 73,(30),(),20,0,0,0,0,1,1,((32),(),20,0,0,0,0,1,1,((),(),40,0,30,0,0,1,1,((37,35),(),20,0,20,0,0,1,1,((31),(),20,0,0,0,0,1,1,((48),(),0,0,0,0,0,1,1,)))))Horizontal
 39,(40),(),0,0,0,0,0,1,1,((46),(),0,0,0,0,0,1,1,((47),(),0,0,0,0,0,1,1,))Vertical
 34,(35),(),0,0,0,0,0,1,1,((36),(),0,0,0,0,0,1,1,((37),(),0,0,0,0,0,1,1,))Vertical
 62,(0),(),0,0,0,0,0,1,1,Horizontal
 38,(39,31),(),30,0,0,0,0,1,1,Vertical
 38,(29),(),0,0,0,0,0,1,1,Horizontal
 50,(28),(),-20,0,0,0,0,1,1,Horizontal
 47,(40),(46),-20,0,0,0,0,1,1,Horizontal
 40,(38),(),-40,0,0,0,0,1,2,Horizontal
 36,(29),(35,37),-30,0,0,0,0,1,1,Horizontal
 33,(29),(),-20,0,0,0,0,1,1,Horizontal
 29,(28),(),-20,0,0,0,0,1,1,Horizontal
 29,(34,33,32,30),(),50,0,0,0,0,1,1,Vertical
 28,(0),(1,62),0,0,0,0,0,1,1,Vertical
 0,(62,1,72),(),40,0,0,0,0,1,1,Vertical
 28,(0),(),-20,0,0,0,0,1,1,Horizontal
 1,(0),(),0,0,0,0,0,1,0,Horizontal
 8,(9),(),0,0,0,0,0,1,1,((10),(),0,0,0,0,0,1,1,)Vertical
 5,(6),(),0,0,0,0,0,1,1,((7),(),0,0,0,0,0,1,1,)Vertical
 2,(3),(),0,0,0,0,0,1,1,((4),(),0,0,0,0,0,1,1,)Vertical
 10,(1),(9,11),-10,0,0,0,0,1,1,Horizontal
 1,(8,5,2),(),65,0,0,0,0,1,1,Vertical
 12,(1),(),-20,0,0,0,0,1,1,Horizontal
 7,(4),(),0,0,0,0,0,1,1,Horizontal
 4,(1),(3),-10,0,0,0,0,1,1,Horizontal
 40,(41),(),0,0,0,0,0,1,1,Vertical
 41,(44),(),0,0,0,0,0,1,1,((42),(),0,0,0,0,0,1,1,)Vertical
 44,(43),(),0,0,0,0,0,1,1,Horizontal
 43,(40),(42),-10,0,0,0,0,1,1,Horizontal
 50,(51,52,53),(),10,0,0,0,0,1,1,Vertical
 53,(54),(),0,0,0,0,0,1,1,((55),(),0,0,0,0,0,1,1,)Vertical
 54,(50),(55),-40,0,0,0,0,1,1,Horizontal
 57,(58),(),0,0,0,0,0,1,1,Vertical
 58,(59),(),0,0,0,0,0,1,1,((60),(),0,0,0,0,0,1,1,)Vertical
 60,(57),(59),10,0,0,0,0,1,1,Horizontal
 62,(64,67),(),50,0,0,0,0,1,1,Vertical
 69,(68),(),0,0,0,0,0,1,1,Horizontal
 70,(68),(),0,0,0,0,0,1,1,Horizontal
 64,(62),(),4,0,0,0,0,1,1,Horizontal
 63,(62),(),-20,0,0,0,0,1,1,Horizontal
 65,(62),(),-20,0,0,0,0,1,1,Horizontal
 67,(68),(),0,0,0,0,0,1,1,Horizontal
 74,(76,75),(),30,0,0,0,0,1,1,Horizontal
Positions
 (49),48,0,0,0,0,0,Left,Left,Left
 (49),48,5,0,0,0,0,Top,Top,Bottom
 (50),28,10,0,0,0,0,Left,Left,Left
 (50),28,40,0,0,0,0,Top,Top,Top
 (32),30,10,0,0,0,0,Top,Top,Bottom
 (34),33,10,0,0,0,0,Top,Top,Bottom
 (73),28,10,0,0,0,0,Left,Left,Left
 (72),28,40,0,0,0,0,Top,Top,Top
 (39),31,10,0,0,0,0,Top,Top,Bottom
 (61),57,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (61),57,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (57),28,-10,0,0,0,0,Bottom,Bottom,Bottom
 (57),28,10,0,0,0,0,Left,Left,Left
 (48),28,40,0,0,0,0,Top,Top,Top
 (48),28,10,0,0,0,0,Left,Left,Left
 (71),62,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (71),62,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (62),0,0,0,0,0,0,Bottom,Bottom,Bottom
 (62),0,0,0,0,0,0,Left,Left,Left
 (56),50,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (56),50,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (47),46,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (47),46,10,0,0,0,0,Left,Left,Right
 (46),40,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (46),40,10,0,0,0,0,Left,Left,Right
 (45),40,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (45),40,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (40),39,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (40),31,10,0,0,0,0,Left,Left,Left
 (31),38,10,0,0,0,0,Top,Top,Top
 (31),38,10,0,0,0,0,Left,Left,Left
 (38),29,10,0,0,0,0,Top,Top,Bottom
 (38),29,0,0,0,0,0,Left,Left,Left
 (37),36,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (37),36,0,0,0,0,0,Left,Left,Right
 (36),35,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (36),35,10,0,0,0,0,Left,Left,Right
 (35),34,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (35),29,10,0,0,0,0,Left,Left,Left
 (33),32,10,0,0,0,0,Top,Top,Bottom
 (33),32,10,0,0,0,0,Left,Left,Left
 (32),30,0,0,0,0,0,Left,Left,Left
 (30),29,10,0,0,0,0,Top,Top,Top
 (30),29,10,0,0,0,0,Left,Left,Left
 (29),28,40,0,0,0,0,Top,Top,Top
 (29),28,10,0,0,0,0,Left,Left,Left
 (1),0,0,0,0,0,0,Top,Top,Top
 (28),1,0,0,0,0,0,Top,Top,Bottom
 (28),0,10,0,0,0,0,Left,Left,Left
 (27),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (27),1,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (1),0,0,0,0,0,0,Left,Left,Left
 (11),10,0,0,0,0,0,Top,TBCenter,TBCenter
 (11),1,-7,0,0,0,0,Left,Right,Right
 (12),8,10,0,0,0,0,Top,Top,Bottom
 (10),9,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (8),5,10,0,0,0,0,Top,Top,Bottom
 (5),2,10,0,0,0,0,Top,Top,Bottom
 (2),1,10,0,0,0,0,Top,Top,Top
 (10),9,0,0,0,0,0,Left,Left,Right
 (9),1,10,0,0,0,0,Left,Left,Left
 (9),8,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (12),1,10,0,0,0,0,Left,Left,Left
 (6),5,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (6),1,10,0,0,0,0,Left,Left,Left
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),1,10,0,0,0,0,Left,Left,Left
 (7),6,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (7),4,0,0,0,0,0,Left,Left,Left
 (4),3,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (4),1,2,0,0,0,0,Right,Right,Right
 (41),40,0,0,0,0,0,Left,Left,Left
 (41),40,0,0,0,0,0,Top,Top,Top
 (44),41,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (44),43,0,0,0,0,0,Left,Left,Left
 (43),41,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (43),42,10,0,0,0,0,Left,Left,Right
 (42),41,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (42),40,0,0,0,0,0,Left,Left,Left
 (53),52,5,0,0,0,0,Top,Top,Bottom
 (53),50,0,0,0,0,0,Left,Left,Left
 (54),53,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (54),52,20,0,0,0,0,Left,Left,Left
 (52),51,20,0,0,0,0,Left,Left,Left
 (52),51,5,0,0,0,0,Top,Top,Bottom
 (55),54,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (55),54,0,0,0,0,0,Left,Left,Right
 (51),50,0,0,0,0,0,Top,Top,Top
 (51),50,0,0,0,0,0,Left,Left,Left
 (60),59,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (60),59,0,0,0,0,0,Left,Left,Right
 (59),58,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (59),57,0,0,0,0,0,Left,Left,Left
 (58),57,0,0,0,0,0,Top,Top,Top
 (58),57,0,0,0,0,0,Left,Left,Left
 (69),70,0,0,0,0,0,Top,Top,Top
 (69),70,-5,0,0,0,0,Right,Right,Left
 (68),69,0,0,0,0,0,Top,Top,Top
 (70),62,-10,0,0,0,0,Bottom,Bottom,Bottom
 (70),62,-10,0,0,0,0,Right,Right,Right
 (63),64,-10,0,0,0,0,Top,Top,Top
 (63),62,10,0,0,0,0,Left,Left,Left
 (64),65,-10,0,0,0,0,Bottom,Bottom,Bottom
 (64),62,2,0,0,0,0,Right,Right,Right
 (65),62,10,0,0,0,0,Left,Left,Left
 (65),66,-10,0,0,0,0,Top,Top,Top
 (66),62,-10,0,0,0,0,Bottom,Bottom,Bottom
 (66),62,10,0,0,0,0,Left,Left,Left
 (67),68,0,0,0,0,0,Top,Top,Top
 (67),68,-5,0,0,0,0,Right,Right,Left
 (68),69,-11,0,0,0,0,Right,Right,Left

Items=RTServConnectionStatus
 ColWind(,,,337,344,NULL,"RTServConnectionStatus","RTServConnectionStatus_onSetup() ;","RTServConnectionStatus_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =RTServConnectionStatus > -1
 Text(0,10,10,NULL,"Connection Status:",PNone)0xffffffff =txtConnectionStatus >-1
 Line(0,10,33,327,33,NULL,PNone)0xffffffff =hline1 >-1
 Edit(0,10,43,317,204,NULL,NULL,NULL,1,0,0)0xffffffff =Editor >-1
 Rectangle(0,0,279,337,65,"use TCGUILIB_status_footer;",2,NULL,PNone)0x400 =rctTCGUILIBStatusFooter >-1
 Line(0,10,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 Button(0,0,0,64,19,NULL,NULL,NULL,"Logging...",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnSetLogging() ;")0xffffffff =TCGUILIB_btnSetLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfLogMsg >-1
 Button(0,0,0,44,19,NULL,NULL,NULL,"Edit...",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnEdit() ;")0xffffffff =TCGUILIB_btnEdit >-1
 Button(0,0,0,46,19,NULL,NULL,NULL," Start ",0,1,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnStart() ;")0xffffffff =TCGUILIB_btnStart >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Stop",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnStop() ;")0xffffffff =TCGUILIB_btnStop >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,0,835,1,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatusDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,855,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckStartFunc:",NULL)0x400 =TCGUILIB_analyzestart_fn >-1
 TextField(0,-8,875,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckStopFunc:",NULL)0x400 =TCGUILIB_analyzestop_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckArgsFunc:",NULL)0x400 =TCGUILIB_statuswin_evalargs_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,0,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenIsStarted:",NULL)0x400 =TCGUILIB_started >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSanity:",NULL)0x400 =TCGUILIB_sane >-1
 Text(0,0,0,NULL,"StopOrStartFailureMsg:",PNone)0x400 =TCGUILIB_msg >-1
 TextField(0,0,795,300,17,NULL,NULL,NULL,0xc1acc10,0,"StopOrStartFailureMsg:",NULL)0x400 =TCGUILIB_msg_tf >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenTargetID:",NULL)0x400 =TCGUILIB_TID >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenUseMsgTextField:",NULL)0x400 =TCGUILIB_use_msgtf >-1
 Text(0,77,305,NULL,"TCGUILIB Status Footer Rct",PNone)0x400 =txtTCGUILIBStatusFooterRct >-1
MinSizes
Sizes
 4,(0),(),0,0,0,0,0,1,1,Horizontal
 3,(0),(),-20,0,0,0,0,1,1,Horizontal
 2,(0),(),-20,0,0,0,0,1,1,Horizontal
 1,(),(),0,0,0,0,0,1,1,Horizontal
 7,(4),(10,9,8,6),-36,0,0,0,0,1,1,Horizontal
 5,(4),(),-20,0,0,0,0,1,1,Horizontal
 4,(9),(),30,0,0,0,0,1,1,Vertical
 14,(4),(),-20,0,0,0,0,1,1,Horizontal
 10,(9),(),0,0,0,0,0,1,1,Horizontal
Positions
 (25),4,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (25),4,0,0,0,0,0,LRCenter,LRCenter,LRCenter
 (4),0,0,0,0,0,0,Bottom,Bottom,Bottom
 (4),0,0,0,0,0,0,Left,Left,Left
 (3),2,10,0,0,0,0,Top,Top,Bottom
 (3),0,10,0,0,0,0,Left,Left,Left
 (2),1,10,0,0,0,0,Top,Top,Bottom
 (2),0,10,0,0,0,0,Left,Left,Left
 (1),0,10,0,0,0,0,Top,Top,Top
 (1),0,10,0,0,0,0,Left,Left,Left
 (7),6,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (7),6,-2,0,0,0,0,Left,Left,Right
 (6),4,-10,0,0,0,0,Bottom,Bottom,Bottom
 (6),4,10,0,0,0,0,Left,Left,Left
 (5),4,10,0,0,0,0,Top,Top,Top
 (8),9,0,0,0,0,0,Top,Top,Top
 (8),9,-5,0,0,0,0,Right,Right,Left
 (9),10,0,0,0,0,0,Top,Top,Top
 (10),4,-10,0,0,0,0,Bottom,Bottom,Bottom
 (9),10,-2,0,0,0,0,Right,Right,Left
 (10),4,-10,0,0,0,0,Right,Right,Right

Items=SelectSerialPort
 Dialogue(,,,163,30,NULL,"SelectSerialPort","SelectSerialPort_onSetup() ;","SelectSerialPort_onCleanup() ;",0,0,0,"MULTIPIC") 0xffffffff =SelectSerialPort > -1
 Line(0,0,0,0,21,NULL,PNone)0x400 =lnVMax >-1
 Text(0,0,2,NULL,"Serial Port:",PNone)0xffffffff =txtSerialPort >-1
 PullDown(0,75,0,88,21,NULL,NULL,NULL,NULL,NULL,"<default>",0,(4,NULL,("<default>",NULL,,NULL,())("COM1",NULL,,NULL,())("COM2",NULL,,NULL,())("COM3",NULL,,NULL,()),0))0x2 =pdSerialPortWindows >-1
 PullDown(0,75,0,88,21,NULL,NULL,NULL,NULL,NULL,"<default>",0,(2,NULL,("<default>",NULL,,NULL,())("/dev/tty",NULL,,NULL,()),0))0x4 =pdSerialPortUnix >-1
MinSizes
Sizes
 0,(1),(),0,0,0,0,0,1,1,Vertical
 1,(4),(),0,0,0,0,0,1,1,((2),(),0,0,0,0,0,1,1,)Vertical
 4,(3),(),0,0,0,0,0,1,1,Horizontal
 3,(0),(2),-10,0,0,0,0,1,1,Horizontal
Positions
 (1),0,0,0,0,0,0,Left,Left,Left
 (1),0,0,0,0,0,0,Top,Top,Top
 (4),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (4),3,0,0,0,0,0,Left,Left,Left
 (3),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),2,10,0,0,0,0,Left,Left,Right
 (2),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,0,0,0,0,0,Left,Left,Left

Items=TCGUILIB_editor_footer
 Dialogue(,,,481,86,NULL,"TCGUILIB_editor_footer","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_editor_footer > -1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line3 >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfCommand >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line2 >-1
 Button(0,0,0,56,19,NULL,NULL,NULL,"Connect",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnConnect() ;")0xffffffff =TCGUILIB_btnConnect >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"OK",0,1,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnOK() ;")0xffffffff =TCGUILIB_btnOK >-1
 Button(0,0,0,48,19,NULL,NULL,NULL,"Cancel",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnCancel() ;")0xffffffff =TCGUILIB_btnCancel >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Revert",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnRevert() ;")0xffffffff =TCGUILIB_btnRevert >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Apply",0,0,0,0,"TCGUILIB_editor_footer_handle_TCGUILIB_btnApply() ;")0xffffffff =TCGUILIB_btnApply >-1
MinSizes
Sizes
 0,(2,5),(),50,0,0,0,0,1,1,Vertical
 7,(6),(),0,0,0,0,0,1,1,Horizontal
 8,(6),(),0,0,0,0,0,1,1,Horizontal
 2,(0),(),4,0,0,0,0,1,1,Horizontal
 1,(0),(),-20,0,0,0,0,1,1,Horizontal
 3,(0),(),-20,0,0,0,0,1,1,Horizontal
 5,(6),(),0,0,0,0,0,1,1,Horizontal
Positions
 (7),8,0,0,0,0,0,Top,Top,Top
 (7),8,-5,0,0,0,0,Right,Right,Left
 (6),7,0,0,0,0,0,Top,Top,Top
 (8),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (8),0,-10,0,0,0,0,Right,Right,Right
 (1),2,-10,0,0,0,0,Top,Top,Top
 (1),0,10,0,0,0,0,Left,Left,Left
 (2),3,-10,0,0,0,0,Bottom,Bottom,Bottom
 (2),0,2,0,0,0,0,Right,Right,Right
 (3),0,10,0,0,0,0,Left,Left,Left
 (3),4,-10,0,0,0,0,Top,Top,Top
 (4),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (4),0,10,0,0,0,0,Left,Left,Left
 (5),6,0,0,0,0,0,Top,Top,Top
 (5),6,-5,0,0,0,0,Right,Right,Left
 (6),7,-11,0,0,0,0,Right,Right,Left

Items=TCGUILIB_editor_header
 Dialogue(,,,474,155,NULL,"TCGUILIB_editor_header","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_editor_header > -1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz1 >-1
 Text(0,0,0,NULL,"Name:",PNone)0xffffffff =TCGUILIB_txtName >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfName >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz2 >-1
 Text(0,0,0,NULL,"Type:",PNone)0xffffffff =TCGUILIB_txtType >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfType >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz3 >-1
 Button(0,0,0,124,15,NULL,NULL,NULL,"Log Connection to file:",2,0,0,0,"TCGUILIB_editor_header_handle_TCGUILIB_btnLogging() ;")0xffffffff =TCGUILIB_btnLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfLogFilename >-1
 ButtonSet(0,0,0,23,22,NULL,NULL,NULL,    (1,"Choose..."),    (1,"TCGUILIB_editor_header_handle_choose_logfile()"),    -1,1,1,0,0,61,0,    (1,NULL),    (1,"open"),    (1,NULL),    (1,NULL),0,0)0xffffffff =TCGUILIB_btnsLogFileChooser >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,-8,1052,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatuswinDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,1072,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSaveArgsFunc:",NULL)0x400 =TCGUILIB_editor_saveargs_fn >-1
 TextField(0,-8,1092,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenReadArgsFunc:",NULL)0x400 =TCGUILIB_editor_readargs_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenConChangedFunc:",NULL)0x400 =TCGUILIB_statuswin_changed_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,-8,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgsSane:",NULL)0x400 =TCGUILIB_sane >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEvalArgsFunc:",NULL)0x400 =TCGUILIB_editor_evalargs_fn >-1
 TextField(0,-8,795,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenLegacyScripts:",NULL)0x400 =TCGUILIB_editor_legacyscripts >-1
 Text(0,0,0,NULL,"Target setup script:",PNone)0xffffffff =TCGUILIB_txtSetupScript >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =tfSetupScript >-1
 ButtonSet(0,0,0,46,22,NULL,NULL,NULL,    (2,"Edit","Choose..."),    (2,"TCGUILIB_editor_header_handle_edit_script()","TCGUILIB_editor_header_handle_choose_script()"),    -1,1,2,0,0,61,0,    (2,NULL,NULL),    (2,"editconnection","open"),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =TCGUILIB_btnsSetupScript >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz4 >-1
 ButtonSet(0,0,0,132,15,NULL,NULL,NULL,    (2,"MULTI","Legacy"),    (2,NULL,NULL),    -1,2,2,0,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0xffffffff =bsSetupScript >-1
 TextField(0,0,815,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSetupScript:",NULL)0x400 =TCGUILIB_SetupScript >-1
MinSizes
Sizes
 24,(9),(10),0,0,0,0,0,1,1,Horizontal
 26,(23),(),0,0,0,0,0,1,1,((24),(),0,0,0,0,0,1,1,((),(),0,0,0,0,0,1,1,))Vertical
 7,(8),(),0,0,0,0,0,1,1,((9),(),0,0,0,0,0,1,1,)Vertical
 4,(5),(),0,0,0,0,0,1,1,((6),(),0,0,0,0,0,1,1,)Vertical
 1,(2),(),0,0,0,0,0,1,1,((3),(),0,0,0,0,0,1,1,)Vertical
 9,(0),(8,10),-20,1,0,0,0,1,1,Horizontal
 0,(7,4,1,27),(),89,0,0,0,0,1,1,Vertical
 11,(0),(),-20,0,0,0,0,1,1,Horizontal
 6,(3),(),0,0,0,0,0,1,1,Horizontal
 3,(0),(2),-10,0,0,0,0,1,1,Horizontal
Positions
 (11),27,10,0,0,0,0,Top,Top,Bottom
 (25),24,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (10),0,-7,0,0,0,0,Right,Right,Right
 (10),9,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (27),24,8,0,0,0,0,Left,Left,Left
 (27),26,5,0,0,0,0,TBCenter,Top,Bottom
 (25),0,-7,0,0,0,0,Right,Right,Right
 (24),9,0,0,0,0,0,Left,Left,Left
 (23),0,10,0,0,0,0,Left,Left,Left
 (23,24,26),7,9,0,0,0,0,TBCenter,Top,Bottom
 (9),8,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (7),4,10,0,0,0,0,Top,Top,Bottom
 (4),1,10,0,0,0,0,Top,Top,Bottom
 (1),0,10,0,0,0,0,Top,Top,Top
 (9),8,0,0,0,0,0,Left,Left,Right
 (8),0,10,0,0,0,0,Left,Left,Left
 (8),7,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (11),0,10,0,0,0,0,Left,Left,Left
 (5),4,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (5),0,10,0,0,0,0,Left,Left,Left
 (2),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,10,0,0,0,0,Left,Left,Left
 (6),5,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (6),3,0,0,0,0,0,Left,Left,Left
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),0,2,0,0,0,0,Right,Right,Right

Items=TCGUILIB_editor_header_no_script
 Dialogue(,,,418,116,NULL,"TCGUILIB_editor_header_no_script","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_editor_header_no_script > -1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz1 >-1
 Text(0,0,0,NULL,"Name:",PNone)0xffffffff =TCGUILIB_txtName >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfName >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz2 >-1
 Text(0,0,0,NULL,"Type:",PNone)0xffffffff =TCGUILIB_txtType >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfType >-1
 Line(0,-1,0,0,1,NULL,PNone)0x400 =TCGUILIB_lnSz3 >-1
 Button(0,0,0,124,15,NULL,NULL,NULL,"Log Connection to file:",2,0,0,0,"TCGUILIB_editor_header_no_script_handle_TCGUILIB_btnLogging() ;")0xffffffff =TCGUILIB_btnLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0xffffffff =TCGUILIB_tfLogFilename >-1
 ButtonSet(0,0,0,23,22,NULL,NULL,NULL,    (1,"Choose..."),    (1,"TCGUILIB_editor_header_handle_choose_logfile()"),    -1,1,1,0,0,61,0,    (1,NULL),    (1,"open"),    (1,NULL),    (1,NULL),0,0)0xffffffff =TCGUILIB_btnsLogFileChooser >-1
 Line(0,0,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,-8,1052,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatuswinDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,1072,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSaveArgsFunc:",NULL)0x400 =TCGUILIB_editor_saveargs_fn >-1
 TextField(0,-8,1092,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenReadArgsFunc:",NULL)0x400 =TCGUILIB_editor_readargs_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenConChangedFunc:",NULL)0x400 =TCGUILIB_statuswin_changed_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,-8,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgsSane:",NULL)0x400 =TCGUILIB_sane >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEvalArgsFunc:",NULL)0x400 =TCGUILIB_editor_evalargs_fn >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSetupScript:",NULL)0x400 =TCGUILIB_SetupScript >-1
 ButtonSet(0,9992,9992,132,15,NULL,NULL,NULL,    (2,"MULTI","Legacy"),    (2,NULL,NULL),    -1,2,2,0,0,1,0,    (2,NULL,NULL),    (0),    (2,NULL,NULL),    (2,NULL,NULL),0,0)0x400 =bsSetupScript >-1
 TextField(0,9992,9992,8,17,NULL,NULL,NULL,0xc1acc10,0,"",NULL)0x400 =tfSetupScript >-1
 TextField(0,9992,9992,28,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenLegacyScripts:",NULL)0x400 =TCGUILIB_editor_legacyscripts >-1
MinSizes
Sizes
 7,(8),(),0,0,0,0,0,1,1,((9),(),0,0,0,0,0,1,1,)Vertical
 4,(5),(),0,0,0,0,0,1,1,((6),(),0,0,0,0,0,1,1,)Vertical
 1,(2),(),0,0,0,0,0,1,1,((3),(),0,0,0,0,0,1,1,)Vertical
 9,(0),(8,10),-10,0,0,0,0,1,1,Horizontal
 0,(7,4,1),(),65,0,0,0,0,1,1,Vertical
 11,(0),(),-20,0,0,0,0,1,1,Horizontal
 6,(3),(),0,0,0,0,0,1,1,Horizontal
 3,(0),(2),-10,0,0,0,0,1,1,Horizontal
Positions
 (10),9,0,0,0,0,0,Top,TBCenter,TBCenter
 (10),0,-7,0,0,0,0,Left,Right,Right
 (11),7,10,0,0,0,0,Top,Top,Bottom
 (9),8,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (7),4,10,0,0,0,0,Top,Top,Bottom
 (4),1,10,0,0,0,0,Top,Top,Bottom
 (1),0,10,0,0,0,0,Top,Top,Top
 (9),8,0,0,0,0,0,Left,Left,Right
 (8),0,10,0,0,0,0,Left,Left,Left
 (8),7,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (11),0,10,0,0,0,0,Left,Left,Left
 (5),4,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (5),0,10,0,0,0,0,Left,Left,Left
 (2),1,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,10,0,0,0,0,Left,Left,Left
 (6),5,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (6),3,0,0,0,0,0,Left,Left,Left
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),0,2,0,0,0,0,Right,Right,Right

Items=TCGUILIB_logging_dialog
 Dialogue(,,,286,101,NULL,"TCGUILIB_logging_dialog","TCGUILIB_logging_dialog_onSetup() ;","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_logging_dialog > -1
 Button(0,0,0,124,15,NULL,NULL,NULL,"Log Connection To File",2,0,0,0,"TCGUILIB_logging_dialog_handle_TCGUILIB_btnUseLog() ;")0xffffffff =TCGUILIB_btnUseLog >-1
 Text(0,0,0,NULL,"Log File:",PNone)0xffffffff =TCGUILIB_txtLogFilename >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfLogFilename >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"OK",0,1,0,0,"TCGUILIB_logging_dialog_handle_TCGUILIB_btnOK() ;")0xffffffff =TCGUILIB_btnOK >-1
 Button(0,0,0,48,19,NULL,NULL,NULL,"Cancel",0,0,0,0,"TCGUILIB_logging_dialog_handle_TCGUILIB_btnCancel() ;")0xffffffff =TCGUILIB_btnCancel >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenTargetID:",NULL)0x400 =TCGUILIB_TID >-1
MinSizes
 0,(1,4,5),(),0,0,0,0,0,1,1,Horizontal
 0,(1,3,4),(),40,0,0,0,0,1,1,Vertical
Sizes
 3,(0),(2),-6,0,0,0,0,1,1,Horizontal
 4,(5),(),0,0,0,0,0,1,1,Horizontal
Positions
 (4),5,1,0,0,0,0,Top,Top,Top
 (4),5,-5,0,0,0,0,Right,Right,Left
 (5),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (5),0,-10,0,0,0,0,Right,Right,Right
 (3),0,2,0,0,0,0,Right,Right,Right
 (3),1,10,0,0,0,0,Top,Top,Bottom
 (2),3,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (2),0,10,0,0,0,0,Left,Left,Left
 (1),0,11,0,0,0,0,Top,Top,Top
 (1),0,10,0,0,0,0,Left,Left,Left

Items=TCGUILIB_minsize_ref
 Dialogue(,,,336,227,NULL,NULL,"","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_minsize_ref > -1
 Text(0,10,13,NULL,"Connect for:",PNone)0x400 =TCGUILIB_minsize_txtConnectFor >-1
 Button(0,10,68,246,15,NULL,NULL,NULL,"Board Setup (Debug board initialization sequence)",1,0,0,0,"")0x400 =TCGUILIB_minsize_btnLogging >-1
MinSizes
Sizes
 0,(2,1),(),30,0,0,0,0,1,1,Horizontal
Positions

Items=TCGUILIB_runmode_partner
 Dialogue(,,,365,43,NULL,"TCGUILIB_runmode_partner","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_runmode_partner > -1
 Line(0,0,1,0,1,NULL,PNone)0x400 =lnVMax >-1
 Text(0,0,0,NULL,"Run-Mode Partner Connection:",PNone)0xffffffff =txtRunModePartner >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =tfRunModePartner >-1
MinSizes
Sizes
 0,(1),(),0,0,0,0,0,1,1,Vertical
 3,(0),(),10,0,0,0,0,1,1,Horizontal
 1,(2,3),(),5,0,0,0,0,1,1,Vertical
Positions
 (3),2,5,0,0,0,0,Top,Top,Bottom
 (1),0,0,0,0,0,0,Left,Left,Left
 (3),2,-9,0,0,0,0,Left,Left,Left
 (2),0,0,0,0,0,0,Top,Top,Top
 (2),0,0,0,0,0,0,Left,Left,Left

Items=TCGUILIB_status_footer
 ColWind(,,,610,49,NULL,"TCGUILIB_status_footer","","",0,0,0,"MULTIPIC") 0xffffffff =TCGUILIB_status_footer > -1
 Line(0,10,0,1,0,NULL,PNone)0xffffffff =TCGUILIB_line1 >-1
 Button(0,0,0,64,19,NULL,NULL,NULL,"Logging...",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnSetLogging() ;")0xffffffff =TCGUILIB_btnSetLogging >-1
 TextField(0,0,0,1,17,NULL,NULL,NULL,0xc1acc10,1,"",NULL)0xffffffff =TCGUILIB_tfLogMsg >-1
 Button(0,0,0,44,19,NULL,NULL,NULL,"Edit...",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnEdit() ;")0xffffffff =TCGUILIB_btnEdit >-1
 Button(0,0,0,46,19,NULL,NULL,NULL," Start ",0,1,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnStart() ;")0xffffffff =TCGUILIB_btnStart >-1
 Button(0,0,0,1,19,NULL,NULL,NULL,"Stop",0,0,0,0,"TCGUILIB_status_footer_handle_TCGUILIB_btnStop() ;")0xffffffff =TCGUILIB_btnStop >-1
 TextField(0,-8,992,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCID:",NULL)0x400 =TCGUILIB_CID >-1
 TextField(0,-8,1012,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenMode:",NULL)0x400 =TCGUILIB_mode >-1
 TextField(0,-8,1032,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenEditorDlgName:",NULL)0x400 =TCGUILIB_editor_dlg_name >-1
 TextField(0,0,835,1,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenStatusDlgName:",NULL)0x400 =TCGUILIB_statuswin_dlg_name >-1
 TextField(0,-8,855,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckStartFunc:",NULL)0x400 =TCGUILIB_analyzestart_fn >-1
 TextField(0,-8,875,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckStopFunc:",NULL)0x400 =TCGUILIB_analyzestop_fn >-1
 TextField(0,-8,972,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenCheckArgsFunc:",NULL)0x400 =TCGUILIB_statuswin_evalargs_fn >-1
 TextField(0,-8,952,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenArgs:",NULL)0x400 =TCGUILIB_conargs >-1
 TextField(0,0,932,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenIsStarted:",NULL)0x400 =TCGUILIB_started >-1
 TextField(0,0,912,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenSanity:",NULL)0x400 =TCGUILIB_sane >-1
 Text(0,0,0,NULL,"StopOrStartFailureMsg:",PNone)0x400 =TCGUILIB_msg >-1
 TextField(0,0,795,300,17,NULL,NULL,NULL,0xc1acc10,0,"StopOrStartFailureMsg:",NULL)0x400 =TCGUILIB_msg_tf >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenTargetID:",NULL)0x400 =TCGUILIB_TID >-1
 TextField(0,0,775,300,17,NULL,NULL,NULL,0xc1acc10,0,"HiddenUseMsgTextField:",NULL)0x400 =TCGUILIB_use_msgtf >-1
MinSizes
Sizes
 3,(0),(6,5,4,2),-36,0,0,0,0,1,1,Horizontal
 1,(0),(),-20,0,0,0,0,1,1,Horizontal
 0,(5),(),30,0,0,0,0,1,1,Vertical
 10,(0),(),-20,0,0,0,0,1,1,Horizontal
 6,(5),(),0,0,0,0,0,1,1,Horizontal
Positions
 (3),2,0,0,0,0,0,TBCenter,TBCenter,TBCenter
 (3),2,-2,0,0,0,0,Left,Left,Right
 (2),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (2),0,10,0,0,0,0,Left,Left,Left
 (1),0,10,0,0,0,0,Top,Top,Top
 (4),5,0,0,0,0,0,Top,Top,Top
 (4),5,-5,0,0,0,0,Right,Right,Left
 (5),6,0,0,0,0,0,Top,Top,Top
 (6),0,-10,0,0,0,0,Bottom,Bottom,Bottom
 (5),6,-2,0,0,0,0,Right,Right,Left
 (6),0,-10,0,0,0,0,Right,Right,Right

