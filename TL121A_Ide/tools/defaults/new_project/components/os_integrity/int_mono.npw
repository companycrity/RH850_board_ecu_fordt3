%if !file_exists("${__INTEGRITY_DIST__}/multi/new_project/components/os_integrity/int_mono.npw")

%if !defined(__DISTRIBUTION_TYPE__) || streq(__DISTRIBUTION_TYPE__, "IDE")

component.integrity_monolith {
    use_template = "IntProjectT"
%if defined(NO_BSP)
	disabled=true
%endif
    
    display_type_name = "Monolith"

    top_file_type = "INTEGRITY Application"

    parent_context_types = { "top_level_project", "project" }
    parent_context_filetypes = { "Project" }

    description_html = "${__DIR__}/docs/desc_int_mono.html"

    documentation_files =  { "${__DIR__}/docs/mpm_all.gpd" }
    doc_anchor_ids = { "multi.mpm.monolith_project" }

    parent_name = "monolith"
    
    icon_name = "integrity_monolith"
bg_color="#e6feff"
    
#    bg_color = "#ccffcc"
#    fg_color="#000000"
    dlg_info {
	add {
	    menu_str = "Add INTEGRITY &Monolith"
	    cmd_str = "AddINTMono"
%if defined(NO_INTEGRITY_MMU) 	    
	    dlg_cmdlist = { "SetProjInfo_INTMono","EditINTMono", "AddINTKMonolith" }
%else
	    dlg_cmdlist = { "SetProjInfo_INTMono","EditINTMono", "AddNumVAS", "AddINTKMonolith", "AddINTOSMod" }
%endif
	}
	edit {
	    menu_str = "Edit INTEGRITY &Monolith"
	    cmd_str = "EditINTMono"
	    dlg_filelist = "${__DIR__}/int_editmono.plc"
	    dlg_namelist = "int_editmono"
	    documentation_files =  { "${__DIR__}/docs/mpm_all.gpd" }
	    doc_anchor_ids = { "multi.mpm.monolith_project","multi.mpm.intapp_shared_libs" }
%if !defined(NO_INTEGRITY_MMU) 	    
	    right_click_list = { "AddVAS", "EditINTOSMod", "EditINTM2DD" }
%endif
	}
	paste_local {
	    menu_str = "Paste INTEGRITY &Monolith"
	    cmd_str = "PasteINTMono"
	    dlg_filelist =  "${__SHARED_PY_DIR__}/common.plc" 
	    dlg_namelist =  "ProjectWizardDirName"
	}	
    }

    attributes {
    	tf_ProjectName {
	    type = "string"
	    default="myproject"
	    
	    refreshNode = true
	    
	    display_name= true
	    build_file_setting = "filename $build_file_basename"

	    dlg_info {
		add {
		    cmd_str = "SetProjInfo_INTMono"
		    same_object_dialogs = { "EditINTMono" }
		}
	    }
	    actions {
		add {
		    intermediate {
			1 += { "defineLocal tf_name $(tf_ProjectName)"}
			1 += { "defineLocal INT_APP_TYPE Monolith"}
			10 += { "copydef tf_ProjectName BASE_PROJ_NAME" }
		    }
		    standard {
			10 += { "python ${__DIR__}/int_mono.py mono_tf_name_add_std" } 
			1000000 += { "defineLocal KIDS_LAST_BASE_PROJ_NAME $tf_ProjectName" }
			10000000 += { "python ${__DIR__}/int_mono.py mono_std_lastdefines" } 
		    }
		}
		edit {
		    intermediate {
			1 += { "defineLocal tf_name $(tf_ProjectName)"}
			1 += { "defineLocal BASE_PROJ_NAME $tf_ProjectName" }
		    }
		    standard {
			10 += { "python ${__DIR__}/int_mono.py mono_tf_name_edit_std" } 
			10000000 += { "python ${__DIR__}/int_mono.py mono_std_lastdefines" } 
		    }
		}
		readin {
		    standard {
			1 += { "defineLocal tf_name $(tf_ProjectName)"}
			10 += { "defineLocal BASE_PROJ_NAME $tf_ProjectName" }
			1 += { "defineLocal INT_APP_TYPE Monolith"}
			# very last thing, set variable			    
			1000000 += { "defineLocal KIDS_LAST_BASE_PROJ_NAME $tf_ProjectName" }
			1000000 += { "defineLocal LAST_BASE_PROJ_NAME $tf_ProjectName" }
		    }
		}
	    }    
	}
	
	bs_shared_objs {
	    name="Use Shared Libraries"
	    type = "bool"
	    #Disable shared objects for Blackfin
	    %if defined(__ARCH_NAME__) && streq(__ARCH_NAME__,"bf")
	  	show_gui_item = false
	    %endif
	    build_file_setting = "option id:SharedLibraries"
	    choices {
		off {
		    default = true
		    display_name = "-non_shared"
		    build_file_setting_suffix = "-non_shared"
		    actions {
			add {
			    intermediate {
				1 += { "defineLocal SHARED_LIB_STR -non_shared" }
			    }
			    standard {
				11 += { "python ${__DIR__}/int_mono.py mono_bs_shared_objs_add_std" } 
			    }
			}
			edit {
			    intermediate {
				1 += { "defineLocal SHARED_LIB_STR -non_shared" }
			    }
			    standard {
				11 += { "python ${__DIR__}/int_mono.py mono_bs_shared_objs_edit_std" } 
			    }
			}
			readin {
			    standard {
				1 += { "defineLocal SHARED_LIB_STR -non_shared" }
				100000000 += { "defineLocal LAST_SHARED_LIB_STR -non_shared" }
			    }
			}
		    }
		}
		on {
		    display_name = "-call_shared"
		    build_file_setting_suffix = "-call_shared"
		    actions {
			add {
			    intermediate {
				1 += { "defineLocal SHARED_LIB_STR -call_shared" }
			    }
			    standard {
				11 += { "python ${__DIR__}/int_mono.py mono_bs_shared_objs_add_std" } 
			    }
			}
			edit {
			    intermediate {
				1 += { "defineLocal SHARED_LIB_STR -call_shared" }
			    }
			    standard {
				11 += { "python ${__DIR__}/int_mono.py mono_bs_shared_objs_edit_std" } 
			    }
			}
			readin {
			    standard {
				1 += { "defineLocal SHARED_LIB_STR -call_shared" }
				100000000 += { "defineLocal LAST_SHARED_LIB_STR -call_shared" }
			    }
			}
		    }
		}
	    }
	}
#	tf_ProjectDir {
#	    type = "string"
#            host_filename = true
#	    build_file_setting = "filedir $build_file_directory"
#	    pre_populate_action = "python ${__MULTI_DEFAULTS_DIR__}/new_project/components/shared/common.py newproj_find_next_dir" 
#	    sanity_check_action = "python ${__MULTI_DEFAULTS_DIR__}/new_project/components/shared/common.py newproj_sanity_check" 
#	    actions {		
#		readin {
#		    standard {			
#			1 += { "defineLocal PROJ_DIR $tf_ProjectDir" }
#			2 += { "localCalculateAbsolutePath ABS_PROJ_DIR $PROJ_DIR" }			
#			2 += { "localCalculateAbsolutePath ABS_BASE_PROJ_DIR $BASE_PROJ_DIR" }			
#			3 += { "localCalculateRelativePath REL_PROJ_DIR $ABS_BASE_PROJ_DIR $ABS_PROJ_DIR" }
#		    }
#		}
#	    }
#	}

	parent_target {
	    type = "string"
	    actions {
		edit {
		    standard {
			1 += { "python ${__DIR__}/int_mono.py mono_parent_target_edit_std" } 
		    }
		}
	    }
	}
	dd_2_monolith {
	    type = "bool"

	    dlg_info {
		edit {
		    menu_str = "&Create Dynamic Download From Monolith"
		    cmd_str = "EditINTM2DD"
		    dlg_title = "Create Dynamic Download From Monolith"
		    dlg_filelist = "${__DIR__}/int_editmono.plc" 
		    dlg_namelist = "int_dd2m"
		    dlg_doc_included_childlists = false
		    documentation_files =  { "${__DIR__}/docs/mpm_all.gpd" }
		    doc_anchor_ids = { "multi.mpm.dynamic_download_from_monolith" }
		}
	    }
	    choices {
		off {
		    default=true
		    display_name = "off"
		    actions {
			edit.standard {
			    10 += { "python ${__DIR__}/int_mono.py convert_monolith_2_dd_edit_std" }
			}
		    }
		}
		on {
		    display_name = "on"
		    actions {
			edit.standard {
			    10 += { "python ${__DIR__}/int_mono.py convert_monolith_2_dd_edit_std" }
			}
		    }
		}
		
	    }
	}
	tx_dd2minfo {
	    type = "choice"
	    display_name =	"Convert?"
	    choices {
		one {
		   default = true
	  	   display_name =	"Convert?"
		}
	    }
	}		
    }

    actions {
	remove {
	    standard {		    
		10 += { "python ${__DIR__}/int_mono.py mono_remove_std" } 
	    }
	}    
	delete {
	    standard {		    
		10 += { "python ${__DIR__}/int_mono.py mono_delete_std" } 
	    }
	}
	copy_local {
	    standard {
		10 += { "defineLocal COPY_REL_PROJ_DIR $(REL_PROJ_DIR)" }
		10 += { "defineLocal COPY_PROJ_DIR $(PROJ_DIR)" }
		20 += { "python ${__DIR__}/int_mono.py mono_copy_local_std" }
	    }
	}	
	paste_local {
	    standard {
		10 += { "python ${__DIR__}/int_mono.py mono_paste_local_std" }
	    }
	}
	paste_parent_local {
	    standard {
		100 += { "python ${__DIR__}/int_mono.py mono_paste_parent_local_std" }
	    }
	}	
	reload {
	    intermediate {
		10 += { "python ${__DIR__}/int_mono.py mono_reload_int" }

	    }
	    standard {
		1 += { "defineLocal tf_name $tf_ProjectName" }
		1 += { "defineLocal BASE_PROJ_NAME $tf_ProjectName" }
	    	10 += { "python ${__DIR__}/int_mono.py mono_tf_name_edit_std" } 
		10000000 += { "python ${__DIR__}/int_mono.py mono_std_lastdefines" } 
	    }
	}
    }
}

%endif

%endif
